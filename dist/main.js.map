{"version":3,"file":"main.js","mappings":";6BAO+DA,EAAOC,QAG7D,WAAe,aAExB,SAASC,EAAMC,GACb,OAAOA,EAAI,GAAM,CACnB,CACA,MAAMC,EAAM,CAACD,EAAGE,EAAGC,IAAMC,KAAKC,IAAID,KAAKE,IAAIN,EAAGG,GAAID,GAClD,SAASK,EAAIP,GACX,OAAOC,EAAIF,EAAU,KAAJC,GAAW,EAAG,IACjC,CAIA,SAASQ,EAAIR,GACX,OAAOC,EAAIF,EAAU,IAAJC,GAAU,EAAG,IAChC,CACA,SAASS,EAAIT,GACX,OAAOC,EAAIF,EAAMC,EAAI,MAAQ,IAAK,EAAG,EACvC,CACA,SAASU,EAAIV,GACX,OAAOC,EAAIF,EAAU,IAAJC,GAAU,EAAG,IAChC,CAEA,MAAMW,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACrJC,EAAM,IAAI,oBACVC,EAAKN,GAAKK,EAAQ,GAAJL,GACdO,EAAKP,GAAKK,GAAS,IAAJL,IAAa,GAAKK,EAAQ,GAAJL,GACrCQ,EAAKR,IAAW,IAAJA,IAAa,IAAY,GAAJA,GAEvC,SAASS,EAASC,GAChB,IACIC,EADAC,EAAMF,EAAIG,OAmBd,MAjBe,MAAXH,EAAI,KACM,IAARE,GAAqB,IAARA,EACfD,EAAM,CACJG,EAAG,IAAsB,GAAhBtB,EAAMkB,EAAI,IACnBK,EAAG,IAAsB,GAAhBvB,EAAMkB,EAAI,IACnBV,EAAG,IAAsB,GAAhBR,EAAMkB,EAAI,IACnBX,EAAW,IAARa,EAA4B,GAAhBpB,EAAMkB,EAAI,IAAW,KAErB,IAARE,GAAqB,IAARA,IACtBD,EAAM,CACJG,EAAGtB,EAAMkB,EAAI,KAAO,EAAIlB,EAAMkB,EAAI,IAClCK,EAAGvB,EAAMkB,EAAI,KAAO,EAAIlB,EAAMkB,EAAI,IAClCV,EAAGR,EAAMkB,EAAI,KAAO,EAAIlB,EAAMkB,EAAI,IAClCX,EAAW,IAARa,EAAapB,EAAMkB,EAAI,KAAO,EAAIlB,EAAMkB,EAAI,IAAO,OAIrDC,CACT,CAEA,SAASK,EAAUnC,GACjB,IAAIuB,EAzBUvB,IAAK2B,EAAG3B,EAAEiC,IAAMN,EAAG3B,EAAEkC,IAAMP,EAAG3B,EAAEmB,IAAMQ,EAAG3B,EAAEkB,GAyBjDkB,CAAQpC,GAAKyB,EAAKC,EAC1B,OAAO1B,EACH,IAAMuB,EAAEvB,EAAEiC,GAAKV,EAAEvB,EAAEkC,GAAKX,EAAEvB,EAAEmB,GAJpB,EAACD,EAAGK,IAAML,EAAI,IAAMK,EAAEL,GAAK,GAIFmB,CAAMrC,EAAEkB,EAAGK,QAC5Ce,CACN,CAEA,MAAMC,EAAS,+GACf,SAASC,EAASrC,EAAGsC,EAAGvC,GACtB,MAAMgB,EAAIuB,EAAIrC,KAAKE,IAAIJ,EAAG,EAAIA,GACxBqB,EAAI,CAACmB,EAAGC,GAAKD,EAAIvC,EAAI,IAAM,KAAOD,EAAIgB,EAAId,KAAKC,IAAID,KAAKE,IAAIqC,EAAI,EAAG,EAAIA,EAAG,IAAK,GACrF,MAAO,CAACpB,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASqB,EAASzC,EAAGsC,EAAGzC,GACtB,MAAMuB,EAAI,CAACmB,EAAGC,GAAKD,EAAIvC,EAAI,IAAM,IAAMH,EAAIA,EAAIyC,EAAIrC,KAAKC,IAAID,KAAKE,IAAIqC,EAAG,EAAIA,EAAG,GAAI,GACnF,MAAO,CAACpB,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASsB,EAAS1C,EAAG2C,EAAG3B,GACtB,MAAM4B,EAAMP,EAASrC,EAAG,EAAG,IAC3B,IAAI6C,EAMJ,IALIF,EAAI3B,EAAI,IACV6B,EAAI,GAAKF,EAAI3B,GACb2B,GAAKE,EACL7B,GAAK6B,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjBD,EAAIC,IAAM,EAAIF,EAAI3B,EAClB4B,EAAIC,IAAMF,EAEZ,OAAOC,CACT,CAUA,SAASE,EAAQjD,GACf,MACMiC,EAAIjC,EAAEiC,EADE,IAERC,EAAIlC,EAAEkC,EAFE,IAGRf,EAAInB,EAAEmB,EAHE,IAIRd,EAAMD,KAAKC,IAAI4B,EAAGC,EAAGf,GACrBb,EAAMF,KAAKE,IAAI2B,EAAGC,EAAGf,GACrBjB,GAAKG,EAAMC,GAAO,EACxB,IAAIH,EAAGsC,EAAGpB,EAOV,OANIhB,IAAQC,IACVe,EAAIhB,EAAMC,EACVmC,EAAIvC,EAAI,GAAMmB,GAAK,EAAIhB,EAAMC,GAAOe,GAAKhB,EAAMC,GAC/CH,EArBJ,SAAkB8B,EAAGC,EAAGf,EAAGE,EAAGhB,GAC5B,OAAI4B,IAAM5B,GACC6B,EAAIf,GAAKE,GAAMa,EAAIf,EAAI,EAAI,GAElCe,IAAM7B,GACAc,EAAIc,GAAKZ,EAAI,GAEfY,EAAIC,GAAKb,EAAI,CACvB,CAaQ6B,CAASjB,EAAGC,EAAGf,EAAGE,EAAGhB,GACzBF,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAOsC,GAAK,EAAGvC,EACzB,CACA,SAASiD,EAAM5B,EAAGL,EAAGC,EAAGC,GACtB,OACEgC,MAAMC,QAAQnC,GACVK,EAAEL,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChBK,EAAEL,EAAGC,EAAGC,IACZkC,IAAI9C,EACR,CACA,SAAS+C,EAAQpD,EAAGsC,EAAGvC,GACrB,OAAOiD,EAAMX,EAAUrC,EAAGsC,EAAGvC,EAC/B,CACA,SAASsD,EAAQrD,EAAG2C,EAAG3B,GACrB,OAAOgC,EAAMN,EAAU1C,EAAG2C,EAAG3B,EAC/B,CACA,SAASsC,EAAQtD,EAAGsC,EAAGzC,GACrB,OAAOmD,EAAMP,EAAUzC,EAAGsC,EAAGzC,EAC/B,CACA,SAAS0D,EAAIvD,GACX,OAAQA,EAAI,IAAM,KAAO,GAC3B,CACA,SAASwD,EAAS9B,GAChB,MAAM+B,EAAIrB,EAAOsB,KAAKhC,GACtB,IACI7B,EADAkB,EAAI,IAER,IAAK0C,EACH,OAEEA,EAAE,KAAO5D,IACXkB,EAAI0C,EAAE,GAAKrD,GAAKqD,EAAE,IAAMpD,GAAKoD,EAAE,KAEjC,MAAMzD,EAAIuD,GAAKE,EAAE,IACXE,GAAMF,EAAE,GAAK,IACbG,GAAMH,EAAE,GAAK,IAQnB,OANE5D,EADW,QAAT4D,EAAE,GACAJ,EAAQrD,EAAG2D,EAAIC,GACD,QAATH,EAAE,GACPH,EAAQtD,EAAG2D,EAAIC,GAEfR,EAAQpD,EAAG2D,EAAIC,GAEd,CACL9B,EAAGjC,EAAE,GACLkC,EAAGlC,EAAE,GACLmB,EAAGnB,EAAE,GACLkB,EAAGA,EAEP,CACA,SAAS8C,EAAOhE,EAAGiE,GACjB,IAAI9D,EAAI8C,EAAQjD,GAChBG,EAAE,GAAKuD,EAAIvD,EAAE,GAAK8D,GAClB9D,EAAIoD,EAAQpD,GACZH,EAAEiC,EAAI9B,EAAE,GACRH,EAAEkC,EAAI/B,EAAE,GACRH,EAAEmB,EAAIhB,EAAE,EACV,CACA,SAAS+D,EAAUlE,GACjB,IAAKA,EACH,OAEF,MAAMkB,EAAI+B,EAAQjD,GACZG,EAAIe,EAAE,GACNuB,EAAI/B,EAAIQ,EAAE,IACVhB,EAAIQ,EAAIQ,EAAE,IAChB,OAAOlB,EAAEkB,EAAI,IACT,QAAQf,MAAMsC,OAAOvC,OAAOO,EAAIT,EAAEkB,MAClC,OAAOf,MAAMsC,OAAOvC,KAC1B,CAEA,MAAMoD,EAAM,CACVa,EAAG,OACHC,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACH7D,EAAG,KACH8D,EAAG,KACHC,EAAG,KACH9D,EAAG,KACHC,EAAG,QACHC,EAAG,QACH6D,EAAG,KACHC,EAAG,WACH7D,EAAG,KACH8D,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACHjE,EAAG,KACHkE,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAECC,EAAU,CACdC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAmBT,IAAIC,EACJ,SAASC,EAAUjN,GACZgN,IACHA,EApBJ,WACE,MAAME,EAAW,CAAC,EACZC,EAAOC,OAAOD,KAAKxJ,GACnB0J,EAAQD,OAAOD,KAAK1L,GAC1B,IAAIN,EAAGmM,EAAGxM,EAAGyM,EAAIC,EACjB,IAAKrM,EAAI,EAAGA,EAAIgM,EAAKhN,OAAQgB,IAAK,CAEhC,IADAoM,EAAKC,EAAKL,EAAKhM,GACVmM,EAAI,EAAGA,EAAID,EAAMlN,OAAQmN,IAC5BxM,EAAIuM,EAAMC,GACVE,EAAKA,EAAGC,QAAQ3M,EAAGW,EAAIX,IAEzBA,EAAI4M,SAAS/J,EAAQ4J,GAAK,IAC1BL,EAASM,GAAM,CAAC1M,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EACjD,CACA,OAAOoM,CACT,CAKYS,GACRX,EAAMY,YAAc,CAAC,EAAG,EAAG,EAAG,IAEhC,MAAMvO,EAAI2N,EAAMhN,EAAI6N,eACpB,OAAOxO,GAAK,CACVe,EAAGf,EAAE,GACLgB,EAAGhB,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAgB,IAAbA,EAAEc,OAAed,EAAE,GAAK,IAE/B,CAEA,MAAMyO,EAAS,uGACf,SAASC,EAAS/N,GAChB,MAAM+B,EAAI+L,EAAO9L,KAAKhC,GACtB,IACII,EAAGC,EAAGf,EADND,EAAI,IAER,GAAK0C,EAAL,CAGA,GAAIA,EAAE,KAAO3B,EAAG,CACd,MAAMjC,GAAK4D,EAAE,GACb1C,EAAI0C,EAAE,GAAKrD,EAAIP,GAAKC,EAAQ,IAAJD,EAAS,EAAG,IACtC,CAOA,OANAiC,GAAK2B,EAAE,GACP1B,GAAK0B,EAAE,GACPzC,GAAKyC,EAAE,GACP3B,EAAI,KAAO2B,EAAE,GAAKrD,EAAI0B,GAAKhC,EAAIgC,EAAG,EAAG,MACrCC,EAAI,KAAO0B,EAAE,GAAKrD,EAAI2B,GAAKjC,EAAIiC,EAAG,EAAG,MACrCf,EAAI,KAAOyC,EAAE,GAAKrD,EAAIY,GAAKlB,EAAIkB,EAAG,EAAG,MAC9B,CACLc,EAAGA,EACHC,EAAGA,EACHf,EAAGA,EACHD,EAAGA,EAfL,CAiBF,CACA,SAAS2O,EAAU7P,GACjB,OAAOA,IACLA,EAAEkB,EAAI,IACF,QAAQlB,EAAEiC,MAAMjC,EAAEkC,MAAMlC,EAAEmB,MAAMV,EAAIT,EAAEkB,MACtC,OAAOlB,EAAEiC,MAAMjC,EAAEkC,MAAMlC,EAAEmB,KAEjC,CAEA,MAAM2O,EAAK9P,GAAKA,GAAK,SAAgB,MAAJA,EAAqC,MAAzBI,KAAK2P,IAAI/P,EAAG,EAAM,KAAe,KACxEgQ,EAAOhQ,GAAKA,GAAK,OAAUA,EAAI,MAAQI,KAAK2P,KAAK/P,EAAI,MAAS,MAAO,KAa3E,SAASiQ,EAAOjQ,EAAGgD,EAAGkN,GACpB,GAAIlQ,EAAG,CACL,IAAImQ,EAAMlN,EAAQjD,GAClBmQ,EAAInN,GAAK5C,KAAKC,IAAI,EAAGD,KAAKE,IAAI6P,EAAInN,GAAKmN,EAAInN,GAAKkN,EAAa,IAANlN,EAAU,IAAM,IACvEmN,EAAM5M,EAAQ4M,GACdnQ,EAAEiC,EAAIkO,EAAI,GACVnQ,EAAEkC,EAAIiO,EAAI,GACVnQ,EAAEmB,EAAIgP,EAAI,EACZ,CACF,CACA,SAASC,EAAMpQ,EAAGqQ,GAChB,OAAOrQ,EAAIiP,OAAOqB,OAAOD,GAAS,CAAC,EAAGrQ,GAAKA,CAC7C,CACA,SAASuQ,EAAWC,GAClB,IAAIxQ,EAAI,CAACiC,EAAG,EAAGC,EAAG,EAAGf,EAAG,EAAGD,EAAG,KAY9B,OAXIkC,MAAMC,QAAQmN,GACZA,EAAMxO,QAAU,IAClBhC,EAAI,CAACiC,EAAGuO,EAAM,GAAItO,EAAGsO,EAAM,GAAIrP,EAAGqP,EAAM,GAAItP,EAAG,KAC3CsP,EAAMxO,OAAS,IACjBhC,EAAEkB,EAAIV,EAAIgQ,EAAM,OAIpBxQ,EAAIoQ,EAAMI,EAAO,CAACvO,EAAG,EAAGC,EAAG,EAAGf,EAAG,EAAGD,EAAG,KACrCA,EAAIV,EAAIR,EAAEkB,GAEPlB,CACT,CAOA,MAAMyQ,EACJC,YAAYF,GACV,GAAIA,aAAiBC,EACnB,OAAOD,EAET,MAAMG,SAAcH,EACpB,IAAIxQ,EAZR,IAAuB6B,EAaN,WAAT8O,EACF3Q,EAAIuQ,EAAWC,GACG,WAATG,IACT3Q,EAAI4B,EAAS4O,IAAU1B,EAAU0B,KAff,OADD3O,EAgBwC2O,GAfrDI,OAAO,GACNhB,EAAS/N,GAEX8B,EAAS9B,KAcdgP,KAAKC,KAAO9Q,EACZ6Q,KAAKE,SAAW/Q,CAClB,CACIgR,YACF,OAAOH,KAAKE,MACd,CACIhO,UACF,IAAI/C,EAAIoQ,EAAMS,KAAKC,MAInB,OAHI9Q,IACFA,EAAEkB,EAAIT,EAAIT,EAAEkB,IAEPlB,CACT,CACI+C,QAAIkO,GACNJ,KAAKC,KAAOP,EAAWU,EACzB,CACApB,YACE,OAAOgB,KAAKE,OAASlB,EAAUgB,KAAKC,WAAQxO,CAC9C,CACAH,YACE,OAAO0O,KAAKE,OAAS5O,EAAU0O,KAAKC,WAAQxO,CAC9C,CACA4B,YACE,OAAO2M,KAAKE,OAAS7M,EAAU2M,KAAKC,WAAQxO,CAC9C,CACA4O,IAAIC,EAAOC,GACT,GAAID,EAAO,CACT,MAAME,EAAKR,KAAK9N,IACVuO,EAAKH,EAAMpO,IACjB,IAAIwO,EACJ,MAAMC,EAAIJ,IAAWG,EAAK,GAAMH,EAC1BtO,EAAI,EAAI0O,EAAI,EACZtQ,EAAImQ,EAAGnQ,EAAIoQ,EAAGpQ,EACduQ,IAAO3O,EAAI5B,IAAO,EAAI4B,GAAKA,EAAI5B,IAAM,EAAI4B,EAAI5B,IAAM,GAAK,EAC9DqQ,EAAK,EAAIE,EACTJ,EAAGpP,EAAI,IAAOwP,EAAKJ,EAAGpP,EAAIsP,EAAKD,EAAGrP,EAAI,GACtCoP,EAAGnP,EAAI,IAAOuP,EAAKJ,EAAGnP,EAAIqP,EAAKD,EAAGpP,EAAI,GACtCmP,EAAGlQ,EAAI,IAAOsQ,EAAKJ,EAAGlQ,EAAIoQ,EAAKD,EAAGnQ,EAAI,GACtCkQ,EAAGnQ,EAAIsQ,EAAIH,EAAGnQ,GAAK,EAAIsQ,GAAKF,EAAGpQ,EAC/B2P,KAAK9N,IAAMsO,CACb,CACA,OAAOR,IACT,CACAa,YAAYP,EAAOQ,GAIjB,OAHIR,IACFN,KAAKC,KAvGX,SAAqBc,EAAMC,EAAMF,GAC/B,MAAM1P,EAAI+N,EAAKvP,EAAImR,EAAK3P,IAClBC,EAAI8N,EAAKvP,EAAImR,EAAK1P,IAClBf,EAAI6O,EAAKvP,EAAImR,EAAKzQ,IACxB,MAAO,CACLc,EAAGzB,EAAIsP,EAAG7N,EAAI0P,GAAK3B,EAAKvP,EAAIoR,EAAK5P,IAAMA,KACvCC,EAAG1B,EAAIsP,EAAG5N,EAAIyP,GAAK3B,EAAKvP,EAAIoR,EAAK3P,IAAMA,KACvCf,EAAGX,EAAIsP,EAAG3O,EAAIwQ,GAAK3B,EAAKvP,EAAIoR,EAAK1Q,IAAMA,KACvCD,EAAG0Q,EAAK1Q,EAAIyQ,GAAKE,EAAK3Q,EAAI0Q,EAAK1Q,GAEnC,CA6FkBwQ,CAAYb,KAAKC,KAAMK,EAAML,KAAMa,IAE1Cd,IACT,CACAT,QACE,OAAO,IAAIK,EAAMI,KAAK9N,IACxB,CACAV,MAAMnB,GAEJ,OADA2P,KAAKC,KAAK5P,EAAIV,EAAIU,GACX2P,IACT,CACAiB,QAAQ5B,GAGN,OAFYW,KAAKC,KACb5P,GAAK,EAAIgP,EACNW,IACT,CACAkB,YACE,MAAMhP,EAAM8N,KAAKC,KACXkB,EAAMjS,EAAc,GAARgD,EAAId,EAAkB,IAARc,EAAIb,EAAmB,IAARa,EAAI5B,GAEnD,OADA4B,EAAId,EAAIc,EAAIb,EAAIa,EAAI5B,EAAI6Q,EACjBnB,IACT,CACAoB,QAAQ/B,GAGN,OAFYW,KAAKC,KACb5P,GAAK,EAAIgP,EACNW,IACT,CACAqB,SACE,MAAMlS,EAAI6Q,KAAKC,KAIf,OAHA9Q,EAAEiC,EAAI,IAAMjC,EAAEiC,EACdjC,EAAEkC,EAAI,IAAMlC,EAAEkC,EACdlC,EAAEmB,EAAI,IAAMnB,EAAEmB,EACP0P,IACT,CACAsB,QAAQjC,GAEN,OADAD,EAAOY,KAAKC,KAAM,EAAGZ,GACdW,IACT,CACAuB,OAAOlC,GAEL,OADAD,EAAOY,KAAKC,KAAM,GAAIZ,GACfW,IACT,CACAwB,SAASnC,GAEP,OADAD,EAAOY,KAAKC,KAAM,EAAGZ,GACdW,IACT,CACAyB,WAAWpC,GAET,OADAD,EAAOY,KAAKC,KAAM,GAAIZ,GACfW,IACT,CACA7M,OAAOC,GAEL,OADAD,EAAO6M,KAAKC,KAAM7M,GACX4M,IACT,EAGF,SAAS0B,EAAU/B,GACjB,OAAO,IAAIC,EAAMD,EACnB,CAEA,IAAIW,EAAqBlC,OAAOuD,OAAO,CACvCC,UAAW,KACXhC,MAAOA,EACPiC,QAASH,EACTxS,MAAOA,EACPE,IAAKA,EACLM,IAAKA,EACLoS,IAtkBA,SAAa3S,GACX,OAAOC,EAAIF,EAAMC,EAAI,MAAO,EAAG,IACjC,EAqkBAQ,IAAKA,EACLC,IAAKA,EACLC,IAAKA,EACLkB,SAAUA,EACVO,UAAWA,EACXc,QAASA,EACTM,QAASA,EACTC,QAASA,EACTC,QAASA,EACTE,SAAUA,EACVK,OAAQA,EACRE,UAAWA,EACX4K,UAAWA,EACXc,SAAUA,EACVC,UAAWA,IAKX,OAFYZ,OAAOqB,OAAOiC,EAAWpB,EAIpC,CAxmB+EyB,kBCPhF,MAAMC,EAAU,EAAQ,MAClB,MAACC,EAAK,cAAEC,GAAiBF,EAE/BC,EAAME,YAAYD,GAElBlT,EAAOC,QAAUmP,OAAOqB,OAAOwC,EAAOD,+BCGtC,IAAII,EAAkB,EAAQ,KAC9B,EAAQ,KAER,MAAMC,EACFxC,cACIG,KAAKsC,SAAW,KAChBtC,KAAKuC,QAAU,IAAIC,IACnBxC,KAAKyC,UAAW,EAChBzC,KAAK0C,eAAYjR,CACrB,CACHkR,QAAQC,EAAOC,EAAOC,EAAMhD,GACrB,MAAMiD,EAAYF,EAAMG,UAAUlD,GAC5BmD,EAAWJ,EAAMK,SACvBH,EAAUI,SAASC,GAAKA,EAAG,CACnBR,QACAS,QAASR,EAAMQ,QACfJ,WACAK,YAAa/T,KAAKE,IAAIqT,EAAOD,EAAMU,MAAON,MAEtD,CACHO,WACWxD,KAAKsC,WAGTtC,KAAKyC,UAAW,EAChBzC,KAAKsC,SAAWF,EAAgBqB,iBAAiBC,KAAKC,QAAQ,KAC1D3D,KAAK4D,UACL5D,KAAKsC,SAAW,KACZtC,KAAKyC,UACLzC,KAAKwD,UACT,IAER,CACHI,QAAQd,EAAOe,KAAKC,OACb,IAAIC,EAAY,EAChB/D,KAAKuC,QAAQY,SAAQ,CAACN,EAAOD,KACzB,IAAKC,EAAMmB,UAAYnB,EAAMoB,MAAM9S,OAC/B,OAEJ,MAAM8S,EAAQpB,EAAMoB,MACpB,IAEIC,EAFA/R,EAAI8R,EAAM9S,OAAS,EACnBgT,GAAO,EAEX,KAAMhS,GAAK,IAAKA,EACZ+R,EAAOD,EAAM9R,GACT+R,EAAKE,SACDF,EAAKG,OAASxB,EAAMK,WACpBL,EAAMK,SAAWgB,EAAKG,QAE1BH,EAAKI,KAAKxB,GACVqB,GAAO,IAEPF,EAAM9R,GAAK8R,EAAMA,EAAM9S,OAAS,GAChC8S,EAAMM,OAGVJ,IACAvB,EAAMuB,OACNnE,KAAK2C,QAAQC,EAAOC,EAAOC,EAAM,aAEhCmB,EAAM9S,SACP0R,EAAMmB,SAAU,EAChBhE,KAAK2C,QAAQC,EAAOC,EAAOC,EAAM,YACjCD,EAAMQ,SAAU,GAEpBU,GAAaE,EAAM9S,MAAM,IAE7B6O,KAAK0C,UAAYI,EACC,IAAdiB,IACA/D,KAAKyC,UAAW,EAExB,CACH+B,UAAU5B,GACH,MAAM6B,EAASzE,KAAKuC,QACpB,IAAIM,EAAQ4B,EAAOC,IAAI9B,GAavB,OAZKC,IACDA,EAAQ,CACJmB,SAAS,EACTX,SAAS,EACTY,MAAO,GACPjB,UAAW,CACP2B,SAAU,GACVC,SAAU,KAGlBH,EAAOI,IAAIjC,EAAOC,IAEfA,CACX,CACHiC,OAAOlC,EAAOmC,EAAOC,GACdhF,KAAKwE,UAAU5B,GAAOI,UAAU+B,GAAOE,KAAKD,EAChD,CACHE,IAAItC,EAAOqB,GACCA,GAAUA,EAAM9S,QAGrB6O,KAAKwE,UAAU5B,GAAOqB,MAAMgB,QAAQhB,EACxC,CACHkB,IAAIvC,GACG,OAAO5C,KAAKwE,UAAU5B,GAAOqB,MAAM9S,OAAS,CAChD,CACHoS,MAAMX,GACC,MAAMC,EAAQ7C,KAAKuC,QAAQmC,IAAI9B,GAC1BC,IAGLA,EAAMmB,SAAU,EAChBnB,EAAMU,MAAQM,KAAKC,MACnBjB,EAAMK,SAAWL,EAAMoB,MAAMmB,QAAO,CAACC,EAAKC,IAAM/V,KAAKC,IAAI6V,EAAKC,EAAIC,YAAY,GAC9EvF,KAAKwD,WACT,CACAQ,QAAQpB,GACJ,IAAK5C,KAAKyC,SACN,OAAO,EAEX,MAAMI,EAAQ7C,KAAKuC,QAAQmC,IAAI9B,GAC/B,SAAKC,GAAUA,EAAMmB,SAAYnB,EAAMoB,MAAM9S,OAIjD,CACHqU,KAAK5C,GACE,MAAMC,EAAQ7C,KAAKuC,QAAQmC,IAAI9B,GAC/B,IAAKC,IAAUA,EAAMoB,MAAM9S,OACvB,OAEJ,MAAM8S,EAAQpB,EAAMoB,MACpB,IAAI9R,EAAI8R,EAAM9S,OAAS,EACvB,KAAMgB,GAAK,IAAKA,EACZ8R,EAAM9R,GAAGsT,SAEb5C,EAAMoB,MAAQ,GACdjE,KAAK2C,QAAQC,EAAOC,EAAOgB,KAAKC,MAAO,WAC3C,CACH4B,OAAO9C,GACA,OAAO5C,KAAKuC,QAAQoD,OAAO/C,EAC/B,EAEJ,IAAIgD,EAA2B,IAAIvD,EAEnC,MAAMzD,EAAc,cACdiH,EAAgB,CAClBC,QAAQ,CAAC3G,EAAMF,EAAI8G,IACRA,EAAS,GAAM9G,EAAKE,EAElCmB,MAAOnB,EAAMF,EAAI8G,GACV,MAAMC,EAAK5D,EAAgB9B,MAAMnB,GAAQP,GACnC4B,EAAKwF,EAAG7F,OAASiC,EAAgB9B,MAAMrB,GAAML,GACnD,OAAO4B,GAAMA,EAAGL,MAAQK,EAAGH,IAAI2F,EAAID,GAAQzU,YAAc2N,CAC7D,EACAgH,OAAO,CAAC9G,EAAMF,EAAI8G,IACP5G,GAAQF,EAAKE,GAAQ4G,GAGpC,MAAMG,EACFrG,YAAYsG,EAAKC,EAAQC,EAAMpH,GAC3B,MAAMqH,EAAeF,EAAOC,GAC5BpH,EAAKmD,EAAgBmE,QAAQ,CACzBJ,EAAIlH,GACJA,EACAqH,EACAH,EAAIhH,OAER,MAAMA,EAAOiD,EAAgBmE,QAAQ,CACjCJ,EAAIhH,KACJmH,EACArH,IAEJe,KAAKoE,SAAU,EACfpE,KAAKwG,IAAML,EAAI/C,IAAMyC,EAAcM,EAAIrG,aAAeX,GACtDa,KAAKyG,QAAUrE,EAAgBsE,QAAQP,EAAIQ,SAAWvE,EAAgBsE,QAAQE,OAC9E5G,KAAK6G,OAAStX,KAAKuX,MAAMjD,KAAKC,OAASqC,EAAIY,OAAS,IACpD/G,KAAKuF,UAAYvF,KAAKqE,OAAS9U,KAAKuX,MAAMX,EAAIjD,UAC9ClD,KAAKgH,QAAUb,EAAIc,KACnBjH,KAAKkH,QAAUd,EACfpG,KAAKmH,MAAQd,EACbrG,KAAKoH,MAAQjI,EACba,KAAKqH,IAAMpI,EACXe,KAAKsH,eAAY7V,CACrB,CACA8V,SACI,OAAOvH,KAAKoE,OAChB,CACAoD,OAAOrB,EAAKlH,EAAI6D,GACZ,GAAI9C,KAAKoE,QAAS,CACdpE,KAAK2C,SAAQ,GACb,MAAM2D,EAAetG,KAAKkH,QAAQlH,KAAKmH,OACjCM,EAAU3E,EAAO9C,KAAK6G,OACtBa,EAAS1H,KAAKuF,UAAYkC,EAChCzH,KAAK6G,OAAS/D,EACd9C,KAAKuF,UAAYhW,KAAKuX,MAAMvX,KAAKC,IAAIkY,EAAQvB,EAAIjD,WACjDlD,KAAKqE,QAAUoD,EACfzH,KAAKgH,QAAUb,EAAIc,KACnBjH,KAAKqH,IAAMjF,EAAgBmE,QAAQ,CAC/BJ,EAAIlH,GACJA,EACAqH,EACAH,EAAIhH,OAERa,KAAKoH,MAAQhF,EAAgBmE,QAAQ,CACjCJ,EAAIhH,KACJmH,EACArH,GAER,CACJ,CACAwG,SACQzF,KAAKoE,UACLpE,KAAKsE,KAAKT,KAAKC,OACf9D,KAAKoE,SAAU,EACfpE,KAAK2C,SAAQ,GAErB,CACA2B,KAAKxB,GACD,MAAM2E,EAAU3E,EAAO9C,KAAK6G,OACtB3D,EAAWlD,KAAKuF,UAChBc,EAAOrG,KAAKmH,MACZhI,EAAOa,KAAKoH,MACZH,EAAOjH,KAAKgH,MACZ/H,EAAKe,KAAKqH,IAChB,IAAItB,EAEJ,GADA/F,KAAKoE,QAAUjF,IAASF,IAAOgI,GAAQQ,EAAUvE,IAC5ClD,KAAKoE,QAGN,OAFApE,KAAKkH,QAAQb,GAAQpH,OACrBe,KAAK2C,SAAQ,GAGb8E,EAAU,EACVzH,KAAKkH,QAAQb,GAAQlH,GAGzB4G,EAAS0B,EAAUvE,EAAW,EAC9B6C,EAASkB,GAAQlB,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAAS/F,KAAKyG,QAAQlX,KAAKE,IAAI,EAAGF,KAAKC,IAAI,EAAGuW,KAC9C/F,KAAKkH,QAAQb,GAAQrG,KAAKwG,IAAIrH,EAAMF,EAAI8G,GAC5C,CACA4B,OACI,MAAMC,EAAW5H,KAAKsH,YAActH,KAAKsH,UAAY,IACrD,OAAO,IAAIO,SAAQ,CAACC,EAAKC,KACrBH,EAAS3C,KAAK,CACV6C,MACAC,OACF,GAEV,CACApF,QAAQqF,GACJ,MAAMC,EAASD,EAAW,MAAQ,MAC5BJ,EAAW5H,KAAKsH,WAAa,GACnC,IAAI,IAAInV,EAAI,EAAGA,EAAIyV,EAASzW,OAAQgB,IAChCyV,EAASzV,GAAG8V,IAEpB,EAGJ,MAAMC,EACFrI,YAAY+C,EAAOuF,GACfnI,KAAKoI,OAASxF,EACd5C,KAAKqI,YAAc,IAAI7F,IACvBxC,KAAKsI,UAAUH,EACnB,CACAG,UAAUH,GACN,IAAK/F,EAAgBmG,SAASJ,GAC1B,OAEJ,MAAMK,EAAmBpK,OAAOD,KAAKiE,EAAgBqG,SAASC,WACxDC,EAAgB3I,KAAKqI,YAC3BjK,OAAOwK,oBAAoBT,GAAQhF,SAAS0F,IACxC,MAAM1C,EAAMgC,EAAOU,GACnB,IAAKzG,EAAgBmG,SAASpC,GAC1B,OAEJ,MAAM6B,EAAW,CAAC,EAClB,IAAK,MAAMc,KAAUN,EACjBR,EAASc,GAAU3C,EAAI2C,IAE1B1G,EAAgB5P,QAAQ2T,EAAI4C,aAAe5C,EAAI4C,YAAc,CAC1DF,IACD1F,SAASkD,IACJA,IAASwC,GAAQF,EAAcxD,IAAIkB,IACnCsC,EAAc9D,IAAIwB,EAAM2B,EAC5B,GACF,GAEV,CACHgB,gBAAgB5C,EAAQ6C,GACjB,MAAMC,EAAaD,EAAOE,QACpBA,EAwEd,SAA8B/C,EAAQ8C,GAClC,IAAKA,EACD,OAEJ,IAAIC,EAAU/C,EAAO+C,QACrB,GAAKA,EAUL,OANIA,EAAQC,UACRhD,EAAO+C,QAAUA,EAAU/K,OAAOqB,OAAO,CAAC,EAAG0J,EAAS,CAClDC,SAAS,EACTC,YAAa,CAAC,KAGfF,EATH/C,EAAO+C,QAAUD,CAUzB,CAxFwBI,CAAqBlD,EAAQ8C,GAC7C,IAAKC,EACD,MAAO,GAEX,MAAMI,EAAavJ,KAAKwJ,kBAAkBL,EAASD,GAOnD,OANIA,EAAWE,SAwDvB,SAAkBG,EAAYR,GAC1B,MAAM/E,EAAU,GACV7F,EAAOC,OAAOD,KAAK4K,GACzB,IAAI,IAAI5W,EAAI,EAAGA,EAAIgM,EAAKhN,OAAQgB,IAAI,CAChC,MAAMsX,EAAOF,EAAWpL,EAAKhM,IACzBsX,GAAQA,EAAKlC,UACbvD,EAAQiB,KAAKwE,EAAK9B,OAE1B,CACA,OAAOE,QAAQ6B,IAAI1F,EACvB,CAjEY2F,CAASvD,EAAO+C,QAAQE,YAAaH,GAAYU,MAAK,KAClDxD,EAAO+C,QAAUD,CAAU,IAC5B,SAGAK,CACX,CACHC,kBAAkBpD,EAAQ6C,GACnB,MAAMN,EAAgB3I,KAAKqI,YACrBkB,EAAa,GACbvF,EAAUoC,EAAOiD,cAAgBjD,EAAOiD,YAAc,CAAC,GACvDQ,EAAQzL,OAAOD,KAAK8K,GACpBnG,EAAOe,KAAKC,MAClB,IAAI3R,EACJ,IAAIA,EAAI0X,EAAM1Y,OAAS,EAAGgB,GAAK,IAAKA,EAAE,CAClC,MAAMkU,EAAOwD,EAAM1X,GACnB,GAAuB,MAAnBkU,EAAKtG,OAAO,GACZ,SAEJ,GAAa,YAATsG,EAAoB,CACpBkD,EAAWtE,QAAQjF,KAAKgJ,gBAAgB5C,EAAQ6C,IAChD,QACJ,CACA,MAAMa,EAAQb,EAAO5C,GACrB,IAAIqC,EAAY1E,EAAQqC,GACxB,MAAMF,EAAMwC,EAAcjE,IAAI2B,GAC9B,GAAIqC,EAAW,CACX,GAAIvC,GAAOuC,EAAUnB,SAAU,CAC3BmB,EAAUlB,OAAOrB,EAAK2D,EAAOhH,GAC7B,QACJ,CACI4F,EAAUjD,QAElB,CACKU,GAAQA,EAAIjD,UAIjBc,EAAQqC,GAAQqC,EAAY,IAAIxC,EAAUC,EAAKC,EAAQC,EAAMyD,GAC7DP,EAAWtE,KAAKyD,IAJZtC,EAAOC,GAAQyD,CAKvB,CACA,OAAOP,CACX,CACH/B,OAAOpB,EAAQ6C,GACR,GAA8B,IAA1BjJ,KAAKqI,YAAY0B,KAEjB,YADA3L,OAAOqB,OAAO2G,EAAQ6C,GAG1B,MAAMM,EAAavJ,KAAKwJ,kBAAkBpD,EAAQ6C,GAClD,OAAIM,EAAWpY,QACXyU,EAASV,IAAIlF,KAAKoI,OAAQmB,IACnB,QAFX,CAIJ,EA+BJ,SAASS,EAAUC,EAAOC,GACtB,MAAMC,EAAOF,GAASA,EAAMd,SAAW,CAAC,EAClCiB,EAAUD,EAAKC,QACf3a,OAAmBgC,IAAb0Y,EAAK1a,IAAoBya,EAAkB,EACjD1a,OAAmBiC,IAAb0Y,EAAK3a,IAAoB0a,EAAkB,EACvD,MAAO,CACH3G,MAAO6G,EAAU5a,EAAMC,EACvB4a,IAAKD,EAAU3a,EAAMD,EAE7B,CAgCA,SAAS8a,EAAwB1H,EAAO2H,GACpC,MAAMpM,EAAO,GACPqM,EAAW5H,EAAM6H,uBAAuBF,GAC9C,IAAIpY,EAAGuY,EACP,IAAIvY,EAAI,EAAGuY,EAAOF,EAASrZ,OAAQgB,EAAIuY,IAAQvY,EAC3CgM,EAAK8G,KAAKuF,EAASrY,GAAGwY,OAE1B,OAAOxM,CACX,CACA,SAASyM,EAAWC,EAAOf,EAAOgB,EAAS3B,EAAU,CAAC,GAClD,MAAMhL,EAAO0M,EAAM1M,KACb4M,EAA8B,WAAjB5B,EAAQ6B,KAC3B,IAAI7Y,EAAGuY,EAAMO,EAAcC,EAC3B,GAAc,OAAVpB,EAAJ,CAGA,IAAI3X,EAAI,EAAGuY,EAAOvM,EAAKhN,OAAQgB,EAAIuY,IAAQvY,EAAE,CAEzC,GADA8Y,GAAgB9M,EAAKhM,GACjB8Y,IAAiBH,EAAS,CAC1B,GAAI3B,EAAQO,IACR,SAEJ,KACJ,CACAwB,EAAaL,EAAM5B,OAAOgC,GACtB7I,EAAgB+I,eAAeD,KAAgBH,GAAwB,IAAVjB,GAAe1H,EAAgBgJ,KAAKtB,KAAW1H,EAAgBgJ,KAAKF,MACjIpB,GAASoB,EAEjB,CACA,OAAOpB,CAdP,CAeJ,CAcA,SAASuB,EAAUpB,EAAOqB,GACtB,MAAMC,EAAUtB,GAASA,EAAMd,QAAQoC,QACvC,OAAOA,QAAuB9Z,IAAZ8Z,QAAwC9Z,IAAf6Z,EAAKT,KACpD,CAWA,SAASW,EAAiBC,EAAQC,EAAUC,GACxC,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,CAAC,GAC1D,OAAOE,EAASD,KAAgBC,EAASD,GAAc,CAAC,EAC5D,CACA,SAASE,EAAoBhB,EAAOiB,EAAQC,EAAUjM,GAClD,IAAK,MAAMwL,KAAQQ,EAAOE,wBAAwBlM,GAAMsK,UAAU,CAC9D,MAAMN,EAAQe,EAAMS,EAAKX,OACzB,GAAIoB,GAAYjC,EAAQ,IAAMiC,GAAYjC,EAAQ,EAC9C,OAAOwB,EAAKX,KAEpB,CACA,OAAO,IACX,CACA,SAASsB,EAAaC,EAAYC,GAC9B,MAAM,MAAEvJ,EAAQwJ,YAAad,GAAUY,EACjCT,EAAS7I,EAAMyJ,UAAYzJ,EAAMyJ,QAAU,CAAC,IAC5C,OAAEC,EAAO,OAAER,EAASnB,MAAOM,GAAkBK,EAC7CiB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACf3D,EA7BV,SAAqB6D,EAAYC,EAAYrB,GACzC,MAAO,GAAGoB,EAAWE,MAAMD,EAAWC,MAAMtB,EAAKT,OAASS,EAAKxL,MACnE,CA2BgB+M,CAAYP,EAAQR,EAAQR,GAClCZ,EAAOyB,EAAOhb,OACpB,IAAI0Z,EACJ,IAAI,IAAI1Y,EAAI,EAAGA,EAAIuY,IAAQvY,EAAE,CACzB,MAAM+R,EAAOiI,EAAOha,IACZ,CAACoa,GAAQ5B,EAAQ,CAAC8B,GAAQ3C,GAAW5F,EAE7C2G,GADmB3G,EAAKmI,UAAYnI,EAAKmI,QAAU,CAAC,IACjCI,GAASjB,EAAiBC,EAAQ5C,EAAK8B,GAC1DE,EAAMI,GAAgBnB,EACtBe,EAAMiC,KAAOjB,EAAoBhB,EAAOiB,GAAQ,EAAMR,EAAKxL,MAC3D+K,EAAMkC,QAAUlB,EAAoBhB,EAAOiB,GAAQ,EAAOR,EAAKxL,OAC1C+K,EAAMmC,gBAAkBnC,EAAMmC,cAAgB,CAAC,IACvD/B,GAAgBnB,CACjC,CACJ,CACA,SAASmD,EAAgBrK,EAAO4J,GAC5B,MAAMU,EAAStK,EAAMsK,OACrB,OAAO9O,OAAOD,KAAK+O,GAAQC,QAAQtE,GAAMqE,EAAOrE,GAAK2D,OAASA,IAAMY,OACxE,CAuBA,SAASC,EAAY/B,EAAMrH,GACvB,MAAMgH,EAAeK,EAAKY,WAAWvB,MAC/B6B,EAAOlB,EAAKQ,QAAUR,EAAKQ,OAAOU,KACxC,GAAKA,EAAL,CAGAvI,EAAQA,GAASqH,EAAKgC,QACtB,IAAK,MAAMnB,KAAUlI,EAAM,CACvB,MAAMwH,EAASU,EAAOE,QACtB,IAAKZ,QAA2Bha,IAAjBga,EAAOe,SAAsD/a,IAA/Bga,EAAOe,GAAMvB,GACtD,cAEGQ,EAAOe,GAAMvB,QACexZ,IAA/Bga,EAAOe,GAAMQ,oBAA4Evb,IAA7Cga,EAAOe,GAAMQ,cAAc/B,WAChEQ,EAAOe,GAAMQ,cAAc/B,EAE1C,CAXA,CAYJ,CACA,MAAMsC,EAAsBvC,GAAgB,UAATA,GAA6B,SAATA,EACjDwC,EAAmB,CAACC,EAAQC,IAASA,EAASD,EAASrP,OAAOqB,OAAO,CAAC,EAAGgO,GAK/E,MAAME,EACLC,gBAAkB,CAAC,EACnBA,0BAA4B,KAC5BA,uBAAyB,KACzB/N,YAAY+C,EAAOqI,GACZjL,KAAK4C,MAAQA,EACb5C,KAAK6N,KAAOjL,EAAMkL,IAClB9N,KAAK2K,MAAQM,EACbjL,KAAK+N,gBAAkB,CAAC,EACxB/N,KAAKoM,YAAcpM,KAAKgO,UACxBhO,KAAKiO,MAAQjO,KAAKoM,YAAYtM,KAC9BE,KAAKmJ,aAAU1X,EACduO,KAAKkO,UAAW,EACjBlO,KAAKmO,WAAQ1c,EACbuO,KAAKoO,iBAAc3c,EACnBuO,KAAKqO,oBAAiB5c,EACtBuO,KAAKsO,gBAAa7c,EAClBuO,KAAKuO,gBAAa9c,EAClBuO,KAAKwO,qBAAsB,EAC3BxO,KAAKyO,oBAAqB,EAC1BzO,KAAK0O,cAAWjd,EAChBuO,KAAK2O,UAAY,GACjB3O,KAAK4O,8BAAgCA,mBACrC5O,KAAK6O,2BAA6BA,gBAClC7O,KAAK8O,YACT,CACAA,aACI,MAAMxD,EAAOtL,KAAKoM,YAClBpM,KAAKsI,YACLtI,KAAK+O,aACLzD,EAAK0D,SAAW3D,EAAUC,EAAKQ,OAAQR,GACvCtL,KAAKiP,cACDjP,KAAKmJ,QAAQ+F,OAASlP,KAAK4C,MAAMuM,gBAAgB,WACjDC,QAAQC,KAAK,qKAErB,CACAC,YAAYrE,GACJjL,KAAK2K,QAAUM,GACfoC,EAAYrN,KAAKoM,aAErBpM,KAAK2K,MAAQM,CACjB,CACA8D,aACI,MAAMnM,EAAQ5C,KAAK4C,MACb0I,EAAOtL,KAAKoM,YACZmD,EAAUvP,KAAKwP,aACfC,EAAW,CAACjD,EAAMlZ,EAAGoc,EAAGte,IAAa,MAATob,EAAelZ,EAAa,MAATkZ,EAAepb,EAAIse,EAClEC,EAAMrE,EAAKsE,QAAUxN,EAAgByN,eAAeN,EAAQK,QAAS3C,EAAgBrK,EAAO,MAC5FkN,EAAMxE,EAAKyE,QAAU3N,EAAgByN,eAAeN,EAAQQ,QAAS9C,EAAgBrK,EAAO,MAC5FoN,EAAM1E,EAAK2E,QAAU7N,EAAgByN,eAAeN,EAAQU,QAAShD,EAAgBrK,EAAO,MAC5FsN,EAAY5E,EAAK4E,UACjBC,EAAM7E,EAAK8E,QAAUX,EAASS,EAAWP,EAAKG,EAAKE,GACnDK,EAAM/E,EAAKgF,QAAUb,EAASS,EAAWJ,EAAKH,EAAKK,GACzD1E,EAAKiF,OAASvQ,KAAKwQ,cAAcb,GACjCrE,EAAKmF,OAASzQ,KAAKwQ,cAAcV,GACjCxE,EAAKoF,OAAS1Q,KAAKwQ,cAAcR,GACjC1E,EAAKgB,OAAStM,KAAKwQ,cAAcL,GACjC7E,EAAKQ,OAAS9L,KAAKwQ,cAAcH,EACrC,CACAb,aACI,OAAOxP,KAAK4C,MAAM+N,KAAKC,SAAS5Q,KAAK2K,MACzC,CACAqD,UACI,OAAOhO,KAAK4C,MAAMiO,eAAe7Q,KAAK2K,MAC1C,CACH6F,cAAcM,GACP,OAAO9Q,KAAK4C,MAAMsK,OAAO4D,EAC7B,CACHC,eAAe9G,GACR,MAAMqB,EAAOtL,KAAKoM,YAClB,OAAOnC,IAAUqB,EAAKgB,OAAShB,EAAKQ,OAASR,EAAKgB,MACtD,CACA0E,QACIhR,KAAK4D,QAAQ,QACjB,CACHqN,WACO,MAAM3F,EAAOtL,KAAKoM,YACdpM,KAAKmO,OACL/L,EAAgB8O,oBAAoBlR,KAAKmO,MAAOnO,MAEhDsL,EAAK0D,UACL3B,EAAY/B,EAEpB,CACH6F,aACO,MAAM5B,EAAUvP,KAAKwP,aACfmB,EAAOpB,EAAQoB,OAASpB,EAAQoB,KAAO,IACvCxC,EAAQnO,KAAKmO,MACnB,GAAI/L,EAAgBmG,SAASoI,GACzB3Q,KAAKmO,MAxMjB,SAAkCwC,GAC9B,MAAMxS,EAAOC,OAAOD,KAAKwS,GACnBS,EAAQ,IAAI7e,MAAM4L,EAAKhN,QAC7B,IAAIgB,EAAGuY,EAAM7B,EACb,IAAI1W,EAAI,EAAGuY,EAAOvM,EAAKhN,OAAQgB,EAAIuY,IAAQvY,EACvC0W,EAAM1K,EAAKhM,GACXif,EAAMjf,GAAK,CACPmB,EAAGuV,EACH6G,EAAGiB,EAAK9H,IAGhB,OAAOuI,CACX,CA4LyBC,CAAyBV,QACnC,GAAIxC,IAAUwC,EAAM,CACvB,GAAIxC,EAAO,CACP/L,EAAgB8O,oBAAoB/C,EAAOnO,MAC3C,MAAMsL,EAAOtL,KAAKoM,YAClBiB,EAAY/B,GACZA,EAAKgC,QAAU,EACnB,CACIqD,GAAQvS,OAAOkT,aAAaX,IAC5BvO,EAAgBmP,kBAAkBZ,EAAM3Q,MAE5CA,KAAK2O,UAAY,GACjB3O,KAAKmO,MAAQwC,CACjB,CACJ,CACA1B,cACI,MAAM3D,EAAOtL,KAAKoM,YAClBpM,KAAKmR,aACDnR,KAAK4O,qBACLtD,EAAKiE,QAAU,IAAIvP,KAAK4O,mBAEhC,CACA4C,sBAAsBC,GAClB,MAAMnG,EAAOtL,KAAKoM,YACZmD,EAAUvP,KAAKwP,aACrB,IAAIkC,GAAe,EACnB1R,KAAKmR,aACL,MAAMQ,EAAarG,EAAK0D,SACxB1D,EAAK0D,SAAW3D,EAAUC,EAAKQ,OAAQR,GACnCA,EAAKT,QAAU0E,EAAQ1E,QACvB6G,GAAe,EACfrE,EAAY/B,GACZA,EAAKT,MAAQ0E,EAAQ1E,OAEzB7K,KAAK4R,gBAAgBH,IACjBC,GAAgBC,IAAerG,EAAK0D,WACpC/C,EAAajM,KAAMsL,EAAKgC,QAEhC,CACHhF,YACO,MAAMH,EAASnI,KAAK4C,MAAMuF,OACpB0J,EAAY1J,EAAO2J,iBAAiB9R,KAAKiO,OACzC8D,EAAS5J,EAAO6J,gBAAgBhS,KAAKwP,aAAcqC,GAAW,GACpE7R,KAAKmJ,QAAUhB,EAAO8J,eAAeF,EAAQ/R,KAAKkS,cAClDlS,KAAKkO,SAAWlO,KAAKmJ,QAAQgJ,QAC7BnS,KAAK+N,gBAAkB,CAAC,CAC5B,CACHqE,MAAM7O,EAAO8O,GACN,MAAQjG,YAAad,EAAO6C,MAAOwC,GAAU3Q,MACvC,OAAEsM,EAAO,SAAE0C,GAAc1D,EACzBiB,EAAQD,EAAOE,KACrB,IAEIra,EAAGmT,EAAK6G,EAFRmG,EAAmB,IAAV/O,GAAe8O,IAAU1B,EAAKxf,QAAgBma,EAAKiH,QAC5DC,EAAOjP,EAAQ,GAAK+H,EAAKgC,QAAQ/J,EAAQ,GAE7C,IAAsB,IAAlBvD,KAAKkO,SACL5C,EAAKgC,QAAUqD,EACfrF,EAAKiH,SAAU,EACfpG,EAASwE,MACN,CAECxE,EADA/J,EAAgB5P,QAAQme,EAAKpN,IACpBvD,KAAKyS,eAAenH,EAAMqF,EAAMpN,EAAO8O,GACzCjQ,EAAgBmG,SAASoI,EAAKpN,IAC5BvD,KAAK0S,gBAAgBpH,EAAMqF,EAAMpN,EAAO8O,GAExCrS,KAAK2S,mBAAmBrH,EAAMqF,EAAMpN,EAAO8O,GAExD,MAAMO,EAA6B,IAAmB,OAAftN,EAAIiH,IAAmBiG,GAAQlN,EAAIiH,GAASiG,EAAKjG,GACxF,IAAIpa,EAAI,EAAGA,EAAIkgB,IAASlgB,EACpBmZ,EAAKgC,QAAQnb,EAAIoR,GAAS+B,EAAM6G,EAAOha,GACnCmgB,IACIM,MACAN,GAAS,GAEbE,EAAOlN,GAGfgG,EAAKiH,QAAUD,CACnB,CACItD,GACA/C,EAAajM,KAAMmM,EAE3B,CACHwG,mBAAmBrH,EAAMqF,EAAMpN,EAAO8O,GAC/B,MAAM,OAAE/F,EAAO,OAAER,GAAYR,EACvBiB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACfqG,EAASvG,EAAOwG,YAChBC,EAAczG,IAAWR,EACzBK,EAAS,IAAI5Z,MAAM8f,GACzB,IAAIlgB,EAAGuY,EAAMC,EACb,IAAIxY,EAAI,EAAGuY,EAAO2H,EAAOlgB,EAAIuY,IAAQvY,EACjCwY,EAAQxY,EAAIoR,EACZ4I,EAAOha,GAAK,CACR,CAACoa,GAAQwG,GAAezG,EAAO8F,MAAMS,EAAOlI,GAAQA,GACpD,CAAC8B,GAAQX,EAAOsG,MAAMzB,EAAKhG,GAAQA,IAG3C,OAAOwB,CACX,CACHsG,eAAenH,EAAMqF,EAAMpN,EAAO8O,GAC3B,MAAM,OAAE9B,EAAO,OAAEE,GAAYnF,EACvBa,EAAS,IAAI5Z,MAAM8f,GACzB,IAAIlgB,EAAGuY,EAAMC,EAAOzG,EACpB,IAAI/R,EAAI,EAAGuY,EAAO2H,EAAOlgB,EAAIuY,IAAQvY,EACjCwY,EAAQxY,EAAIoR,EACZW,EAAOyM,EAAKhG,GACZwB,EAAOha,GAAK,CACRmB,EAAGid,EAAO6B,MAAMlO,EAAK,GAAIyG,GACzB+E,EAAGe,EAAO2B,MAAMlO,EAAK,GAAIyG,IAGjC,OAAOwB,CACX,CACHuG,gBAAgBpH,EAAMqF,EAAMpN,EAAO8O,GAC5B,MAAM,OAAE9B,EAAO,OAAEE,GAAYnF,GACvB,SAAE0H,EAAU,IAAI,SAAEC,EAAU,KAASjT,KAAKkO,SAC1C/B,EAAS,IAAI5Z,MAAM8f,GACzB,IAAIlgB,EAAGuY,EAAMC,EAAOzG,EACpB,IAAI/R,EAAI,EAAGuY,EAAO2H,EAAOlgB,EAAIuY,IAAQvY,EACjCwY,EAAQxY,EAAIoR,EACZW,EAAOyM,EAAKhG,GACZwB,EAAOha,GAAK,CACRmB,EAAGid,EAAO6B,MAAMhQ,EAAgB8Q,iBAAiBhP,EAAM8O,GAAWrI,GAClE+E,EAAGe,EAAO2B,MAAMhQ,EAAgB8Q,iBAAiBhP,EAAM+O,GAAWtI,IAG1E,OAAOwB,CACX,CACHgH,UAAUxI,GACH,OAAO3K,KAAKoM,YAAYkB,QAAQ3C,EACpC,CACHyI,eAAezI,GACR,OAAO3K,KAAKoM,YAAYuE,KAAKhG,EACjC,CACHC,WAAWX,EAAOkC,EAAQnB,GACnB,MAAMpI,EAAQ5C,KAAK4C,MACb0I,EAAOtL,KAAKoM,YACZtC,EAAQqC,EAAOlC,EAAMuC,MAK3B,OAAO5B,EAJO,CACVzM,KAAMmM,EAAwB1H,GAAO,GACrCqG,OAAQkD,EAAOE,QAAQpC,EAAMuC,MAAMQ,eAEdlD,EAAOwB,EAAKX,MAAO,CACxCK,QAER,CACHqI,sBAAsBC,EAAOrJ,EAAOkC,EAAQtB,GACrC,MAAM0I,EAAcpH,EAAOlC,EAAMuC,MACjC,IAAI1C,EAAwB,OAAhByJ,EAAuBC,IAAMD,EACzC,MAAMtK,EAAS4B,GAASsB,EAAOE,QAAQpC,EAAMuC,MACzC3B,GAAS5B,IACT4B,EAAM5B,OAASA,EACfa,EAAQc,EAAWC,EAAO0I,EAAavT,KAAKoM,YAAYzB,QAE5D2I,EAAM7jB,IAAMF,KAAKE,IAAI6jB,EAAM7jB,IAAKqa,GAChCwJ,EAAM9jB,IAAMD,KAAKC,IAAI8jB,EAAM9jB,IAAKsa,EACpC,CACH2J,UAAUxJ,EAAOyJ,GACV,MAAMpI,EAAOtL,KAAKoM,YACZkB,EAAUhC,EAAKgC,QACfgF,EAAShH,EAAKiH,SAAWtI,IAAUqB,EAAKgB,OACxC5B,EAAO4C,EAAQnc,OACfwiB,EAAa3T,KAAK+Q,eAAe9G,GACjCY,EAhQM,EAAC6I,EAAUpI,EAAM1I,IAAQ8Q,IAAapI,EAAKsI,QAAUtI,EAAK0D,UAAY,CAClF7Q,KAAMmM,EAAwB1H,GAAO,GACrCqG,OAAQ,MA8PM4K,CAAYH,EAAUpI,EAAMtL,KAAK4C,OACzC0Q,EAAQ,CACV7jB,IAAKqkB,OAAOC,kBACZvkB,IAAKskB,OAAOE,oBAERvkB,IAAKwkB,EAAWzkB,IAAK0kB,GA5VrC,SAAuBjK,GACnB,MAAM,IAAExa,EAAI,IAAED,EAAI,WAAE2kB,EAAW,WAAEC,GAAgBnK,EAAMoK,gBACvD,MAAO,CACH5kB,IAAK0kB,EAAa1kB,EAAMqkB,OAAOE,kBAC/BxkB,IAAK4kB,EAAa5kB,EAAMskB,OAAOC,kBAEvC,CAsVmDM,CAAcV,GACzD,IAAIxhB,EAAGga,EACP,SAASmI,IACLnI,EAASmB,EAAQnb,GACjB,MAAM+Y,EAAaiB,EAAOwH,EAAWnH,MACrC,OAAQpK,EAAgB+I,eAAegB,EAAOlC,EAAMuC,QAAUyH,EAAW/I,GAAcgJ,EAAWhJ,CACtG,CACA,IAAI/Y,EAAI,EAAGA,EAAIuY,IACP4J,MAGJtU,KAAKqT,sBAAsBC,EAAOrJ,EAAOkC,EAAQtB,IAC7CyH,MALengB,GASvB,GAAImgB,EACA,IAAIngB,EAAIuY,EAAO,EAAGvY,GAAK,IAAKA,EACxB,IAAImiB,IAAJ,CAGAtU,KAAKqT,sBAAsBC,EAAOrJ,EAAOkC,EAAQtB,GACjD,KAFA,CAKR,OAAOyI,CACX,CACAiB,mBAAmBtK,GACf,MAAMkC,EAASnM,KAAKoM,YAAYkB,QAC1BrE,EAAS,GACf,IAAI9W,EAAGuY,EAAMZ,EACb,IAAI3X,EAAI,EAAGuY,EAAOyB,EAAOhb,OAAQgB,EAAIuY,IAAQvY,EACzC2X,EAAQqC,EAAOha,GAAG8X,EAAMuC,MACpBpK,EAAgB+I,eAAerB,IAC/Bb,EAAOhE,KAAK6E,GAGpB,OAAOb,CACX,CACHuL,iBACO,OAAO,CACX,CACHC,iBAAiB9J,GACV,MAAMW,EAAOtL,KAAKoM,YACZE,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACdK,EAASnM,KAAKmT,UAAUxI,GAC9B,MAAO,CACH+J,MAAOpI,EAAS,GAAKA,EAAOqI,iBAAiBxI,EAAOG,EAAOE,OAAS,GACpE1C,MAAOgC,EAAS,GAAKA,EAAO6I,iBAAiBxI,EAAOL,EAAOU,OAAS,GAE5E,CACH5I,QAAQoH,GACD,MAAMM,EAAOtL,KAAKoM,YAClBpM,KAAKwH,OAAOwD,GAAQ,WACpBM,EAAKsJ,MAxdb,SAAgB9K,GACZ,IAAIhJ,EAAG1P,EAAGd,EAAGjB,EASb,OARI+S,EAAgBmG,SAASuB,IACzBhJ,EAAIgJ,EAAM+K,IACVzjB,EAAI0Y,EAAMgL,MACVxkB,EAAIwZ,EAAMiL,OACV1lB,EAAIya,EAAMkL,MAEVlU,EAAI1P,EAAId,EAAIjB,EAAIya,EAEb,CACH+K,IAAK/T,EACLgU,MAAO1jB,EACP2jB,OAAQzkB,EACR0kB,KAAM3lB,EACN4lB,UAAoB,IAAVnL,EAElB,CAucqBoL,CAAO9S,EAAgByN,eAAe7P,KAAKmJ,QAAQgM,KArexE,SAAqB5E,EAAQE,EAAQvG,GACjC,IAAwB,IAApBA,EACA,OAAO,EAEX,MAAM5W,EAAI0W,EAAUuG,EAAQrG,GACtBwF,EAAI1F,EAAUyG,EAAQvG,GAC5B,MAAO,CACH2K,IAAKnF,EAAErF,IACPyK,MAAOxhB,EAAE+W,IACT0K,OAAQrF,EAAEnM,MACVyR,KAAM1hB,EAAEiQ,MAEhB,CAyd8E6R,CAAY9J,EAAKiF,OAAQjF,EAAKmF,OAAQzQ,KAAKwU,mBACrH,CACHhN,OAAOwD,GAAO,CACX7G,OACI,MAAM2J,EAAM9N,KAAK6N,KACXjL,EAAQ5C,KAAK4C,MACb0I,EAAOtL,KAAKoM,YACZiJ,EAAW/J,EAAKqF,MAAQ,GACxB2E,EAAO1S,EAAM2S,UACbhO,EAAS,GACThE,EAAQvD,KAAKsO,YAAc,EAC3B+D,EAAQrS,KAAKuO,YAAc8G,EAASlkB,OAASoS,EAC7CiS,EAA0BxV,KAAKmJ,QAAQqM,wBAC7C,IAAIrjB,EAIJ,IAHImZ,EAAKiE,SACLjE,EAAKiE,QAAQpL,KAAK2J,EAAKwH,EAAM/R,EAAO8O,GAEpClgB,EAAIoR,EAAOpR,EAAIoR,EAAQ8O,IAASlgB,EAAE,CAClC,MAAMsjB,EAAUJ,EAASljB,GACrBsjB,EAAQ7B,SAGR6B,EAAQlO,QAAUiO,EAClBjO,EAAOtC,KAAKwQ,GAEZA,EAAQtR,KAAK2J,EAAKwH,GAE1B,CACA,IAAInjB,EAAI,EAAGA,EAAIoV,EAAOpW,SAAUgB,EAC5BoV,EAAOpV,GAAGgS,KAAK2J,EAAKwH,EAE5B,CACHI,SAAS/K,EAAOpD,GACT,MAAMyD,EAAOzD,EAAS,SAAW,UACjC,YAAiB9V,IAAVkZ,GAAuB3K,KAAKoM,YAAYmD,QAAUvP,KAAK2V,6BAA6B3K,GAAQhL,KAAK4V,0BAA0BjL,GAAS,EAAGK,EAClJ,CACHkH,WAAWvH,EAAOpD,EAAQyD,GACnB,MAAMuE,EAAUvP,KAAKwP,aACrB,IAAIqG,EACJ,GAAIlL,GAAS,GAAKA,EAAQ3K,KAAKoM,YAAYuE,KAAKxf,OAAQ,CACpD,MAAMskB,EAAUzV,KAAKoM,YAAYuE,KAAKhG,GACtCkL,EAAUJ,EAAQ/G,WAAa+G,EAAQ/G,SArYnD,SAA2BoH,EAAQnL,EAAO8K,GACtC,OAAOrT,EAAgB2T,cAAcD,EAAQ,CACzCvO,QAAQ,EACRyO,UAAWrL,EACXwB,YAAQ1a,EACRwkB,SAAKxkB,EACLgkB,UACA9K,QACAK,KAAM,UACNlL,KAAM,QAEd,CA0X8DoW,CAAkBlW,KAAKkS,aAAcvH,EAAO8K,IAC9FI,EAAQ1J,OAASnM,KAAKmT,UAAUxI,GAChCkL,EAAQI,IAAM1G,EAAQoB,KAAKhG,GAC3BkL,EAAQlL,MAAQkL,EAAQG,UAAYrL,CACxC,MACIkL,EAAU7V,KAAK0O,WAAa1O,KAAK0O,SApZ7C,SAA8BoH,EAAQnL,GAClC,OAAOvI,EAAgB2T,cAAcD,EAAQ,CACzCvO,QAAQ,EACRgI,aAAS9d,EACTwZ,aAAcN,EACdA,QACAK,KAAM,UACNlL,KAAM,WAEd,CA2YwDqW,CAAqBnW,KAAK4C,MAAMsP,aAAclS,KAAK2K,QAC/FkL,EAAQtG,QAAUA,EAClBsG,EAAQlL,MAAQkL,EAAQ5K,aAAejL,KAAK2K,MAIhD,OAFAkL,EAAQtO,SAAWA,EACnBsO,EAAQ7K,KAAOA,EACR6K,CACX,CACHF,6BAA6B3K,GACtB,OAAOhL,KAAKoW,uBAAuBpW,KAAK4O,mBAAmBhC,GAAI5B,EACnE,CACH4K,0BAA0BjL,EAAOK,GAC1B,OAAOhL,KAAKoW,uBAAuBpW,KAAK6O,gBAAgBjC,GAAI5B,EAAML,EACtE,CACHyL,uBAAuBC,EAAarL,EAAO,UAAWL,GAC/C,MAAMpD,EAAkB,WAATyD,EACTsL,EAAQtW,KAAK+N,gBACbwI,EAAWF,EAAc,IAAMrL,EAC/ByC,EAAS6I,EAAMC,GACfC,EAAUxW,KAAKwO,qBAAuBpM,EAAgBqU,QAAQ9L,GACpE,GAAI8C,EACA,OAAOD,EAAiBC,EAAQ+I,GAEpC,MAAMrO,EAASnI,KAAK4C,MAAMuF,OACpB0J,EAAY1J,EAAOuO,wBAAwB1W,KAAKiO,MAAOoI,GACvDM,EAAWpP,EAAS,CACtB,GAAG8O,SACH,QACAA,EACA,IACA,CACAA,EACA,IAEEtE,EAAS5J,EAAO6J,gBAAgBhS,KAAKwP,aAAcqC,GACnD7T,EAAQI,OAAOD,KAAKiE,EAAgBqG,SAAS4M,SAASgB,IAEtDpN,EAASd,EAAOyO,oBAAoB7E,EAAQ/T,GADlC,IAAIgC,KAAKkS,WAAWvH,EAAOpD,EAAQyD,IACe2L,GAKlE,OAJI1N,EAAOG,UACPH,EAAOG,QAAUoN,EACjBF,EAAMC,GAAYnY,OAAOuD,OAAO6L,EAAiBvE,EAAQuN,KAEtDvN,CACX,CACH4N,mBAAmBlM,EAAOmM,EAAYvP,GAC/B,MAAM3E,EAAQ5C,KAAK4C,MACb0T,EAAQtW,KAAK+N,gBACbwI,EAAW,aAAaO,IACxBrJ,EAAS6I,EAAMC,GACrB,GAAI9I,EACA,OAAOA,EAEX,IAAItE,EACJ,IAAgC,IAA5BvG,EAAMuG,QAAQT,UAAqB,CACnC,MAAMP,EAASnI,KAAK4C,MAAMuF,OACpB0J,EAAY1J,EAAO4O,0BAA0B/W,KAAKiO,MAAO6I,GACzD/E,EAAS5J,EAAO6J,gBAAgBhS,KAAKwP,aAAcqC,GACzD1I,EAAUhB,EAAO8J,eAAeF,EAAQ/R,KAAKkS,WAAWvH,EAAOpD,EAAQuP,GAC3E,CACA,MAAMvN,EAAa,IAAIrB,EAAWtF,EAAOuG,GAAWA,EAAQI,YAI5D,OAHIJ,GAAWA,EAAQ6N,aACnBV,EAAMC,GAAYnY,OAAOuD,OAAO4H,IAE7BA,CACX,CACH0N,iBAAiB9N,GACV,GAAKA,EAAQC,QAGb,OAAOpJ,KAAKqO,iBAAmBrO,KAAKqO,eAAiBjQ,OAAOqB,OAAO,CAAC,EAAG0J,GAC3E,CACH+N,eAAelM,EAAMmM,GACd,OAAQA,GAAiB5J,EAAmBvC,IAAShL,KAAK4C,MAAMwU,mBACpE,CACHC,kBAAkB9T,EAAOyH,GAClB,MAAMsM,EAAYtX,KAAK4V,0BAA0BrS,EAAOyH,GAClDuM,EAA0BvX,KAAKqO,eAC/B8I,EAAgBnX,KAAKiX,iBAAiBK,GACtCJ,EAAiBlX,KAAKkX,eAAelM,EAAMmM,IAAkBA,IAAkBI,EAErF,OADAvX,KAAKwX,oBAAoBL,EAAenM,EAAMsM,GACvC,CACHH,gBACAD,iBAER,CACHO,cAAchC,EAAS9K,EAAO5B,EAAYiC,GAC/BuC,EAAmBvC,GACnB5M,OAAOqB,OAAOgW,EAAS1M,GAEvB/I,KAAK6W,mBAAmBlM,EAAOK,GAAMxD,OAAOiO,EAAS1M,EAE7D,CACHyO,oBAAoBL,EAAenM,EAAM9B,GAC9BiO,IAAkB5J,EAAmBvC,IACrChL,KAAK6W,wBAAmBplB,EAAWuZ,GAAMxD,OAAO2P,EAAejO,EAEvE,CACHwO,UAAUjC,EAAS9K,EAAOK,EAAMzD,GACzBkO,EAAQlO,OAASA,EACjB,MAAM4B,EAAUnJ,KAAK0V,SAAS/K,EAAOpD,GACrCvH,KAAK6W,mBAAmBlM,EAAOK,EAAMzD,GAAQC,OAAOiO,EAAS,CACzDtM,SAAU5B,GAAUvH,KAAKiX,iBAAiB9N,IAAYA,GAE9D,CACAwO,iBAAiBlC,EAASxK,EAAcN,GACpC3K,KAAK0X,UAAUjC,EAAS9K,EAAO,UAAU,EAC7C,CACAiN,cAAcnC,EAASxK,EAAcN,GACjC3K,KAAK0X,UAAUjC,EAAS9K,EAAO,UAAU,EAC7C,CACHkN,2BACO,MAAMpC,EAAUzV,KAAKoM,YAAYmD,QAC7BkG,GACAzV,KAAK0X,UAAUjC,OAAShkB,EAAW,UAAU,EAErD,CACHqmB,wBACO,MAAMrC,EAAUzV,KAAKoM,YAAYmD,QAC7BkG,GACAzV,KAAK0X,UAAUjC,OAAShkB,EAAW,UAAU,EAErD,CACHmgB,gBAAgBH,GACT,MAAMd,EAAO3Q,KAAKmO,MACZkH,EAAWrV,KAAKoM,YAAYuE,KAClC,IAAK,MAAO1I,EAAQ8P,EAAMC,KAAShY,KAAK2O,UACpC3O,KAAKiI,GAAQ8P,EAAMC,GAEvBhY,KAAK2O,UAAY,GACjB,MAAMsJ,EAAU5C,EAASlkB,OACnB+mB,EAAUvH,EAAKxf,OACfkhB,EAAQ9iB,KAAKE,IAAIyoB,EAASD,GAC5B5F,GACArS,KAAKoS,MAAM,EAAGC,GAEd6F,EAAUD,EACVjY,KAAKmY,gBAAgBF,EAASC,EAAUD,EAASxG,GAC1CyG,EAAUD,GACjBjY,KAAKoY,gBAAgBF,EAASD,EAAUC,EAEhD,CACHC,gBAAgB5U,EAAO8O,EAAOZ,GAAmB,GAC1C,MAAMnG,EAAOtL,KAAKoM,YACZuE,EAAOrF,EAAKqF,KACZtG,EAAM9G,EAAQ8O,EACpB,IAAIlgB,EACJ,MAAMkmB,EAAQC,IAEV,IADAA,EAAInnB,QAAUkhB,EACVlgB,EAAImmB,EAAInnB,OAAS,EAAGgB,GAAKkY,EAAKlY,IAC9BmmB,EAAInmB,GAAKmmB,EAAInmB,EAAIkgB,EACrB,EAGJ,IADAgG,EAAK1H,GACDxe,EAAIoR,EAAOpR,EAAIkY,IAAOlY,EACtBwe,EAAKxe,GAAK,IAAI6N,KAAK6O,gBAEnB7O,KAAKkO,UACLmK,EAAK/M,EAAKgC,SAEdtN,KAAKoS,MAAM7O,EAAO8O,GACdZ,GACAzR,KAAKuY,eAAe5H,EAAMpN,EAAO8O,EAAO,QAEhD,CACAkG,eAAe9C,EAASlS,EAAO8O,EAAOrH,GAAO,CAChDoN,gBAAgB7U,EAAO8O,GAChB,MAAM/G,EAAOtL,KAAKoM,YAClB,GAAIpM,KAAKkO,SAAU,CACf,MAAMsK,EAAUlN,EAAKgC,QAAQmL,OAAOlV,EAAO8O,GACvC/G,EAAK0D,UACL3B,EAAY/B,EAAMkN,EAE1B,CACAlN,EAAKqF,KAAK8H,OAAOlV,EAAO8O,EAC5B,CACHqG,MAAMC,GACC,GAAI3Y,KAAKkO,SACLlO,KAAK2O,UAAU1J,KAAK0T,OACjB,CACH,MAAO1Q,EAAQ8P,EAAMC,GAAQW,EAC7B3Y,KAAKiI,GAAQ8P,EAAMC,EACvB,CACAhY,KAAK4C,MAAMgW,aAAa3T,KAAK,CACzBjF,KAAK2K,SACFgO,GAEX,CACAE,cACI,MAAMxG,EAAQyG,UAAU3nB,OACxB6O,KAAK0Y,MAAM,CACP,kBACA1Y,KAAKwP,aAAamB,KAAKxf,OAASkhB,EAChCA,GAER,CACA0G,aACI/Y,KAAK0Y,MAAM,CACP,kBACA1Y,KAAKoM,YAAYuE,KAAKxf,OAAS,EAC/B,GAER,CACA6nB,eACIhZ,KAAK0Y,MAAM,CACP,kBACA,EACA,GAER,CACAO,cAAc1V,EAAO8O,GACbA,GACArS,KAAK0Y,MAAM,CACP,kBACAnV,EACA8O,IAGR,MAAM6G,EAAWJ,UAAU3nB,OAAS,EAChC+nB,GACAlZ,KAAK0Y,MAAM,CACP,kBACAnV,EACA2V,GAGZ,CACAC,iBACInZ,KAAK0Y,MAAM,CACP,kBACA,EACAI,UAAU3nB,QAElB,EAcH,SAASioB,EAAqB9N,GAC3B,MAAMrB,EAAQqB,EAAKgB,OACbrD,EAbV,SAA2BgB,EAAOnK,GAC9B,IAAKmK,EAAMoP,OAAOC,KAAM,CACpB,MAAMC,EAAetP,EAAM+B,wBAAwBlM,GACnD,IAAImJ,EAAS,GACb,IAAI,IAAI9W,EAAI,EAAGuY,EAAO6O,EAAapoB,OAAQgB,EAAIuY,EAAMvY,IACjD8W,EAASA,EAAOuQ,OAAOD,EAAapnB,GAAG+Z,WAAWqI,mBAAmBtK,IAEzEA,EAAMoP,OAAOC,KAAOlX,EAAgBqX,aAAaxQ,EAAOyQ,MAAK,CAACrpB,EAAGC,IAAID,EAAIC,IAC7E,CACA,OAAO2Z,EAAMoP,OAAOC,IACxB,CAGmBK,CAAkB1P,EAAOqB,EAAKxL,MAC7C,IACI3N,EAAGuY,EAAMkP,EAAMpH,EADf/iB,EAAMwa,EAAM4P,QAEhB,MAAMC,EAAmB,KACR,QAATF,IAA4B,QAAVA,IAGlBxX,EAAgBqU,QAAQjE,KACxB/iB,EAAMF,KAAKE,IAAIA,EAAKF,KAAKwqB,IAAIH,EAAOpH,IAAS/iB,IAEjD+iB,EAAOoH,EAAI,EAEf,IAAIznB,EAAI,EAAGuY,EAAOzB,EAAO9X,OAAQgB,EAAIuY,IAAQvY,EACzCynB,EAAO3P,EAAM+P,iBAAiB/Q,EAAO9W,IACrC2nB,IAGJ,IADAtH,OAAO/gB,EACHU,EAAI,EAAGuY,EAAOT,EAAMgQ,MAAM9oB,OAAQgB,EAAIuY,IAAQvY,EAC9CynB,EAAO3P,EAAMiQ,gBAAgB/nB,GAC7B2nB,IAEJ,OAAOrqB,CACX,CA0DA,SAAS0qB,EAAWC,EAAOlW,EAAM4H,EAAQ3Z,GAMrC,OALIiQ,EAAgB5P,QAAQ4nB,GAtBhC,SAAuBA,EAAOlW,EAAM4H,EAAQ3Z,GACxC,MAAMkoB,EAAavO,EAAOsG,MAAMgI,EAAM,GAAIjoB,GACpCmoB,EAAWxO,EAAOsG,MAAMgI,EAAM,GAAIjoB,GAClC1C,EAAMF,KAAKE,IAAI4qB,EAAYC,GAC3B9qB,EAAMD,KAAKC,IAAI6qB,EAAYC,GACjC,IAAIC,EAAW9qB,EACX+qB,EAAShrB,EACTD,KAAKwqB,IAAItqB,GAAOF,KAAKwqB,IAAIvqB,KACzB+qB,EAAW/qB,EACXgrB,EAAS/qB,GAEbyU,EAAK4H,EAAOU,MAAQgO,EACpBtW,EAAKuW,QAAU,CACXF,WACAC,SACAjX,MAAO8W,EACPhQ,IAAKiQ,EACL7qB,MACAD,MAER,CAGQkrB,CAAcN,EAAOlW,EAAM4H,EAAQ3Z,GAEnC+R,EAAK4H,EAAOU,MAAQV,EAAOsG,MAAMgI,EAAOjoB,GAErC+R,CACX,CACA,SAASyW,EAAsBrP,EAAMqF,EAAMpN,EAAO8O,GAC9C,MAAM/F,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACd+G,EAASvG,EAAOwG,YAChBC,EAAczG,IAAWR,EACzBK,EAAS,GACf,IAAIha,EAAGuY,EAAMxG,EAAMkW,EACnB,IAAIjoB,EAAIoR,EAAOmH,EAAOnH,EAAQ8O,EAAOlgB,EAAIuY,IAAQvY,EAC7CioB,EAAQzJ,EAAKxe,GACb+R,EAAO,CAAC,EACRA,EAAKoI,EAAOE,MAAQuG,GAAezG,EAAO8F,MAAMS,EAAO1gB,GAAIA,GAC3Dga,EAAOlH,KAAKkV,EAAWC,EAAOlW,EAAM4H,EAAQ3Z,IAEhD,OAAOga,CACX,CACA,SAASyO,EAAWC,GAChB,OAAOA,QAA8BppB,IAApBopB,EAAON,eAA4C9oB,IAAlBopB,EAAOL,MAC7D,CAiCA,SAASM,EAAiB/R,EAAYI,EAAS0B,EAAOF,GAClD,IAAIoQ,EAAO5R,EAAQ6R,cACnB,MAAMlT,EAAM,CAAC,EACb,IAAKiT,EAED,YADAhS,EAAWiS,cAAgBlT,GAG/B,IAAa,IAATiT,EAOA,YANAhS,EAAWiS,cAAgB,CACvBnG,KAAK,EACLC,OAAO,EACPC,QAAQ,EACRC,MAAM,IAId,MAAM,MAAEzR,EAAM,IAAE8G,EAAI,QAAED,EAAQ,IAAEyK,EAAI,OAAEE,GA1C1C,SAAqBhM,GACjB,IAAIqB,EAAS7G,EAAO8G,EAAKwK,EAAKE,EAiB9B,OAhBIhM,EAAWkS,YACX7Q,EAAUrB,EAAWmS,KAAOnS,EAAWzV,EACvCiQ,EAAQ,OACR8G,EAAM,UAEND,EAAUrB,EAAWmS,KAAOnS,EAAW2G,EACvCnM,EAAQ,SACR8G,EAAM,OAEND,GACAyK,EAAM,MACNE,EAAS,UAETF,EAAM,QACNE,EAAS,OAEN,CACHxR,QACA8G,MACAD,UACAyK,MACAE,SAER,CAiBsDoG,CAAYpS,GACjD,WAATgS,GAAqBlQ,IACrB9B,EAAWqS,oBAAqB,GAC3BvQ,EAAMiC,MAAQ,KAAOnC,EACtBoQ,EAAOlG,GACChK,EAAMkC,SAAW,KAAOpC,EAChCoQ,EAAOhG,GAEPjN,EAAIuT,EAAUtG,EAAQxR,EAAO8G,EAAKD,KAAY,EAC9C2Q,EAAOlG,IAGf/M,EAAIuT,EAAUN,EAAMxX,EAAO8G,EAAKD,KAAY,EAC5CrB,EAAWiS,cAAgBlT,CAC/B,CACA,SAASuT,EAAUN,EAAM1qB,EAAGC,EAAG8Z,GAS/B,IAAckR,EAAMC,EAAIC,EAFpB,OANIpR,GAQgBoR,EAPKlrB,EACrByqB,EAAOU,EADPV,GAOMO,EAPMP,MAOAQ,EAPMlrB,GAQDmrB,EAAKF,IAASE,EAAKD,EAAKD,EAPnBhrB,EAAGD,IAEzB0qB,EAAOU,EAASV,EAAM1qB,EAAGC,GAEtByqB,CACX,CAIA,SAASU,EAAStsB,EAAGoU,EAAO8G,GACxB,MAAa,UAANlb,EAAgBoU,EAAc,QAANpU,EAAckb,EAAMlb,CACvD,CACA,SAASusB,EAAiB3S,GAAY,cAAE4S,GAAkBtc,GACtD0J,EAAW4S,cAAkC,SAAlBA,EAAqC,IAAVtc,EAAc,IAAO,EAAIsc,CACnF,CACA,MAAMC,UAAsBjO,EACxBC,UAAY,MACfA,gBAAkB,CACXgB,oBAAoB,EACpBC,gBAAiB,MACjBgN,mBAAoB,GACpBC,cAAe,GACfC,SAAS,EACTxS,WAAY,CACRyS,QAAS,CACLlc,KAAM,SACNiJ,WAAY,CACR,IACA,IACA,OACA,QACA,aAKnB6E,iBAAmB,CACZV,OAAQ,CACJ+O,QAAS,CACLnc,KAAM,WACNoc,QAAQ,EACRC,KAAM,CACFD,QAAQ,IAGhBE,QAAS,CACLtc,KAAM,SACNuc,aAAa,KAI5B1J,mBAAmBrH,EAAMqF,EAAMpN,EAAO8O,GAC/B,OAAOsI,EAAsBrP,EAAMqF,EAAMpN,EAAO8O,EACpD,CACHI,eAAenH,EAAMqF,EAAMpN,EAAO8O,GAC3B,OAAOsI,EAAsBrP,EAAMqF,EAAMpN,EAAO8O,EACpD,CACHK,gBAAgBpH,EAAMqF,EAAMpN,EAAO8O,GAC5B,MAAM,OAAE/F,EAAO,OAAER,GAAYR,GACvB,SAAE0H,EAAU,IAAI,SAAEC,EAAU,KAASjT,KAAKkO,SAC1CoO,EAA2B,MAAhBhQ,EAAOE,KAAewG,EAAWC,EAC5CsJ,EAA2B,MAAhBzQ,EAAOU,KAAewG,EAAWC,EAC5C9G,EAAS,GACf,IAAIha,EAAGuY,EAAMxG,EAAM9D,EACnB,IAAIjO,EAAIoR,EAAOmH,EAAOnH,EAAQ8O,EAAOlgB,EAAIuY,IAAQvY,EAC7CiO,EAAMuQ,EAAKxe,GACX+R,EAAO,CAAC,EACRA,EAAKoI,EAAOE,MAAQF,EAAO8F,MAAMhQ,EAAgB8Q,iBAAiB9S,EAAKkc,GAAWnqB,GAClFga,EAAOlH,KAAKkV,EAAW/X,EAAgB8Q,iBAAiB9S,EAAKmc,GAAWrY,EAAM4H,EAAQ3Z,IAE1F,OAAOga,CACX,CACHkH,sBAAsBC,EAAOrJ,EAAOkC,EAAQtB,GACrC2R,MAAMnJ,sBAAsBC,EAAOrJ,EAAOkC,EAAQtB,GAClD,MAAMgQ,EAAS1O,EAAOsO,QAClBI,GAAU5Q,IAAUjK,KAAKoM,YAAYN,SACrCwH,EAAM7jB,IAAMF,KAAKE,IAAI6jB,EAAM7jB,IAAKorB,EAAOprB,KACvC6jB,EAAM9jB,IAAMD,KAAKC,IAAI8jB,EAAM9jB,IAAKqrB,EAAOrrB,KAE/C,CACHglB,iBACO,OAAO,CACX,CACHC,iBAAiB9J,GACV,MAAMW,EAAOtL,KAAKoM,aACZ,OAAEE,EAAO,OAAER,GAAYR,EACvBa,EAASnM,KAAKmT,UAAUxI,GACxBkQ,EAAS1O,EAAOsO,QAChB3Q,EAAQ8Q,EAAWC,GAAU,IAAMA,EAAOtX,MAAQ,KAAOsX,EAAOxQ,IAAM,IAAM,GAAKyB,EAAO6I,iBAAiBxI,EAAOL,EAAOU,OAC7H,MAAO,CACHkI,MAAO,GAAKpI,EAAOqI,iBAAiBxI,EAAOG,EAAOE,OAClD1C,QAER,CACAgF,aACI9O,KAAKwO,qBAAsB,EAC3BgO,MAAM1N,aACO9O,KAAKoM,YACbvB,MAAQ7K,KAAKwP,aAAa3E,KACnC,CACArD,OAAOwD,GACH,MAAMM,EAAOtL,KAAKoM,YAClBpM,KAAKuY,eAAejN,EAAKqF,KAAM,EAAGrF,EAAKqF,KAAKxf,OAAQ6Z,EACxD,CACAuN,eAAekE,EAAMlZ,EAAO8O,EAAOrH,GAC/B,MAAMgG,EAAiB,UAAThG,GACR,MAAEL,EAAQyB,aAAa,OAAEN,IAAe9L,KACxCkb,EAAOpP,EAAO4Q,eACdzB,EAAanP,EAAO6Q,eACpBC,EAAQ5c,KAAK6c,aACb,cAAE1F,EAAc,eAAED,GAAoBlX,KAAKqX,kBAAkB9T,EAAOyH,GAC1E,IAAI,IAAI7Y,EAAIoR,EAAOpR,EAAIoR,EAAQ8O,EAAOlgB,IAAI,CACtC,MAAMga,EAASnM,KAAKmT,UAAUhhB,GACxB2qB,EAAU9L,GAAS5O,EAAgB2a,cAAc5Q,EAAOL,EAAOU,OAAS,CAC1E0O,OACA8B,KAAM9B,GACNlb,KAAKid,yBAAyB9qB,GAC5B+qB,EAAUld,KAAKmd,yBAAyBhrB,EAAGyqB,GAC3C/R,GAASsB,EAAOE,SAAW,CAAC,GAAGP,EAAOU,MACtCzD,EAAa,CACfkS,aACAC,KAAM4B,EAAQ5B,KACdE,oBAAqBvQ,GAAS+P,EAAWzO,EAAOsO,UAAY9P,IAAUE,EAAMiC,MAAQnC,IAAUE,EAAMkC,QACpGzZ,EAAG2nB,EAAa6B,EAAQE,KAAOE,EAAQE,OACvC1N,EAAGuL,EAAaiC,EAAQE,OAASN,EAAQE,KACzCK,OAAQpC,EAAaiC,EAAQnT,KAAOxa,KAAKwqB,IAAI+C,EAAQ/S,MACrDuT,MAAOrC,EAAa1rB,KAAKwqB,IAAI+C,EAAQ/S,MAAQmT,EAAQnT,MAErDmN,IACAnO,EAAWI,QAAUgO,GAAiBnX,KAAK4V,0BAA0BzjB,EAAGsqB,EAAKtqB,GAAGoV,OAAS,SAAWyD,IAExG,MAAM7B,EAAUJ,EAAWI,SAAWsT,EAAKtqB,GAAGgX,QAC9C2R,EAAiB/R,EAAYI,EAAS0B,EAAOF,GAC7C+Q,EAAiB3S,EAAYI,EAASyT,EAAMvd,OAC5CW,KAAKyX,cAAcgF,EAAKtqB,GAAIA,EAAG4W,EAAYiC,EAC/C,CACJ,CACHuS,WAAWC,EAAMxH,GACV,MAAM,OAAE1J,GAAYtM,KAAKoM,YACnB5B,EAAW8B,EAAON,wBAAwBhM,KAAKiO,OAAOd,QAAQ7B,GAAOA,EAAKY,WAAW/C,QAAQ4S,UAC7FxQ,EAAUe,EAAOnD,QAAQoC,QACzBE,EAAS,GACTgS,EAAYnS,IACd,MAAMa,EAASb,EAAKY,WAAWiH,UAAU6C,GACnC7U,EAAMgL,GAAUA,EAAOb,EAAKQ,OAAOU,MACzC,GAAIpK,EAAgB2a,cAAc5b,IAAQuc,MAAMvc,GAC5C,OAAO,CACX,EAEJ,IAAK,MAAMmK,KAAQd,EACf,SAAkB/Y,IAAdukB,IAA2ByH,EAASnS,QAGxB,IAAZC,IAAqD,IAAhCE,EAAOkS,QAAQrS,EAAKT,aAA6BpZ,IAAZ8Z,QAAwC9Z,IAAf6Z,EAAKT,QACxFY,EAAOxG,KAAKqG,EAAKT,OAEjBS,EAAKX,QAAU6S,GACf,MAMR,OAHK/R,EAAOta,QACRsa,EAAOxG,UAAKxT,GAETga,CACX,CACHmS,eAAejT,GACR,OAAO3K,KAAKud,gBAAW9rB,EAAWkZ,GAAOxZ,MAC7C,CACH0sB,eAAe5S,EAAc6S,EAAM9H,GAC5B,MAAMvK,EAASzL,KAAKud,WAAWtS,EAAc+K,GACvCrL,OAAiBlZ,IAATqsB,EAAqBrS,EAAOkS,QAAQG,IAAS,EAC3D,OAAkB,IAAXnT,EAAec,EAAOta,OAAS,EAAIwZ,CAC9C,CACHkS,YACO,MAAM1S,EAAOnK,KAAKmJ,QACZmC,EAAOtL,KAAKoM,YACZE,EAAShB,EAAKgB,OACdyR,EAAS,GACf,IAAI5rB,EAAGuY,EACP,IAAIvY,EAAI,EAAGuY,EAAOY,EAAKqF,KAAKxf,OAAQgB,EAAIuY,IAAQvY,EAC5C4rB,EAAO9Y,KAAKqH,EAAO0N,iBAAiBha,KAAKmT,UAAUhhB,GAAGma,EAAOE,MAAOra,IAExE,MAAM6rB,EAAe7T,EAAK6T,aAE1B,MAAO,CACHvuB,IAFQuuB,GAAgB5E,EAAqB9N,GAG7CyS,SACAxa,MAAO+I,EAAO2R,YACd5T,IAAKiC,EAAO4R,UACZC,WAAYne,KAAK4d,iBACjB3T,MAAOqC,EACPyP,QAAS5R,EAAK4R,QACd1c,MAAO2e,EAAe,EAAI7T,EAAK0R,mBAAqB1R,EAAK2R,cAEjE,CACHmB,yBAAyBtS,GAClB,MAAQyB,aAAa,OAAEN,EAAO,SAAEkD,EAAWrE,MAAOM,GAAkB9B,SAAW+R,KAAMkD,EAAU,aAAEC,IAAqBre,KAChHse,EAAaF,GAAa,EAC1BjS,EAASnM,KAAKmT,UAAUxI,GACxBkQ,EAAS1O,EAAOsO,QAChB8D,EAAW3D,EAAWC,GAC5B,IAGImC,EAAMjT,EAHND,EAAQqC,EAAOL,EAAOU,MACtBjJ,EAAQ,EACRpS,EAAS6d,EAAWhP,KAAK4K,WAAWkB,EAAQK,EAAQ6C,GAAYlF,EAEhE3Y,IAAW2Y,IACXvG,EAAQpS,EAAS2Y,EACjB3Y,EAAS2Y,GAETyU,IACAzU,EAAQ+Q,EAAON,SACfppB,EAAS0pB,EAAOL,OAASK,EAAON,SAClB,IAAVzQ,GAAe1H,EAAgBgJ,KAAKtB,KAAW1H,EAAgBgJ,KAAKyP,EAAOL,UAC3EjX,EAAQ,GAEZA,GAASuG,GAEb,MAAMuQ,EAAcjY,EAAgB2a,cAAcqB,IAAeG,EAAuBhb,EAAZ6a,EAC5E,IAAIlD,EAAOpP,EAAOkO,iBAAiBK,GAOnC,GALI2C,EADAhd,KAAK4C,MAAM4b,kBAAkB7T,GACtBmB,EAAOkO,iBAAiBzW,EAAQpS,GAEhC+pB,EAEXnR,EAAOiT,EAAO9B,EACV3rB,KAAKwqB,IAAIhQ,GAAQsU,EAAc,CAC/BtU,EApSZ,SAAiBA,EAAM+B,EAAQwS,GAC3B,OAAa,IAATvU,EACO3H,EAAgBgJ,KAAKrB,IAExB+B,EAAO6Q,eAAiB,GAAK,IAAM7Q,EAAOrc,KAAO6uB,EAAa,GAAK,EAC/E,CA+RmBG,CAAQ1U,EAAM+B,EAAQwS,GAAcD,EACvCvU,IAAUwU,IACVpD,GAAQnR,EAAO,GAEnB,MAAM2U,EAAa5S,EAAO6S,mBAAmB,GACvCC,EAAW9S,EAAO6S,mBAAmB,GACrClvB,EAAMF,KAAKE,IAAIivB,EAAYE,GAC3BpvB,EAAMD,KAAKC,IAAIkvB,EAAYE,GACjC1D,EAAO3rB,KAAKC,IAAID,KAAKE,IAAIyrB,EAAM1rB,GAAMC,GACrCutB,EAAO9B,EAAOnR,EACViF,IAAauP,IACbpS,EAAOE,QAAQP,EAAOU,MAAMQ,cAAc/B,GAAgBa,EAAO+S,iBAAiB7B,GAAQlR,EAAO+S,iBAAiB3D,GAE1H,CACA,GAAIA,IAASpP,EAAOkO,iBAAiBsE,GAAa,CAC9C,MAAMQ,EAAW1c,EAAgBgJ,KAAKrB,GAAQ+B,EAAOiT,qBAAqBT,GAAc,EACxFpD,GAAQ4D,EACR/U,GAAQ+U,CACZ,CACA,MAAO,CACH/U,OACAmR,OACA8B,OACAI,OAAQJ,EAAOjT,EAAO,EAE9B,CACHoT,yBAAyBxS,EAAOiS,GACzB,MAAM3S,EAAQ2S,EAAM3S,MACdd,EAAUnJ,KAAKmJ,QACfsU,EAAWtU,EAAQsU,SACnBuB,EAAkB5c,EAAgByN,eAAe1G,EAAQ6V,gBAAiBC,KAChF,IAAI7B,EAAQrT,EACZ,GAAI6S,EAAMb,QAAS,CACf,MAAMoC,EAAaV,EAAWzd,KAAK4d,eAAejT,GAASiS,EAAMuB,WAC3D7K,EAAiC,SAAzBnK,EAAQ6U,aAzYjC,SAAmCrT,EAAOiS,EAAOzT,EAASgV,GACvD,MAAMJ,EAASnB,EAAMmB,OACfnE,EAAOmE,EAAOpT,GACpB,IAAI6H,EAAO7H,EAAQ,EAAIoT,EAAOpT,EAAQ,GAAK,KACvCuU,EAAOvU,EAAQoT,EAAO5sB,OAAS,EAAI4sB,EAAOpT,EAAQ,GAAK,KAC3D,MAAMwU,EAAUhW,EAAQ0S,mBACX,OAATrJ,IACAA,EAAOoH,GAAiB,OAATsF,EAAgBtC,EAAMvS,IAAMuS,EAAMrZ,MAAQ2b,EAAOtF,IAEvD,OAATsF,IACAA,EAAOtF,EAAOA,EAAOpH,GAEzB,MAAMjP,EAAQqW,GAAQA,EAAOrqB,KAAKE,IAAI+iB,EAAM0M,IAAS,EAAIC,EAEzD,MAAO,CACHC,MAFS7vB,KAAKwqB,IAAImF,EAAO1M,GAAQ,EAAI2M,EAEvBhB,EACd9e,MAAO8J,EAAQ2S,cACfvY,QAER,CAsX4D8b,CAA0B1U,EAAOiS,EAAOzT,EAASgV,GAzZ5G,SAAkCxT,EAAOiS,EAAOzT,EAASgV,GACtD,MAAMmB,EAAYnW,EAAQ6U,aAC1B,IAAIjU,EAAM1K,EAQV,OAPI+C,EAAgB2a,cAAcuC,IAC9BvV,EAAO6S,EAAMntB,IAAM0Z,EAAQ0S,mBAC3Bxc,EAAQ8J,EAAQ2S,gBAEhB/R,EAAOuV,EAAYnB,EACnB9e,EAAQ,GAEL,CACH+f,MAAOrV,EAAOoU,EACd9e,QACAkE,MAAOqZ,EAAMmB,OAAOpT,GAASZ,EAAO,EAE5C,CA0Y2HwV,CAAyB5U,EAAOiS,EAAOzT,EAASgV,GACzJqB,EAAaxf,KAAK6d,eAAe7d,KAAK2K,MAAO3K,KAAKoM,YAAYvB,MAAO4S,EAAW9S,OAAQlZ,GAC9F2rB,EAAS9J,EAAM/P,MAAQ+P,EAAM8L,MAAQI,EAAalM,EAAM8L,MAAQ,EAChErV,EAAOxa,KAAKE,IAAIuvB,EAAiB1L,EAAM8L,MAAQ9L,EAAMjU,MACzD,MACI+d,EAASnT,EAAM+P,iBAAiBha,KAAKmT,UAAUxI,GAAOV,EAAMuC,MAAO7B,GACnEZ,EAAOxa,KAAKE,IAAIuvB,EAAiBpC,EAAMntB,IAAMmtB,EAAMvd,OAEvD,MAAO,CACH6b,KAAMkC,EAASrT,EAAO,EACtBiT,KAAMI,EAASrT,EAAO,EACtBqT,SACArT,OAER,CACA5F,OACI,MAAMmH,EAAOtL,KAAKoM,YACZN,EAASR,EAAKQ,OACd2T,EAAQnU,EAAKqF,KACbjG,EAAO+U,EAAMtuB,OACnB,IAAIgB,EAAI,EACR,KAAMA,EAAIuY,IAAQvY,EACyB,OAAnC6N,KAAKmT,UAAUhhB,GAAG2Z,EAAOU,OACzBiT,EAAMttB,GAAGgS,KAAKnE,KAAK6N,KAG/B,EAGJ,MAAM6R,UAAyB/R,EAC3BC,UAAY,SACfA,gBAAkB,CACXgB,oBAAoB,EACpBC,gBAAiB,QACjBtF,WAAY,CACRyS,QAAS,CACLlc,KAAM,SACNiJ,WAAY,CACR,IACA,IACA,cACA,aAKnB6E,iBAAmB,CACZV,OAAQ,CACJ5Z,EAAG,CACCwM,KAAM,UAEV4P,EAAG,CACC5P,KAAM,YAIlBgP,aACI9O,KAAKwO,qBAAsB,EAC3BgO,MAAM1N,YACV,CACH6D,mBAAmBrH,EAAMqF,EAAMpN,EAAO8O,GAC/B,MAAMlG,EAASqQ,MAAM7J,mBAAmBrH,EAAMqF,EAAMpN,EAAO8O,GAC3D,IAAI,IAAIlgB,EAAI,EAAGA,EAAIga,EAAOhb,OAAQgB,IAC9Bga,EAAOha,GAAGsoB,QAAUza,KAAK4V,0BAA0BzjB,EAAIoR,GAAOoc,OAElE,OAAOxT,CACX,CACHsG,eAAenH,EAAMqF,EAAMpN,EAAO8O,GAC3B,MAAMlG,EAASqQ,MAAM/J,eAAenH,EAAMqF,EAAMpN,EAAO8O,GACvD,IAAI,IAAIlgB,EAAI,EAAGA,EAAIga,EAAOhb,OAAQgB,IAAI,CAClC,MAAM+R,EAAOyM,EAAKpN,EAAQpR,GAC1Bga,EAAOha,GAAGsoB,QAAUrY,EAAgByN,eAAe3L,EAAK,GAAIlE,KAAK4V,0BAA0BzjB,EAAIoR,GAAOoc,OAC1G,CACA,OAAOxT,CACX,CACHuG,gBAAgBpH,EAAMqF,EAAMpN,EAAO8O,GAC5B,MAAMlG,EAASqQ,MAAM9J,gBAAgBpH,EAAMqF,EAAMpN,EAAO8O,GACxD,IAAI,IAAIlgB,EAAI,EAAGA,EAAIga,EAAOhb,OAAQgB,IAAI,CAClC,MAAM+R,EAAOyM,EAAKpN,EAAQpR,GAC1Bga,EAAOha,GAAGsoB,QAAUrY,EAAgByN,eAAe3L,GAAQA,EAAK9S,IAAM8S,EAAK9S,EAAG4O,KAAK4V,0BAA0BzjB,EAAIoR,GAAOoc,OAC5H,CACA,OAAOxT,CACX,CACHqI,iBACO,MAAM7D,EAAO3Q,KAAKoM,YAAYuE,KAC9B,IAAInhB,EAAM,EACV,IAAI,IAAI2C,EAAIwe,EAAKxf,OAAS,EAAGgB,GAAK,IAAKA,EACnC3C,EAAMD,KAAKC,IAAIA,EAAKmhB,EAAKxe,GAAG4X,KAAK/J,KAAK4V,0BAA0BzjB,IAAM,GAE1E,OAAO3C,EAAM,GAAKA,CACtB,CACHilB,iBAAiB9J,GACV,MAAMW,EAAOtL,KAAKoM,YACZyG,EAAS7S,KAAK4C,MAAM+N,KAAKkC,QAAU,IACnC,OAAEtC,EAAO,OAAEE,GAAYnF,EACvBa,EAASnM,KAAKmT,UAAUxI,GACxBrX,EAAIid,EAAOoE,iBAAiBxI,EAAO7Y,GACnCoc,EAAIe,EAAOkE,iBAAiBxI,EAAOuD,GACnCte,EAAI+a,EAAOsO,QACjB,MAAO,CACH/F,MAAO7B,EAAOlI,IAAU,GACxBb,MAAO,IAAMxW,EAAI,KAAOoc,GAAKte,EAAI,KAAOA,EAAI,IAAM,IAE1D,CACAoW,OAAOwD,GACH,MAAM4U,EAAS5f,KAAKoM,YAAYuE,KAChC3Q,KAAKuY,eAAeqH,EAAQ,EAAGA,EAAOzuB,OAAQ6Z,EAClD,CACAuN,eAAeqH,EAAQrc,EAAO8O,EAAOrH,GACjC,MAAMgG,EAAiB,UAAThG,GACR,OAAEsB,EAAO,OAAER,GAAY9L,KAAKoM,aAC5B,cAAE+K,EAAc,eAAED,GAAoBlX,KAAKqX,kBAAkB9T,EAAOyH,GACpEuB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACrB,IAAI,IAAIra,EAAIoR,EAAOpR,EAAIoR,EAAQ8O,EAAOlgB,IAAI,CACtC,MAAM0tB,EAAQD,EAAOztB,GACfga,GAAU6E,GAAShR,KAAKmT,UAAUhhB,GAClC4W,EAAa,CAAC,EACd+W,EAAS/W,EAAWwD,GAASyE,EAAQ1E,EAAOqS,mBAAmB,IAAOrS,EAAO0N,iBAAiB7N,EAAOI,IACrGwT,EAAShX,EAAW0D,GAASuE,EAAQlF,EAAO4Q,eAAiB5Q,EAAOkO,iBAAiB7N,EAAOM,IAClG1D,EAAWiX,KAAOtC,MAAMoC,IAAWpC,MAAMqC,GACrC7I,IACAnO,EAAWI,QAAUgO,GAAiBnX,KAAK4V,0BAA0BzjB,EAAG0tB,EAAMtY,OAAS,SAAWyD,GAC9FgG,IACAjI,EAAWI,QAAQwW,OAAS,IAGpC3f,KAAKyX,cAAcoI,EAAO1tB,EAAG4W,EAAYiC,EAC7C,CACJ,CACH4K,0BAA0BjL,EAAOK,GAC1B,MAAMmB,EAASnM,KAAKmT,UAAUxI,GAC9B,IAAI1B,EAASuT,MAAM5G,0BAA0BjL,EAAOK,GAChD/B,EAAOG,UACPH,EAAS7K,OAAOqB,OAAO,CAAC,EAAGwJ,EAAQ,CAC/BG,SAAS,KAGjB,MAAMuW,EAAS1W,EAAO0W,OAKtB,MAJa,WAAT3U,IACA/B,EAAO0W,OAAS,GAEpB1W,EAAO0W,QAAUvd,EAAgByN,eAAe1D,GAAUA,EAAOsO,QAASkF,GACnE1W,CACX,EAiCJ,MAAMgX,UAA2BtS,EAC7BC,UAAY,WACfA,gBAAkB,CACXgB,oBAAoB,EACpBC,gBAAiB,MACjBnG,UAAW,CACPwX,eAAe,EACfC,cAAc,GAElB5W,WAAY,CACRyS,QAAS,CACLlc,KAAM,SACNiJ,WAAY,CACR,gBACA,WACA,cACA,cACA,aACA,IACA,IACA,SACA,cACA,aAIZqX,OAAQ,MACRC,SAAU,EACVC,cAAe,IACfX,OAAQ,OACRY,QAAS,EACTrQ,UAAW,KAEftC,mBAAqB,CACjB4S,YAAc1C,GAAgB,YAATA,EACrB2C,WAAa3C,GAAgB,YAATA,IAAuBA,EAAK4C,WAAW,gBAAkB5C,EAAK4C,WAAW,oBAEpG9S,iBAAmB,CACZ+S,YAAa,EACbC,QAAS,CACLC,OAAQ,CACJhO,OAAQ,CACJiO,eAAgBle,GACZ,MAAM+N,EAAO/N,EAAM+N,KACnB,GAAIA,EAAKkC,OAAO1hB,QAAUwf,EAAKC,SAASzf,OAAQ,CAC5C,MAAQ0hB,QAAQ,WAAEkO,EAAW,MAAEzgB,IAAcsC,EAAMie,OAAO1X,QAC1D,OAAOwH,EAAKkC,OAAOpgB,KAAI,CAACiiB,EAAOviB,KAC3B,MACM6uB,EADOpe,EAAMiO,eAAe,GACf3E,WAAWwJ,SAASvjB,GACvC,MAAO,CACH8uB,KAAMvM,EACNwM,UAAWF,EAAMG,gBACjBC,YAAaJ,EAAMK,YACnBC,UAAWhhB,EACXihB,UAAWP,EAAMQ,YACjBT,WAAYA,EACZnN,QAAShR,EAAM4b,kBAAkBrsB,GACjCwY,MAAOxY,EACV,GAET,CACA,MAAO,EACX,GAEJsvB,QAAShxB,EAAGixB,EAAYb,GACpBA,EAAOje,MAAM+e,qBAAqBD,EAAW/W,OAC7CkW,EAAOje,MAAM4E,QACjB,KAIZ3H,YAAY+C,EAAOqI,GACfuR,MAAM5Z,EAAOqI,GACbjL,KAAKwO,qBAAsB,EAC3BxO,KAAK4hB,iBAAcnwB,EACnBuO,KAAK6hB,iBAAcpwB,EACnBuO,KAAK8hB,aAAUrwB,EACfuO,KAAK+hB,aAAUtwB,CACnB,CACAsd,aAAc,CACjBqD,MAAM7O,EAAO8O,GACN,MAAM1B,EAAO3Q,KAAKwP,aAAamB,KACzBrF,EAAOtL,KAAKoM,YAClB,IAAsB,IAAlBpM,KAAKkO,SACL5C,EAAKgC,QAAUqD,MACZ,CACH,IAKIxe,EAAGuY,EALHsX,EAAU7vB,IAAKwe,EAAKxe,GACxB,GAAIiQ,EAAgBmG,SAASoI,EAAKpN,IAAS,CACvC,MAAM,IAAEsF,EAAK,SAAa7I,KAAKkO,SAC/B8T,EAAU7vB,IAAKiQ,EAAgB8Q,iBAAiBvC,EAAKxe,GAAI0W,EAC7D,CAEA,IAAI1W,EAAIoR,EAAOmH,EAAOnH,EAAQ8O,EAAOlgB,EAAIuY,IAAQvY,EAC7CmZ,EAAKgC,QAAQnb,GAAK6vB,EAAO7vB,EAEjC,CACJ,CACH8vB,eACO,OAAO7f,EAAgB8f,UAAUliB,KAAKmJ,QAAQkX,SAAW,GAC7D,CACH8B,oBACO,OAAO/f,EAAgB8f,UAAUliB,KAAKmJ,QAAQmX,cAClD,CACH8B,sBACO,IAAI3yB,EAAM2S,EAAgBigB,IACtB7yB,GAAO4S,EAAgBigB,IAC3B,IAAI,IAAIlwB,EAAI,EAAGA,EAAI6N,KAAK4C,MAAM+N,KAAKC,SAASzf,SAAUgB,EAClD,GAAI6N,KAAK4C,MAAM0f,iBAAiBnwB,IAAM6N,KAAK4C,MAAMiO,eAAe1e,GAAG2N,OAASE,KAAKiO,MAAO,CACpF,MAAM/B,EAAalM,KAAK4C,MAAMiO,eAAe1e,GAAG+Z,WAC1CmU,EAAWnU,EAAW+V,eACtB3B,EAAgBpU,EAAWiW,oBACjC1yB,EAAMF,KAAKE,IAAIA,EAAK4wB,GACpB7wB,EAAMD,KAAKC,IAAIA,EAAK6wB,EAAWC,EACnC,CAEJ,MAAO,CACHD,SAAU5wB,EACV6wB,cAAe9wB,EAAMC,EAE7B,CACH+X,OAAOwD,GACA,MAAMpI,EAAQ5C,KAAK4C,OACb,UAAE2S,GAAe3S,EACjB0I,EAAOtL,KAAKoM,YACZmW,EAAOjX,EAAKqF,KACZ4P,EAAUvgB,KAAKwiB,oBAAsBxiB,KAAKyiB,aAAaF,GAAQviB,KAAKmJ,QAAQoX,QAC5EmC,EAAUnzB,KAAKC,KAAKD,KAAKE,IAAI8lB,EAAU+H,MAAO/H,EAAU8H,QAAUkD,GAAW,EAAG,GAChFH,EAAS7wB,KAAKE,IAAI2S,EAAgBugB,aAAa3iB,KAAKmJ,QAAQiX,OAAQsC,GAAU,GAC9EE,EAAc5iB,KAAK6iB,eAAe7iB,KAAK2K,QACvC,cAAE2V,EAAc,SAAED,GAAcrgB,KAAKoiB,uBACrC,OAAEU,EAAO,OAAEC,EAAO,QAAEjB,EAAQ,QAAEC,GAhK5C,SAA2B1B,EAAUC,EAAeF,GAChD,IAAI0C,EAAS,EACTC,EAAS,EACTjB,EAAU,EACVC,EAAU,EACd,GAAIzB,EAAgBle,EAAgBigB,IAAK,CACrC,MAAMW,EAAa3C,EACb4C,EAAWD,EAAa1C,EACxB4C,EAAS3zB,KAAK4zB,IAAIH,GAClBI,EAAS7zB,KAAK8zB,IAAIL,GAClBM,EAAO/zB,KAAK4zB,IAAIF,GAChBM,EAAOh0B,KAAK8zB,IAAIJ,GAChBO,EAAU,CAACC,EAAOpzB,EAAGC,IAAI8R,EAAgBshB,cAAcD,EAAOT,EAAYC,GAAU,GAAQ,EAAI1zB,KAAKC,IAAIa,EAAGA,EAAI+vB,EAAQ9vB,EAAGA,EAAI8vB,GAC/HuD,EAAU,CAACF,EAAOpzB,EAAGC,IAAI8R,EAAgBshB,cAAcD,EAAOT,EAAYC,GAAU,IAAS,EAAI1zB,KAAKE,IAAIY,EAAGA,EAAI+vB,EAAQ9vB,EAAGA,EAAI8vB,GAChIwD,EAAOJ,EAAQ,EAAGN,EAAQI,GAC1BO,EAAOL,EAAQphB,EAAgB0hB,QAASV,EAAQG,GAChDQ,EAAOJ,EAAQvhB,EAAgB4hB,GAAId,EAAQI,GAC3CW,EAAON,EAAQvhB,EAAgB4hB,GAAK5hB,EAAgB0hB,QAASV,EAAQG,GAC3ET,GAAUc,EAAOG,GAAQ,EACzBhB,GAAUc,EAAOI,GAAQ,EACzBnC,IAAY8B,EAAOG,GAAQ,EAC3BhC,IAAY8B,EAAOI,GAAQ,CAC/B,CACA,MAAO,CACHnB,SACAC,SACAjB,UACAC,UAER,CAmIyDmC,CAAkB7D,EAAUC,EAAeF,GACtF+D,GAAY5O,EAAU+H,MAAQiD,GAAWuC,EACzCsB,GAAa7O,EAAU8H,OAASkD,GAAWwC,EAC3CsB,EAAY90B,KAAKC,IAAID,KAAKE,IAAI00B,EAAUC,GAAa,EAAG,GACxDvC,EAAczf,EAAgBkiB,YAAYtkB,KAAKmJ,QAAQwW,OAAQ0E,GAE/DE,GAAgB1C,EADFtyB,KAAKC,IAAIqyB,EAAczB,EAAQ,IACApgB,KAAKwkB,gCACxDxkB,KAAK8hB,QAAUA,EAAUD,EACzB7hB,KAAK+hB,QAAUA,EAAUF,EACzBvW,EAAKmZ,MAAQzkB,KAAK0kB,iBAClB1kB,KAAK6hB,YAAcA,EAAc0C,EAAevkB,KAAK2kB,qBAAqB3kB,KAAK2K,OAC/E3K,KAAK4hB,YAAcryB,KAAKC,IAAIwQ,KAAK6hB,YAAc0C,EAAe3B,EAAa,GAC3E5iB,KAAKuY,eAAegK,EAAM,EAAGA,EAAKpxB,OAAQ6Z,EAC9C,CACH4Z,eAAezyB,EAAG6e,GACX,MAAM7G,EAAOnK,KAAKmJ,QACZmC,EAAOtL,KAAKoM,YACZkU,EAAgBtgB,KAAKmiB,oBAC3B,OAAInR,GAAS7G,EAAKzB,UAAUwX,gBAAkBlgB,KAAK4C,MAAM4b,kBAAkBrsB,IAA0B,OAApBmZ,EAAKgC,QAAQnb,IAAemZ,EAAKqF,KAAKxe,GAAGyhB,OAC/G,EAEJ5T,KAAK6kB,uBAAuBvZ,EAAKgC,QAAQnb,GAAKmuB,EAAgBle,EAAgBigB,IACzF,CACA9J,eAAegK,EAAMhf,EAAO8O,EAAOrH,GAC/B,MAAMgG,EAAiB,UAAThG,EACRpI,EAAQ5C,KAAK4C,MACb2S,EAAY3S,EAAM2S,UAElBuP,EADOliB,EAAMuG,QACQT,UACrBqc,GAAWxP,EAAUP,KAAOO,EAAUT,OAAS,EAC/CkQ,GAAWzP,EAAUV,IAAMU,EAAUR,QAAU,EAC/CoL,EAAenP,GAAS8T,EAAc3E,aACtCyB,EAAczB,EAAe,EAAIngB,KAAK4hB,YACtCC,EAAc1B,EAAe,EAAIngB,KAAK6hB,aACtC,cAAE1K,EAAc,eAAED,GAAoBlX,KAAKqX,kBAAkB9T,EAAOyH,GAC1E,IACI7Y,EADA6wB,EAAahjB,KAAKiiB,eAEtB,IAAI9vB,EAAI,EAAGA,EAAIoR,IAASpR,EACpB6wB,GAAchjB,KAAK4kB,eAAezyB,EAAG6e,GAEzC,IAAI7e,EAAIoR,EAAOpR,EAAIoR,EAAQ8O,IAASlgB,EAAE,CAClC,MAAMmuB,EAAgBtgB,KAAK4kB,eAAezyB,EAAG6e,GACvCiU,EAAM1C,EAAKpwB,GACX4W,EAAa,CACfzV,EAAGyxB,EAAU/kB,KAAK8hB,QAClBpS,EAAGsV,EAAUhlB,KAAK+hB,QAClBiB,aACAC,SAAUD,EAAa1C,EACvBA,gBACAuB,cACAD,eAEA1K,IACAnO,EAAWI,QAAUgO,GAAiBnX,KAAK4V,0BAA0BzjB,EAAG8yB,EAAI1d,OAAS,SAAWyD,IAEpGgY,GAAc1C,EACdtgB,KAAKyX,cAAcwN,EAAK9yB,EAAG4W,EAAYiC,EAC3C,CACJ,CACA0Z,iBACI,MAAMpZ,EAAOtL,KAAKoM,YACZ8Y,EAAW5Z,EAAKqF,KACtB,IACIxe,EADAsyB,EAAQ,EAEZ,IAAItyB,EAAI,EAAGA,EAAI+yB,EAAS/zB,OAAQgB,IAAI,CAChC,MAAM2X,EAAQwB,EAAKgC,QAAQnb,GACb,OAAV2X,GAAmB4T,MAAM5T,KAAU9J,KAAK4C,MAAM4b,kBAAkBrsB,IAAO+yB,EAAS/yB,GAAGyhB,SACnF6Q,GAASl1B,KAAKwqB,IAAIjQ,GAE1B,CACA,OAAO2a,CACX,CACAI,uBAAuB/a,GACnB,MAAM2a,EAAQzkB,KAAKoM,YAAYqY,MAC/B,OAAIA,EAAQ,IAAM/G,MAAM5T,GACb1H,EAAgBigB,KAAO9yB,KAAKwqB,IAAIjQ,GAAS2a,GAE7C,CACX,CACAhQ,iBAAiB9J,GACb,MAAMW,EAAOtL,KAAKoM,YACZxJ,EAAQ5C,KAAK4C,MACbiQ,EAASjQ,EAAM+N,KAAKkC,QAAU,GAC9B/I,EAAQ1H,EAAgB+iB,aAAa7Z,EAAKgC,QAAQ3C,GAAQ/H,EAAMuG,QAAQic,QAC9E,MAAO,CACH1Q,MAAO7B,EAAOlI,IAAU,GACxBb,QAER,CACA0Y,kBAAkBD,GACd,IAAI/yB,EAAM,EACV,MAAMoT,EAAQ5C,KAAK4C,MACnB,IAAIzQ,EAAGuY,EAAMY,EAAMY,EAAY/C,EAC/B,IAAKoZ,EACD,IAAIpwB,EAAI,EAAGuY,EAAO9H,EAAM+N,KAAKC,SAASzf,OAAQgB,EAAIuY,IAAQvY,EACtD,GAAIyQ,EAAM0f,iBAAiBnwB,GAAI,CAC3BmZ,EAAO1I,EAAMiO,eAAe1e,GAC5BowB,EAAOjX,EAAKqF,KACZzE,EAAaZ,EAAKY,WAClB,KACJ,CAGR,IAAKqW,EACD,OAAO,EAEX,IAAIpwB,EAAI,EAAGuY,EAAO6X,EAAKpxB,OAAQgB,EAAIuY,IAAQvY,EACvCgX,EAAU+C,EAAW0J,0BAA0BzjB,GACnB,UAAxBgX,EAAQkc,cACR71B,EAAMD,KAAKC,IAAIA,EAAK2Z,EAAQqY,aAAe,EAAGrY,EAAQmc,kBAAoB,IAGlF,OAAO91B,CACX,CACAizB,aAAaF,GACT,IAAI/yB,EAAM,EACV,IAAI,IAAI2C,EAAI,EAAGuY,EAAO6X,EAAKpxB,OAAQgB,EAAIuY,IAAQvY,EAAE,CAC7C,MAAMgX,EAAUnJ,KAAK4V,0BAA0BzjB,GAC/C3C,EAAMD,KAAKC,IAAIA,EAAK2Z,EAAQ+S,QAAU,EAAG/S,EAAQoc,aAAe,EACpE,CACA,OAAO/1B,CACX,CACHm1B,qBAAqB1Z,GACd,IAAIua,EAAmB,EACvB,IAAI,IAAIrzB,EAAI,EAAGA,EAAI8Y,IAAgB9Y,EAC3B6N,KAAK4C,MAAM0f,iBAAiBnwB,KAC5BqzB,GAAoBxlB,KAAK6iB,eAAe1wB,IAGhD,OAAOqzB,CACX,CACH3C,eAAe5X,GACR,OAAO1b,KAAKC,IAAI4S,EAAgByN,eAAe7P,KAAK4C,MAAM+N,KAAKC,SAAS3F,GAAc1K,OAAQ,GAAI,EACtG,CACHikB,gCACO,OAAOxkB,KAAK2kB,qBAAqB3kB,KAAK4C,MAAM+N,KAAKC,SAASzf,SAAW,CACzE,EAGJ,MAAMs0B,UAAuB9X,EACzBC,UAAY,OACfA,gBAAkB,CACXgB,mBAAoB,OACpBC,gBAAiB,QACjB6W,UAAU,EACVC,UAAU,GAEjB/X,iBAAmB,CACZV,OAAQ,CACJ+O,QAAS,CACLnc,KAAM,YAEVsc,QAAS,CACLtc,KAAM,YAIlBgP,aACI9O,KAAKwO,qBAAsB,EAC3BxO,KAAKyO,oBAAqB,EAC1B+N,MAAM1N,YACV,CACAtH,OAAOwD,GACH,MAAMM,EAAOtL,KAAKoM,aACVmD,QAASqW,EAAOjV,KAAMiP,EAAS,GAAG,SAAEiG,GAAcva,EACpDwa,EAAqB9lB,KAAK4C,MAAMwU,oBACtC,IAAI,MAAE7T,EAAM,MAAE8O,GAAWjQ,EAAgB2jB,iCAAiCza,EAAMsU,EAAQkG,GACxF9lB,KAAKsO,WAAa/K,EAClBvD,KAAKuO,WAAa8D,EACdjQ,EAAgB4jB,oBAAoB1a,KACpC/H,EAAQ,EACR8O,EAAQuN,EAAOzuB,QAEnBy0B,EAAKxd,OAASpI,KAAK4C,MACnBgjB,EAAKK,cAAgBjmB,KAAK2K,MAC1Bib,EAAKM,aAAeL,EAASK,WAC7BN,EAAKhG,OAASA,EACd,MAAMzW,EAAUnJ,KAAK2V,6BAA6B3K,GAC7ChL,KAAKmJ,QAAQuc,WACdvc,EAAQqY,YAAc,GAE1BrY,EAAQgd,QAAUnmB,KAAKmJ,QAAQgd,QAC/BnmB,KAAKyX,cAAcmO,OAAMn0B,EAAW,CAChC20B,UAAWN,EACX3c,WACD6B,GACHhL,KAAKuY,eAAeqH,EAAQrc,EAAO8O,EAAOrH,EAC9C,CACAuN,eAAeqH,EAAQrc,EAAO8O,EAAOrH,GACjC,MAAMgG,EAAiB,UAAThG,GACR,OAAEsB,EAAO,OAAER,EAAO,SAAEkD,EAAS,SAAE6W,GAAc7lB,KAAKoM,aAClD,cAAE+K,EAAc,eAAED,GAAoBlX,KAAKqX,kBAAkB9T,EAAOyH,GACpEuB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,MACf,SAAEmZ,EAAS,QAAEQ,GAAanmB,KAAKmJ,QAC/Bkd,EAAejkB,EAAgBkkB,SAASX,GAAYA,EAAW7R,OAAOC,kBACtEwS,EAAevmB,KAAK4C,MAAMwU,qBAAuBpG,GAAkB,SAAThG,EAC1DX,EAAM9G,EAAQ8O,EACdmU,EAAc5G,EAAOzuB,OAC3B,IAAIs1B,EAAaljB,EAAQ,GAAKvD,KAAKmT,UAAU5P,EAAQ,GACrD,IAAI,IAAIpR,EAAI,EAAGA,EAAIq0B,IAAer0B,EAAE,CAChC,MAAM0tB,EAAQD,EAAOztB,GACf4W,EAAawd,EAAe1G,EAAQ,CAAC,EAC3C,GAAI1tB,EAAIoR,GAASpR,GAAKkY,EAAK,CACvBtB,EAAWiX,MAAO,EAClB,QACJ,CACA,MAAM7T,EAASnM,KAAKmT,UAAUhhB,GACxBu0B,EAAWtkB,EAAgB2a,cAAc5Q,EAAOM,IAChDqT,EAAS/W,EAAWwD,GAASD,EAAO0N,iBAAiB7N,EAAOI,GAAQpa,GACpE4tB,EAAShX,EAAW0D,GAASuE,GAAS0V,EAAW5a,EAAO4Q,eAAiB5Q,EAAOkO,iBAAiBhL,EAAWhP,KAAK4K,WAAWkB,EAAQK,EAAQ6C,GAAY7C,EAAOM,GAAQta,GAC7K4W,EAAWiX,KAAOtC,MAAMoC,IAAWpC,MAAMqC,IAAW2G,EACpD3d,EAAWvD,KAAOrT,EAAI,GAAK5C,KAAKwqB,IAAI5N,EAAOI,GAASka,EAAWla,IAAU8Z,EACrEF,IACApd,EAAWoD,OAASA,EACpBpD,EAAWkN,IAAM4P,EAASlV,KAAKxe,IAE/B+kB,IACAnO,EAAWI,QAAUgO,GAAiBnX,KAAK4V,0BAA0BzjB,EAAG0tB,EAAMtY,OAAS,SAAWyD,IAEjGub,GACDvmB,KAAKyX,cAAcoI,EAAO1tB,EAAG4W,EAAYiC,GAE7Cyb,EAAata,CACjB,CACJ,CACHqI,iBACO,MAAMlJ,EAAOtL,KAAKoM,YACZmD,EAAUjE,EAAKiE,QACfoX,EAASpX,EAAQpG,SAAWoG,EAAQpG,QAAQqY,aAAe,EAC3D7Q,EAAOrF,EAAKqF,MAAQ,GAC1B,IAAKA,EAAKxf,OACN,OAAOw1B,EAEX,MAAMC,EAAajW,EAAK,GAAG5G,KAAK/J,KAAK4V,0BAA0B,IACzDiR,EAAYlW,EAAKA,EAAKxf,OAAS,GAAG4Y,KAAK/J,KAAK4V,0BAA0BjF,EAAKxf,OAAS,IAC1F,OAAO5B,KAAKC,IAAIm3B,EAAQC,EAAYC,GAAa,CACrD,CACA1iB,OACI,MAAMmH,EAAOtL,KAAKoM,YAClBd,EAAKiE,QAAQuX,oBAAoB9mB,KAAK4C,MAAM2S,UAAWjK,EAAKgB,OAAOE,MACnEgQ,MAAMrY,MACV,EAGJ,MAAM4iB,UAA4BpZ,EAC9BC,UAAY,YACfA,gBAAkB,CACXiB,gBAAiB,MACjBnG,UAAW,CACPwX,eAAe,EACfC,cAAc,GAElB5W,WAAY,CACRyS,QAAS,CACLlc,KAAM,SACNiJ,WAAY,CACR,IACA,IACA,aACA,WACA,cACA,iBAIZmH,UAAW,IACX8S,WAAY,GAEnBpV,iBAAmB,CACZ+S,YAAa,EACbC,QAAS,CACLC,OAAQ,CACJhO,OAAQ,CACJiO,eAAgBle,GACZ,MAAM+N,EAAO/N,EAAM+N,KACnB,GAAIA,EAAKkC,OAAO1hB,QAAUwf,EAAKC,SAASzf,OAAQ,CAC5C,MAAQ0hB,QAAQ,WAAEkO,EAAW,MAAEzgB,IAAcsC,EAAMie,OAAO1X,QAC1D,OAAOwH,EAAKkC,OAAOpgB,KAAI,CAACiiB,EAAOviB,KAC3B,MACM6uB,EADOpe,EAAMiO,eAAe,GACf3E,WAAWwJ,SAASvjB,GACvC,MAAO,CACH8uB,KAAMvM,EACNwM,UAAWF,EAAMG,gBACjBC,YAAaJ,EAAMK,YACnBC,UAAWhhB,EACXihB,UAAWP,EAAMQ,YACjBT,WAAYA,EACZnN,QAAShR,EAAM4b,kBAAkBrsB,GACjCwY,MAAOxY,EACV,GAET,CACA,MAAO,EACX,GAEJsvB,QAAShxB,EAAGixB,EAAYb,GACpBA,EAAOje,MAAM+e,qBAAqBD,EAAW/W,OAC7CkW,EAAOje,MAAM4E,QACjB,IAGR0F,OAAQ,CACJ9b,EAAG,CACC0O,KAAM,eACNknB,WAAY,CACRC,SAAS,GAEb5K,aAAa,EACbF,KAAM,CACF+K,UAAU,GAEdC,YAAa,CACTF,SAAS,GAEbjE,WAAY,KAIxBnjB,YAAY+C,EAAOqI,GACfuR,MAAM5Z,EAAOqI,GACbjL,KAAK4hB,iBAAcnwB,EACnBuO,KAAK6hB,iBAAcpwB,CACvB,CACAgjB,iBAAiB9J,GACb,MAAMW,EAAOtL,KAAKoM,YACZxJ,EAAQ5C,KAAK4C,MACbiQ,EAASjQ,EAAM+N,KAAKkC,QAAU,GAC9B/I,EAAQ1H,EAAgB+iB,aAAa7Z,EAAKgC,QAAQ3C,GAAOvZ,EAAGwR,EAAMuG,QAAQic,QAChF,MAAO,CACH1Q,MAAO7B,EAAOlI,IAAU,GACxBb,QAER,CACA4I,gBAAgBpH,EAAMqF,EAAMpN,EAAO8O,GAC/B,OAAOjQ,EAAgBglB,4BAA4BC,KAAKrnB,KAAjDoC,CAAuDkJ,EAAMqF,EAAMpN,EAAO8O,EACrF,CACA7K,OAAOwD,GACH,MAAMuX,EAAOviB,KAAKoM,YAAYuE,KAC9B3Q,KAAKsnB,gBACLtnB,KAAKuY,eAAegK,EAAM,EAAGA,EAAKpxB,OAAQ6Z,EAC9C,CACHyI,YACO,MAAMnI,EAAOtL,KAAKoM,YACZkH,EAAQ,CACV7jB,IAAKqkB,OAAOC,kBACZvkB,IAAKskB,OAAOE,mBAahB,OAXA1I,EAAKqF,KAAKxN,SAAQ,CAACsS,EAAS9K,KACxB,MAAMwB,EAASnM,KAAKmT,UAAUxI,GAAOvZ,GAChCssB,MAAMvR,IAAWnM,KAAK4C,MAAM4b,kBAAkB7T,KAC3CwB,EAASmH,EAAM7jB,MACf6jB,EAAM7jB,IAAM0c,GAEZA,EAASmH,EAAM9jB,MACf8jB,EAAM9jB,IAAM2c,GAEpB,IAEGmH,CACX,CACHgU,gBACO,MAAM1kB,EAAQ5C,KAAK4C,MACb2S,EAAY3S,EAAM2S,UAClBpL,EAAOvH,EAAMuG,QACboe,EAAUh4B,KAAKE,IAAI8lB,EAAUT,MAAQS,EAAUP,KAAMO,EAAUR,OAASQ,EAAUV,KAClFgN,EAActyB,KAAKC,IAAI+3B,EAAU,EAAG,GAEpChD,GAAgB1C,EADFtyB,KAAKC,IAAI2a,EAAKqd,iBAAmB3F,EAAc,IAAM1X,EAAKqd,iBAAmB,EAAG,IACjD5kB,EAAM6kB,yBACzDznB,KAAK6hB,YAAcA,EAAc0C,EAAevkB,KAAK2K,MACrD3K,KAAK4hB,YAAc5hB,KAAK6hB,YAAc0C,CAC1C,CACAhM,eAAegK,EAAMhf,EAAO8O,EAAOrH,GAC/B,MAAMgG,EAAiB,UAAThG,EACRpI,EAAQ5C,KAAK4C,MAEbkiB,EADOliB,EAAMuG,QACQT,UACrBuB,EAAQjK,KAAKoM,YAAYsE,OACzBqU,EAAU9a,EAAMyd,QAChB1C,EAAU/a,EAAM0d,QAChBC,EAAoB3d,EAAM4d,cAAc,GAAK,GAAMzlB,EAAgB4hB,GACzE,IACI7xB,EADAsxB,EAAQmE,EAEZ,MAAME,EAAe,IAAM9nB,KAAK+nB,uBAChC,IAAI51B,EAAI,EAAGA,EAAIoR,IAASpR,EACpBsxB,GAASzjB,KAAKgoB,cAAc71B,EAAG6Y,EAAM8c,GAEzC,IAAI31B,EAAIoR,EAAOpR,EAAIoR,EAAQ8O,EAAOlgB,IAAI,CAClC,MAAM8yB,EAAM1C,EAAKpwB,GACjB,IAAI6wB,EAAaS,EACbR,EAAWQ,EAAQzjB,KAAKgoB,cAAc71B,EAAG6Y,EAAM8c,GAC/CjG,EAAcjf,EAAM4b,kBAAkBrsB,GAAK8X,EAAMge,8BAA8BjoB,KAAKmT,UAAUhhB,GAAGf,GAAK,EAC1GqyB,EAAQR,EACJjS,IACI8T,EAAc3E,eACd0B,EAAc,GAEdiD,EAAc5E,gBACd8C,EAAaC,EAAW2E,IAGhC,MAAM7e,EAAa,CACfzV,EAAGyxB,EACHrV,EAAGsV,EACHpD,YAAa,EACbC,cACAmB,aACAC,WACA9Z,QAASnJ,KAAK4V,0BAA0BzjB,EAAG8yB,EAAI1d,OAAS,SAAWyD,IAEvEhL,KAAKyX,cAAcwN,EAAK9yB,EAAG4W,EAAYiC,EAC3C,CACJ,CACA+c,uBACI,MAAMzc,EAAOtL,KAAKoM,YAClB,IAAIiG,EAAQ,EAMZ,OALA/G,EAAKqF,KAAKxN,SAAQ,CAACsS,EAAS9K,MACnB+S,MAAM1d,KAAKmT,UAAUxI,GAAOvZ,IAAM4O,KAAK4C,MAAM4b,kBAAkB7T,IAChE0H,GACJ,IAEGA,CACX,CACH2V,cAAcrd,EAAOK,EAAM8c,GACpB,OAAO9nB,KAAK4C,MAAM4b,kBAAkB7T,GAASvI,EAAgB8f,UAAUliB,KAAK4V,0BAA0BjL,EAAOK,GAAMyY,OAASqE,GAAgB,CAChJ,EAGJ,MAAMI,UAAsBjI,EACxBrS,UAAY,MACfA,gBAAkB,CACXwS,OAAQ,EACRC,SAAU,EACVC,cAAe,IACfX,OAAQ,QAIhB,MAAMwI,UAAwBxa,EAC1BC,UAAY,QACfA,gBAAkB,CACXgB,mBAAoB,OACpBC,gBAAiB,QACjBqB,UAAW,IACXwV,UAAU,EACVrQ,SAAU,CACNuQ,KAAM,CACF1W,KAAM,WAIrBtB,iBAAmB,CACZ+S,YAAa,EACbzT,OAAQ,CACJ9b,EAAG,CACC0O,KAAM,kBAIrB2U,iBAAiB9J,GACV,MAAMmB,EAAS9L,KAAKoM,YAAYN,OAC1BK,EAASnM,KAAKmT,UAAUxI,GAC9B,MAAO,CACH+J,MAAO5I,EAAOgH,YAAYnI,GAC1Bb,MAAO,GAAKgC,EAAO6I,iBAAiBxI,EAAOL,EAAOU,OAE1D,CACAkG,gBAAgBpH,EAAMqF,EAAMpN,EAAO8O,GAC/B,OAAOjQ,EAAgBglB,4BAA4BC,KAAKrnB,KAAjDoC,CAAuDkJ,EAAMqF,EAAMpN,EAAO8O,EACrF,CACA7K,OAAOwD,GACH,MAAMM,EAAOtL,KAAKoM,YACZwZ,EAAOta,EAAKiE,QACZqQ,EAAStU,EAAKqF,MAAQ,GACtBkC,EAASvH,EAAKgB,OAAOwG,YAE3B,GADA8S,EAAKhG,OAASA,EACD,WAAT5U,EAAmB,CACnB,MAAM7B,EAAUnJ,KAAK2V,6BAA6B3K,GAC7ChL,KAAKmJ,QAAQuc,WACdvc,EAAQqY,YAAc,GAE1B,MAAMzY,EAAa,CACf/B,OAAO,EACPohB,UAAWvV,EAAO1hB,SAAWyuB,EAAOzuB,OACpCgY,WAEJnJ,KAAKyX,cAAcmO,OAAMn0B,EAAWsX,EAAYiC,EACpD,CACAhL,KAAKuY,eAAeqH,EAAQ,EAAGA,EAAOzuB,OAAQ6Z,EAClD,CACAuN,eAAeqH,EAAQrc,EAAO8O,EAAOrH,GACjC,MAAMf,EAAQjK,KAAKoM,YAAYsE,OACzBM,EAAiB,UAAThG,EACd,IAAI,IAAI7Y,EAAIoR,EAAOpR,EAAIoR,EAAQ8O,EAAOlgB,IAAI,CACtC,MAAM0tB,EAAQD,EAAOztB,GACfgX,EAAUnJ,KAAK4V,0BAA0BzjB,EAAG0tB,EAAMtY,OAAS,SAAWyD,GACtEqd,EAAgBpe,EAAMqe,yBAAyBn2B,EAAG6N,KAAKmT,UAAUhhB,GAAGf,GACpEkC,EAAI0d,EAAQ/G,EAAMyd,QAAUW,EAAc/0B,EAC1Coc,EAAIsB,EAAQ/G,EAAM0d,QAAUU,EAAc3Y,EAC1C3G,EAAa,CACfzV,IACAoc,IACA+T,MAAO4E,EAAc5E,MACrBzD,KAAMtC,MAAMpqB,IAAMoqB,MAAMhO,GACxBvG,WAEJnJ,KAAKyX,cAAcoI,EAAO1tB,EAAG4W,EAAYiC,EAC7C,CACJ,EAGJ,MAAMud,UAA0B5a,EAC5BC,UAAY,UACfA,gBAAkB,CACXgB,oBAAoB,EACpBC,gBAAiB,QACjB6W,UAAU,EACVxW,MAAM,GAEbtB,iBAAmB,CACZ4a,YAAa,CACTxd,KAAM,SAEVkC,OAAQ,CACJ5Z,EAAG,CACCwM,KAAM,UAEV4P,EAAG,CACC5P,KAAM,YAIrB2U,iBAAiB9J,GACV,MAAMW,EAAOtL,KAAKoM,YACZyG,EAAS7S,KAAK4C,MAAM+N,KAAKkC,QAAU,IACnC,OAAEtC,EAAO,OAAEE,GAAYnF,EACvBa,EAASnM,KAAKmT,UAAUxI,GACxBrX,EAAIid,EAAOoE,iBAAiBxI,EAAO7Y,GACnCoc,EAAIe,EAAOkE,iBAAiBxI,EAAOuD,GACzC,MAAO,CACHgF,MAAO7B,EAAOlI,IAAU,GACxBb,MAAO,IAAMxW,EAAI,KAAOoc,EAAI,IAEpC,CACAlI,OAAOwD,GACH,MAAMM,EAAOtL,KAAKoM,aACVuE,KAAMiP,EAAS,IAAQtU,EACzBwa,EAAqB9lB,KAAK4C,MAAMwU,oBACtC,IAAI,MAAE7T,EAAM,MAAE8O,GAAWjQ,EAAgB2jB,iCAAiCza,EAAMsU,EAAQkG,GAOxF,GANA9lB,KAAKsO,WAAa/K,EAClBvD,KAAKuO,WAAa8D,EACdjQ,EAAgB4jB,oBAAoB1a,KACpC/H,EAAQ,EACR8O,EAAQuN,EAAOzuB,QAEf6O,KAAKmJ,QAAQuc,SAAU,CACvB,MAAQnW,QAASqW,EAAK,SAAEC,GAAcva,EACtCsa,EAAKxd,OAASpI,KAAK4C,MACnBgjB,EAAKK,cAAgBjmB,KAAK2K,MAC1Bib,EAAKM,aAAeL,EAASK,WAC7BN,EAAKhG,OAASA,EACd,MAAMzW,EAAUnJ,KAAK2V,6BAA6B3K,GAClD7B,EAAQgd,QAAUnmB,KAAKmJ,QAAQgd,QAC/BnmB,KAAKyX,cAAcmO,OAAMn0B,EAAW,CAChC20B,UAAWN,EACX3c,WACD6B,EACP,CACAhL,KAAKuY,eAAeqH,EAAQrc,EAAO8O,EAAOrH,EAC9C,CACAiE,cACI,MAAM,SAAEyW,GAAc1lB,KAAKmJ,SACtBnJ,KAAK4O,oBAAsB8W,IAC5B1lB,KAAK4O,mBAAqB5O,KAAK4C,MAAM6lB,SAASC,WAAW,SAE7DlM,MAAMvN,aACV,CACAsJ,eAAeqH,EAAQrc,EAAO8O,EAAOrH,GACjC,MAAMgG,EAAiB,UAAThG,GACR,OAAEsB,EAAO,OAAER,EAAO,SAAEkD,EAAS,SAAE6W,GAAc7lB,KAAKoM,YAClDkL,EAAYtX,KAAK4V,0BAA0BrS,EAAOyH,GAClDmM,EAAgBnX,KAAKiX,iBAAiBK,GACtCJ,EAAiBlX,KAAKkX,eAAelM,EAAMmM,GAC3C5K,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,MACf,SAAEmZ,EAAS,QAAEQ,GAAanmB,KAAKmJ,QAC/Bkd,EAAejkB,EAAgBkkB,SAASX,GAAYA,EAAW7R,OAAOC,kBACtEwS,EAAevmB,KAAK4C,MAAMwU,qBAAuBpG,GAAkB,SAAThG,EAChE,IAAIyb,EAAaljB,EAAQ,GAAKvD,KAAKmT,UAAU5P,EAAQ,GACrD,IAAI,IAAIpR,EAAIoR,EAAOpR,EAAIoR,EAAQ8O,IAASlgB,EAAE,CACtC,MAAM0tB,EAAQD,EAAOztB,GACfga,EAASnM,KAAKmT,UAAUhhB,GACxB4W,EAAawd,EAAe1G,EAAQ,CAAC,EACrC6G,EAAWtkB,EAAgB2a,cAAc5Q,EAAOM,IAChDqT,EAAS/W,EAAWwD,GAASD,EAAO0N,iBAAiB7N,EAAOI,GAAQpa,GACpE4tB,EAAShX,EAAW0D,GAASuE,GAAS0V,EAAW5a,EAAO4Q,eAAiB5Q,EAAOkO,iBAAiBhL,EAAWhP,KAAK4K,WAAWkB,EAAQK,EAAQ6C,GAAY7C,EAAOM,GAAQta,GAC7K4W,EAAWiX,KAAOtC,MAAMoC,IAAWpC,MAAMqC,IAAW2G,EACpD3d,EAAWvD,KAAOrT,EAAI,GAAK5C,KAAKwqB,IAAI5N,EAAOI,GAASka,EAAWla,IAAU8Z,EACrEF,IACApd,EAAWoD,OAASA,EACpBpD,EAAWkN,IAAM4P,EAASlV,KAAKxe,IAE/B+kB,IACAnO,EAAWI,QAAUgO,GAAiBnX,KAAK4V,0BAA0BzjB,EAAG0tB,EAAMtY,OAAS,SAAWyD,IAEjGub,GACDvmB,KAAKyX,cAAcoI,EAAO1tB,EAAG4W,EAAYiC,GAE7Cyb,EAAata,CACjB,CACAnM,KAAKwX,oBAAoBL,EAAenM,EAAMsM,EAClD,CACH9C,iBACO,MAAMlJ,EAAOtL,KAAKoM,YACZuE,EAAOrF,EAAKqF,MAAQ,GAC1B,IAAK3Q,KAAKmJ,QAAQuc,SAAU,CACxB,IAAIl2B,EAAM,EACV,IAAI,IAAI2C,EAAIwe,EAAKxf,OAAS,EAAGgB,GAAK,IAAKA,EACnC3C,EAAMD,KAAKC,IAAIA,EAAKmhB,EAAKxe,GAAG4X,KAAK/J,KAAK4V,0BAA0BzjB,IAAM,GAE1E,OAAO3C,EAAM,GAAKA,CACtB,CACA,MAAM+f,EAAUjE,EAAKiE,QACfoX,EAASpX,EAAQpG,SAAWoG,EAAQpG,QAAQqY,aAAe,EACjE,IAAK7Q,EAAKxf,OACN,OAAOw1B,EAEX,MAAMC,EAAajW,EAAK,GAAG5G,KAAK/J,KAAK4V,0BAA0B,IACzDiR,EAAYlW,EAAKA,EAAKxf,OAAS,GAAG4Y,KAAK/J,KAAK4V,0BAA0BjF,EAAKxf,OAAS,IAC1F,OAAO5B,KAAKC,IAAIm3B,EAAQC,EAAYC,GAAa,CACrD,EAGJ,IAAI8B,EAA2BvqB,OAAOuD,OAAO,CAC7CC,UAAW,KACXga,cAAeA,EACf8D,iBAAkBA,EAClBO,mBAAoBA,EACpBwF,eAAgBA,EAChByC,cAAeA,EACfnB,oBAAqBA,EACrBoB,gBAAiBA,EACjBI,kBAAmBA,IAOf,SAASK,IACT,MAAM,IAAIC,MAAM,kFACpB,CAMI,MAAMC,EAUJlb,gBAAgBmb,GACd3qB,OAAOqB,OAAOqpB,EAAgBE,UAAWD,EAC7C,CACA5f,QACAtJ,YAAYsJ,GACRnJ,KAAKmJ,QAAUA,GAAW,CAAC,CAC/B,CAEA8f,OAAQ,CACRC,UACI,OAAON,GACX,CACAxW,QACI,OAAOwW,GACX,CACAO,SACI,OAAOP,GACX,CACA1jB,MACI,OAAO0jB,GACX,CACAQ,OACI,OAAOR,GACX,CACAS,UACI,OAAOT,GACX,CACAU,QACI,OAAOV,GACX,EAEJ,IAAIW,EAAW,CACXC,MAAOV,GAGX,SAASW,EAAaC,EAASld,EAAM1C,EAAO6f,GACxC,MAAM,WAAEzd,EAAW,KAAEyE,EAAK,QAAE4B,GAAamX,EACnCpd,EAASJ,EAAWE,YAAYE,OACtC,GAAIA,GAAUE,IAASF,EAAOE,MAAiB,MAATA,GAAgB+F,GAAW5B,EAAKxf,OAAQ,CAC1E,MAAMy4B,EAAetd,EAAOud,eAAiBznB,EAAgB0nB,cAAgB1nB,EAAgB2nB,aAC7F,IAAKJ,EACD,OAAOC,EAAajZ,EAAMnE,EAAM1C,GAC7B,GAAIoC,EAAWmC,eAAgB,CAClC,MAAM2b,EAAKrZ,EAAK,GACV2C,EAA+B,mBAAhB0W,EAAGC,UAA2BD,EAAGC,SAASzd,GAC/D,GAAI8G,EAAO,CACP,MAAM/P,EAAQqmB,EAAajZ,EAAMnE,EAAM1C,EAAQwJ,GACzCjJ,EAAMuf,EAAajZ,EAAMnE,EAAM1C,EAAQwJ,GAC7C,MAAO,CACH4W,GAAI3mB,EAAM2mB,GACVC,GAAI9f,EAAI8f,GAEhB,CACJ,CACJ,CACA,MAAO,CACHD,GAAI,EACJC,GAAIxZ,EAAKxf,OAAS,EAE1B,CACC,SAASi5B,EAAyBxnB,EAAO4J,EAAM6d,EAAUC,EAASX,GAC/D,MAAMnf,EAAW5H,EAAM2nB,+BACjBzgB,EAAQugB,EAAS7d,GACvB,IAAI,IAAIra,EAAI,EAAGuY,EAAOF,EAASrZ,OAAQgB,EAAIuY,IAAQvY,EAAE,CACjD,MAAM,MAAEwY,EAAM,KAAEgG,GAAUnG,EAASrY,IAC7B,GAAE+3B,EAAG,GAAEC,GAAQV,EAAajf,EAASrY,GAAIqa,EAAM1C,EAAO6f,GAC5D,IAAI,IAAIrrB,EAAI4rB,EAAI5rB,GAAK6rB,IAAM7rB,EAAE,CACzB,MAAMmX,EAAU9E,EAAKrS,GAChBmX,EAAQuK,MACTsK,EAAQ7U,EAAS9K,EAAOrM,EAEhC,CACJ,CACJ,CAUC,SAASksB,EAAkB5nB,EAAOynB,EAAU7d,EAAMie,EAAkBC,GACjE,MAAMzmB,EAAQ,GACd,OAAKymB,GAAqB9nB,EAAM+nB,cAAcN,IAe9CD,EAAyBxnB,EAAO4J,EAAM6d,GAZf,SAAS5U,EAASxK,EAAcN,IAC9C+f,GAAqBtoB,EAAgBwoB,eAAenV,EAAS7S,EAAM2S,UAAW,KAG/EE,EAAQoV,QAAQR,EAAS/2B,EAAG+2B,EAAS3a,EAAG+a,IACxCxmB,EAAMgB,KAAK,CACPwQ,UACAxK,eACAN,SAGZ,IACgE,GACzD1G,GAfIA,CAgBf,CA0DC,SAAS6mB,EAAgBloB,EAAOynB,EAAU7d,EAAMmd,EAAWc,EAAkBC,GAC1E,OAAKA,GAAqB9nB,EAAM+nB,cAAcN,GAG9B,MAAT7d,GAAiBmd,EAvC3B,SAAkC/mB,EAAOynB,EAAU7d,EAAMmd,EAAWc,EAAkBC,GACnF,IAAIzmB,EAAQ,GACZ,MAAM8mB,EArDT,SAAkCve,GAC/B,MAAMwe,GAA8B,IAAvBxe,EAAKmR,QAAQ,KACpBsN,GAA8B,IAAvBze,EAAKmR,QAAQ,KAC1B,OAAO,SAASuN,EAAKC,GACjB,MAAMC,EAASJ,EAAOz7B,KAAKwqB,IAAImR,EAAI53B,EAAI63B,EAAI73B,GAAK,EAC1C+3B,EAASJ,EAAO17B,KAAKwqB,IAAImR,EAAIxb,EAAIyb,EAAIzb,GAAK,EAChD,OAAOngB,KAAK+7B,KAAK/7B,KAAK2P,IAAIksB,EAAQ,GAAK77B,KAAK2P,IAAImsB,EAAQ,GAC5D,CACJ,CA6C2BE,CAAyB/e,GAChD,IAAIgf,EAAc1X,OAAOC,kBA8BzB,OADAqW,EAAyBxnB,EAAO4J,EAAM6d,GA5BtC,SAAwB5U,EAASxK,EAAcN,GAC3C,MAAMkgB,EAAUpV,EAAQoV,QAAQR,EAAS/2B,EAAG+2B,EAAS3a,EAAG+a,GACxD,GAAId,IAAckB,EACd,OAEJ,MAAMzN,EAAS3H,EAAQgW,eAAehB,GAEtC,IADsBC,IAAoB9nB,EAAM+nB,cAAcvN,KACzCyN,EACjB,OAEJ,MAAMa,EAAWX,EAAeV,EAAUjN,GACtCsO,EAAWF,GACXvnB,EAAQ,CACJ,CACIwR,UACAxK,eACAN,UAGR6gB,EAAcE,GACPA,IAAaF,GACpBvnB,EAAMgB,KAAK,CACPwQ,UACAxK,eACAN,SAGZ,IAEO1G,CACX,CAKyG0nB,CAAyB/oB,EAAOynB,EAAU7d,EAAMmd,EAAWc,EAAkBC,GA7DrL,SAA+B9nB,EAAOynB,EAAU7d,EAAMie,GACnD,IAAIxmB,EAAQ,GAmBZ,OADAmmB,EAAyBxnB,EAAO4J,EAAM6d,GAjBtC,SAAwB5U,EAASxK,EAAcN,GAC3C,MAAM,WAAEqY,EAAW,SAAEC,GAAcxN,EAAQmW,SAAS,CAChD,aACA,YACDnB,IACG,MAAEhH,GAAWrhB,EAAgBypB,kBAAkBpW,EAAS,CAC1DniB,EAAG+2B,EAAS/2B,EACZoc,EAAG2a,EAAS3a,IAEZtN,EAAgBshB,cAAcD,EAAOT,EAAYC,IACjDhf,EAAMgB,KAAK,CACPwQ,UACAxK,eACAN,SAGZ,IAEO1G,CACX,CAwCwC6nB,CAAsBlpB,EAAOynB,EAAU7d,EAAMie,GAFtE,EAGf,CACC,SAASsB,EAAanpB,EAAOynB,EAAU7d,EAAMmd,EAAWc,GACrD,MAAMxmB,EAAQ,GACR+nB,EAAuB,MAATxf,EAAe,WAAa,WAChD,IAAIyf,GAAiB,EAWrB,OAVA7B,EAAyBxnB,EAAO4J,EAAM6d,GAAU,CAAC5U,EAASxK,EAAcN,KAChE8K,EAAQuW,GAAa3B,EAAS7d,GAAOie,KACrCxmB,EAAMgB,KAAK,CACPwQ,UACAxK,eACAN,UAEJshB,EAAiBA,GAAkBxW,EAAQoV,QAAQR,EAAS/2B,EAAG+2B,EAAS3a,EAAG+a,GAC/E,IAEAd,IAAcsC,EACP,GAEJhoB,CACX,CACC,IAAIioB,EAAc,CACf9B,2BACA+B,MAAO,CACVxhB,MAAO/H,EAAOnS,EAAG0Y,EAASshB,GACf,MAAMJ,EAAWjoB,EAAgBgqB,oBAAoB37B,EAAGmS,GAClD4J,EAAOrD,EAAQqD,MAAQ,IACvBke,EAAmBvhB,EAAQuhB,mBAAoB,EAC/CzmB,EAAQkF,EAAQwgB,UAAYa,EAAkB5nB,EAAOynB,EAAU7d,EAAMie,EAAkBC,GAAoBI,EAAgBloB,EAAOynB,EAAU7d,GAAM,EAAOie,EAAkBC,GAC3KrV,EAAW,GACjB,OAAKpR,EAAM9S,QAGXyR,EAAM2nB,+BAA+BpnB,SAASmI,IAC1C,MAAMX,EAAQ1G,EAAM,GAAG0G,MACjB8K,EAAUnK,EAAKqF,KAAKhG,GACtB8K,IAAYA,EAAQuK,MACpB3K,EAASpQ,KAAK,CACVwQ,UACAxK,aAAcK,EAAKX,MACnBA,SAER,IAEG0K,GAbI,EAcf,EACP9F,QAAS3M,EAAOnS,EAAG0Y,EAASshB,GACjB,MAAMJ,EAAWjoB,EAAgBgqB,oBAAoB37B,EAAGmS,GAClD4J,EAAOrD,EAAQqD,MAAQ,KACvBke,EAAmBvhB,EAAQuhB,mBAAoB,EACrD,IAAIzmB,EAAQkF,EAAQwgB,UAAYa,EAAkB5nB,EAAOynB,EAAU7d,EAAMie,EAAkBC,GAAoBI,EAAgBloB,EAAOynB,EAAU7d,GAAM,EAAOie,EAAkBC,GAC/K,GAAIzmB,EAAM9S,OAAS,EAAG,CAClB,MAAM8Z,EAAehH,EAAM,GAAGgH,aACxB0F,EAAO/N,EAAMiO,eAAe5F,GAAc0F,KAChD1M,EAAQ,GACR,IAAI,IAAI9R,EAAI,EAAGA,EAAIwe,EAAKxf,SAAUgB,EAC9B8R,EAAMgB,KAAK,CACPwQ,QAAS9E,EAAKxe,GACd8Y,eACAN,MAAOxY,GAGnB,CACA,OAAO8R,CACX,EACP4b,MAAM,CAACjd,EAAOnS,EAAG0Y,EAASshB,IAIRD,EAAkB5nB,EAHRR,EAAgBgqB,oBAAoB37B,EAAGmS,GAC3CuG,EAAQqD,MAAQ,KAEmBie,EADvBthB,EAAQuhB,mBAAoB,GAGhE2B,QAASzpB,EAAOnS,EAAG0Y,EAASshB,GACjB,MAAMJ,EAAWjoB,EAAgBgqB,oBAAoB37B,EAAGmS,GAClD4J,EAAOrD,EAAQqD,MAAQ,KACvBke,EAAmBvhB,EAAQuhB,mBAAoB,EACrD,OAAOI,EAAgBloB,EAAOynB,EAAU7d,EAAMrD,EAAQwgB,UAAWc,EAAkBC,EACvF,EACPp3B,EAAE,CAACsP,EAAOnS,EAAG0Y,EAASshB,IAEJsB,EAAanpB,EADHR,EAAgBgqB,oBAAoB37B,EAAGmS,GACnB,IAAKuG,EAAQwgB,UAAWc,GAExE/a,EAAE,CAAC9M,EAAOnS,EAAG0Y,EAASshB,IAEJsB,EAAanpB,EADHR,EAAgBgqB,oBAAoB37B,EAAGmS,GACnB,IAAKuG,EAAQwgB,UAAWc,KAKzE,MAAM6B,EAAmB,CACrB,OACA,MACA,QACA,UAEJ,SAASC,EAAiBC,EAAOnC,GAC7B,OAAOmC,EAAMrf,QAAQhe,GAAIA,EAAEs9B,MAAQpC,GACvC,CACA,SAASqC,EAA4BF,EAAOhgB,GACxC,OAAOggB,EAAMrf,QAAQhe,IAAyC,IAArCm9B,EAAiB3O,QAAQxuB,EAAEs9B,MAAet9B,EAAEw9B,IAAIngB,OAASA,GACtF,CACA,SAASogB,EAAaJ,EAAOpiB,GACzB,OAAOoiB,EAAM9S,MAAK,CAACrpB,EAAGC,KAClB,MAAMu8B,EAAKziB,EAAU9Z,EAAID,EACnBkrB,EAAKnR,EAAU/Z,EAAIC,EACzB,OAAOu8B,EAAGtsB,SAAWgb,EAAGhb,OAASssB,EAAGliB,MAAQ4Q,EAAG5Q,MAAQkiB,EAAGtsB,OAASgb,EAAGhb,MAAM,GAEpF,CA0EA,SAASusB,EAAeC,EAAYxX,EAAWllB,EAAGC,GAC9C,OAAOf,KAAKC,IAAIu9B,EAAW18B,GAAIklB,EAAUllB,IAAMd,KAAKC,IAAIu9B,EAAWz8B,GAAIilB,EAAUjlB,GACrF,CACA,SAAS08B,EAAiBD,EAAYE,GAClCF,EAAWlY,IAAMtlB,KAAKC,IAAIu9B,EAAWlY,IAAKoY,EAAWpY,KACrDkY,EAAW/X,KAAOzlB,KAAKC,IAAIu9B,EAAW/X,KAAMiY,EAAWjY,MACvD+X,EAAWhY,OAASxlB,KAAKC,IAAIu9B,EAAWhY,OAAQkY,EAAWlY,QAC3DgY,EAAWjY,MAAQvlB,KAAKC,IAAIu9B,EAAWjY,MAAOmY,EAAWnY,MAC7D,CACA,SAASoY,GAAW3X,EAAW4X,EAAQC,EAAQ3hB,GAC3C,MAAM,IAAEghB,EAAI,IAAEE,GAASS,EACjBL,EAAaxX,EAAUwX,WAC7B,IAAK3qB,EAAgBmG,SAASkkB,GAAM,CAC5BW,EAAOrjB,OACPwL,EAAUkX,IAAQW,EAAOrjB,MAE7B,MAAMc,EAAQY,EAAO2hB,EAAOviB,QAAU,CAClCd,KAAM,EACNsI,MAAO,GAEXxH,EAAMd,KAAOxa,KAAKC,IAAIqb,EAAMd,KAAMqjB,EAAOnS,WAAa0R,EAAItP,OAASsP,EAAIrP,OACvE8P,EAAOrjB,KAAOc,EAAMd,KAAOc,EAAMwH,MACjCkD,EAAUkX,IAAQW,EAAOrjB,IAC7B,CACI4iB,EAAIU,YACJL,EAAiBD,EAAYJ,EAAIU,cAErC,MAAMC,EAAW/9B,KAAKC,IAAI,EAAG29B,EAAOI,WAAaT,EAAeC,EAAYxX,EAAW,OAAQ,UACzFiY,EAAYj+B,KAAKC,IAAI,EAAG29B,EAAOM,YAAcX,EAAeC,EAAYxX,EAAW,MAAO,WAC1FmY,EAAeJ,IAAa/X,EAAUtjB,EACtC07B,EAAgBH,IAAcjY,EAAUjmB,EAG9C,OAFAimB,EAAUtjB,EAAIq7B,EACd/X,EAAUjmB,EAAIk+B,EACPJ,EAAOnS,WAAa,CACvB2S,KAAMF,EACNG,MAAOF,GACP,CACAC,KAAMD,EACNE,MAAOH,EAEf,CAaA,SAASI,GAAW7S,EAAY1F,GAC5B,MAAMwX,EAAaxX,EAAUwX,WAa7B,OAZA,SAA4BgB,GACxB,MAAMC,EAAS,CACXhZ,KAAM,EACNH,IAAK,EACLC,MAAO,EACPC,OAAQ,GAKZ,OAHAgZ,EAAU5qB,SAASspB,IACfuB,EAAOvB,GAAOl9B,KAAKC,IAAI+lB,EAAUkX,GAAMM,EAAWN,GAAK,IAEpDuB,CACX,CACoBC,CAAbhT,EAAgC,CACnC,OACA,SACoB,CACpB,MACA,UAER,CACA,SAASiT,GAASC,EAAO5Y,EAAW4X,EAAQ1hB,GACxC,MAAM2iB,EAAa,GACnB,IAAIj8B,EAAGuY,EAAM0iB,EAAQT,EAAK0B,EAAOC,EACjC,IAAIn8B,EAAI,EAAGuY,EAAOyjB,EAAMh9B,OAAQk9B,EAAQ,EAAGl8B,EAAIuY,IAAQvY,EAAE,CACrDi7B,EAASe,EAAMh8B,GACfw6B,EAAMS,EAAOT,IACbA,EAAInlB,OAAO4lB,EAAO9P,OAAS/H,EAAUtjB,EAAGm7B,EAAO/P,QAAU9H,EAAUjmB,EAAGw+B,GAAWV,EAAOnS,WAAY1F,IACpG,MAAM,KAAEqY,EAAK,MAAEC,GAAWX,GAAW3X,EAAW4X,EAAQC,EAAQ3hB,GAChE4iB,GAAST,GAAQQ,EAAWj9B,OAC5Bm9B,EAAUA,GAAWT,EAChBlB,EAAI4B,UACLH,EAAWnpB,KAAKmoB,EAExB,CACA,OAAOiB,GAASH,GAASE,EAAY7Y,EAAW4X,EAAQ1hB,IAAW6iB,CACvE,CACA,SAASE,GAAW7B,EAAK3X,EAAMH,EAAKyI,EAAOD,GACvCsP,EAAI9X,IAAMA,EACV8X,EAAI3X,KAAOA,EACX2X,EAAI7X,MAAQE,EAAOsI,EACnBqP,EAAI5X,OAASF,EAAMwI,EACnBsP,EAAIrP,MAAQA,EACZqP,EAAItP,OAASA,CACjB,CACA,SAASoR,GAAWN,EAAO5Y,EAAW4X,EAAQ1hB,GAC1C,MAAMijB,EAAcvB,EAAOwB,QAC3B,IAAI,EAAEr7B,EAAE,EAAEoc,GAAO6F,EACjB,IAAK,MAAM6X,KAAUe,EAAM,CACvB,MAAMxB,EAAMS,EAAOT,IACb9hB,EAAQY,EAAO2hB,EAAOviB,QAAU,CAClCwH,MAAO,EACPuc,OAAQ,EACRruB,OAAQ,GAENA,EAAS6sB,EAAOyB,YAAchkB,EAAMtK,QAAU,EACpD,GAAI6sB,EAAOnS,WAAY,CACnB,MAAMqC,EAAQ/H,EAAUtjB,EAAIsO,EACtB8c,EAASxS,EAAMd,MAAQ4iB,EAAItP,OAC7Bjb,EAAgBqU,QAAQ5L,EAAMtH,SAC9BmM,EAAI7E,EAAMtH,OAEVopB,EAAI4B,SACJC,GAAW7B,EAAK+B,EAAY1Z,KAAMtF,EAAGyd,EAAOI,WAAamB,EAAY5Z,MAAQ4Z,EAAY1Z,KAAMqI,GAE/FmR,GAAW7B,EAAKpX,EAAUP,KAAOnK,EAAM+jB,OAAQlf,EAAG4N,EAAOD,GAE7DxS,EAAMtH,MAAQmM,EACd7E,EAAM+jB,QAAUtR,EAChB5N,EAAIid,EAAI5X,MACZ,KAAO,CACH,MAAMsI,EAAS9H,EAAUjmB,EAAIiR,EACvB+c,EAAQzS,EAAMd,MAAQ4iB,EAAIrP,MAC5Blb,EAAgBqU,QAAQ5L,EAAMtH,SAC9BjQ,EAAIuX,EAAMtH,OAEVopB,EAAI4B,SACJC,GAAW7B,EAAKr5B,EAAGo7B,EAAY7Z,IAAKyI,EAAO6P,EAAOM,YAAciB,EAAY3Z,OAAS2Z,EAAY7Z,KAEjG2Z,GAAW7B,EAAKr5B,EAAGiiB,EAAUV,IAAMhK,EAAM+jB,OAAQtR,EAAOD,GAE5DxS,EAAMtH,MAAQjQ,EACduX,EAAM+jB,QAAUvR,EAChB/pB,EAAIq5B,EAAI7X,KACZ,CACJ,CACAS,EAAUjiB,EAAIA,EACdiiB,EAAU7F,EAAIA,CAClB,CACA,IAAIof,GAAU,CACbC,OAAQnsB,EAAOsB,GACHtB,EAAMurB,QACPvrB,EAAMurB,MAAQ,IAElBjqB,EAAKqqB,SAAWrqB,EAAKqqB,WAAY,EACjCrqB,EAAKmmB,SAAWnmB,EAAKmmB,UAAY,MACjCnmB,EAAK3D,OAAS2D,EAAK3D,QAAU,EAC7B2D,EAAK8qB,QAAU9qB,EAAK8qB,SAAW,WAC3B,MAAO,CACH,CACIC,EAAG,EACH9qB,KAAMoR,GACFrR,EAAKC,KAAKoR,EACd,GAGZ,EACA3S,EAAMurB,MAAMlpB,KAAKf,EACrB,EACHgrB,UAAWtsB,EAAOusB,GACX,MAAMxkB,EAAQ/H,EAAMurB,MAAQvrB,EAAMurB,MAAMxQ,QAAQwR,IAAe,GAChD,IAAXxkB,GACA/H,EAAMurB,MAAM1V,OAAO9N,EAAO,EAElC,EACHrC,UAAW1F,EAAOsB,EAAMiF,GACjBjF,EAAKqqB,SAAWplB,EAAQolB,SACxBrqB,EAAKmmB,SAAWlhB,EAAQkhB,SACxBnmB,EAAK3D,OAAS4I,EAAQ5I,MAC1B,EACHiH,OAAQ5E,EAAO0a,EAAOD,EAAQ+R,GACvB,IAAKxsB,EACD,OAEJ,MAAM+rB,EAAUvsB,EAAgBitB,UAAUzsB,EAAMuG,QAAQikB,OAAOuB,SACzDW,EAAiB//B,KAAKC,IAAI8tB,EAAQqR,EAAQrR,MAAO,GACjDiS,EAAkBhgC,KAAKC,IAAI6tB,EAASsR,EAAQtR,OAAQ,GACpD8Q,EAvMd,SAA0BA,GACtB,MAAMqB,EAxDV,SAAmBrB,GACf,MAAMqB,EAAc,GACpB,IAAIr9B,EAAGuY,EAAMiiB,EAAKF,EAAK5hB,EAAOgkB,EAC9B,IAAI18B,EAAI,EAAGuY,GAAQyjB,GAAS,IAAIh9B,OAAQgB,EAAIuY,IAAQvY,EAChDw6B,EAAMwB,EAAMh8B,KACTk4B,SAAUoC,EAAMtjB,SAAW0B,QAAQgkB,cAAa,IAAUlC,GAC7D6C,EAAYvqB,KAAK,CACb0F,MAAOxY,EACPw6B,MACAF,MACAxR,WAAY0R,EAAIhQ,eAChBpc,OAAQosB,EAAIpsB,OACZsK,MAAOA,GAAS4hB,EAAM5hB,EACtBgkB,gBAGR,OAAOW,CACX,CAuCwBC,CAAUtB,GACxBI,EAAW3B,EAAa4C,EAAYriB,QAAQuiB,GAAOA,EAAK/C,IAAI4B,YAAW,GACvEvZ,EAAO4X,EAAaL,EAAiBiD,EAAa,SAAS,GAC3D1a,EAAQ8X,EAAaL,EAAiBiD,EAAa,UACnD3a,EAAM+X,EAAaL,EAAiBiD,EAAa,QAAQ,GACzDza,EAAS6X,EAAaL,EAAiBiD,EAAa,WACpDG,EAAmBjD,EAA4B8C,EAAa,KAC5DI,EAAiBlD,EAA4B8C,EAAa,KAChE,MAAO,CACHjB,WACAsB,WAAY7a,EAAKwE,OAAO3E,GACxBib,eAAgBhb,EAAM0E,OAAOoW,GAAgBpW,OAAOzE,GAAQyE,OAAOmW,GACnEpa,UAAWgX,EAAiBiD,EAAa,aACzCO,SAAU/a,EAAKwE,OAAO1E,GAAO0E,OAAOoW,GACpC3U,WAAYpG,EAAI2E,OAAOzE,GAAQyE,OAAOmW,GAE9C,CAsLsBK,CAAiBptB,EAAMurB,OAC/B8B,EAAgB9B,EAAM4B,SACtBG,EAAkB/B,EAAMlT,WAC9B7Y,EAAgB+tB,KAAKvtB,EAAMurB,OAAQxB,IACC,mBAArBA,EAAIyD,cACXzD,EAAIyD,cACR,IAEJ,MAAMC,EAA0BJ,EAAc7qB,QAAO,CAACqf,EAAOiL,IAAOA,EAAK/C,IAAIxjB,UAAwC,IAA7BumB,EAAK/C,IAAIxjB,QAAQ8d,QAAoBxC,EAAQA,EAAQ,GAAG,IAAM,EAChJ0I,EAAS/uB,OAAOuD,OAAO,CACzB4rB,WAAYjQ,EACZmQ,YAAapQ,EACbsR,UACAW,iBACAC,kBACAe,aAAchB,EAAiB,EAAIe,EACnCE,cAAehB,EAAkB,IAE/BxC,EAAa3uB,OAAOqB,OAAO,CAAC,EAAGkvB,GACrC3B,EAAiBD,EAAY3qB,EAAgBitB,UAAUD,IACvD,MAAM7Z,EAAYnX,OAAOqB,OAAO,CAC5BstB,aACA96B,EAAGq9B,EACHhgC,EAAGigC,EACHj8B,EAAGq7B,EAAQ3Z,KACXtF,EAAGif,EAAQ9Z,KACZ8Z,GACGljB,EArPb,SAAuBqjB,EAAS3B,GAC7B,MAAM1hB,EAnBV,SAAqBqjB,GACjB,MAAMrjB,EAAS,CAAC,EAChB,IAAK,MAAMikB,KAAQZ,EAAQ,CACvB,MAAM,MAAEjkB,EAAM,IAAE4hB,EAAI,YAAEoC,GAAiBa,EACvC,IAAK7kB,IAAUyhB,EAAiBkE,SAAS/D,GACrC,SAEJ,MAAMgE,EAAShlB,EAAOZ,KAAWY,EAAOZ,GAAS,CAC7CwH,MAAO,EACPuc,OAAQ,EACRruB,OAAQ,EACRwJ,KAAM,IAEV0mB,EAAOpe,QACPoe,EAAOlwB,QAAUsuB,CACrB,CACA,OAAOpjB,CACX,CAEmBilB,CAAY5B,IACrB,aAAEwB,EAAa,cAAEC,GAAmBpD,EAC1C,IAAIh7B,EAAGuY,EAAM0iB,EACb,IAAIj7B,EAAI,EAAGuY,EAAOokB,EAAQ39B,OAAQgB,EAAIuY,IAAQvY,EAAE,CAC5Ci7B,EAAS0B,EAAQ38B,GACjB,MAAM,SAAEo8B,GAAcnB,EAAOT,IACvB9hB,EAAQY,EAAO2hB,EAAOviB,OACtB9E,EAAS8E,GAASuiB,EAAOyB,YAAchkB,EAAMtK,OAC/C6sB,EAAOnS,YACPmS,EAAO9P,MAAQvX,EAASA,EAASuqB,EAAe/B,GAAYpB,EAAOmC,eACnElC,EAAO/P,OAASkT,IAEhBnD,EAAO9P,MAAQgT,EACflD,EAAO/P,OAAStX,EAASA,EAASwqB,EAAgBhC,GAAYpB,EAAOoC,gBAE7E,CACA,OAAO9jB,CACX,CAmOuBklB,CAAcV,EAAczW,OAAO0W,GAAkB/C,GACpEe,GAASC,EAAMI,SAAUhZ,EAAW4X,EAAQ1hB,GAC5CyiB,GAAS+B,EAAe1a,EAAW4X,EAAQ1hB,GACvCyiB,GAASgC,EAAiB3a,EAAW4X,EAAQ1hB,IAC7CyiB,GAAS+B,EAAe1a,EAAW4X,EAAQ1hB,GA3KvD,SAA0B8J,GACtB,MAAMwX,EAAaxX,EAAUwX,WAC7B,SAAS6D,EAAUnE,GACf,MAAMoE,EAASthC,KAAKC,IAAIu9B,EAAWN,GAAOlX,EAAUkX,GAAM,GAE1D,OADAlX,EAAUkX,IAAQoE,EACXA,CACX,CACAtb,EAAU7F,GAAKkhB,EAAU,OACzBrb,EAAUjiB,GAAKs9B,EAAU,QACzBA,EAAU,SACVA,EAAU,SACd,CAkKQE,CAAiBvb,GACjBkZ,GAAWN,EAAM0B,WAAYta,EAAW4X,EAAQ1hB,GAChD8J,EAAUjiB,GAAKiiB,EAAUtjB,EACzBsjB,EAAU7F,GAAK6F,EAAUjmB,EACzBm/B,GAAWN,EAAM2B,eAAgBva,EAAW4X,EAAQ1hB,GACpD7I,EAAM2S,UAAY,CACdP,KAAMO,EAAUP,KAChBH,IAAKU,EAAUV,IACfC,MAAOS,EAAUP,KAAOO,EAAUtjB,EAClC8iB,OAAQQ,EAAUV,IAAMU,EAAUjmB,EAClC+tB,OAAQ9H,EAAUjmB,EAClBguB,MAAO/H,EAAUtjB,GAErBmQ,EAAgB+tB,KAAKhC,EAAM5Y,WAAY6X,IACnC,MAAMT,EAAMS,EAAOT,IACnBvuB,OAAOqB,OAAOktB,EAAK/pB,EAAM2S,WACzBoX,EAAInlB,OAAO+N,EAAUtjB,EAAGsjB,EAAUjmB,EAAG,CACjC0lB,KAAM,EACNH,IAAK,EACLC,MAAO,EACPC,OAAQ,GACV,GAEV,GAGJ,MAAMgc,GACLC,eAAeC,EAAQtQ,GAAc,CACrCuQ,eAAerb,GACR,OAAO,CACX,CACHsb,iBAAiBvuB,EAAO9C,EAAMsxB,GAAW,CACzCC,oBAAoBzuB,EAAO9C,EAAMsxB,GAAW,CAC5CE,sBACO,OAAO,CACX,CACHC,eAAe9b,EAAS6H,EAAOD,EAAQsD,GAGhC,OAFArD,EAAQ/tB,KAAKC,IAAI,EAAG8tB,GAAS7H,EAAQ6H,OACrCD,EAASA,GAAU5H,EAAQ4H,OACpB,CACHC,QACAD,OAAQ9tB,KAAKC,IAAI,EAAGmxB,EAAcpxB,KAAKuX,MAAMwW,EAAQqD,GAAetD,GAE5E,CACHmU,WAAWP,GACJ,OAAO,CACX,CACHQ,aAAatpB,GACV,EAGJ,MAAMupB,WAAsBX,GACxBC,eAAe9sB,GACX,OAAOA,GAAQA,EAAKgO,YAAchO,EAAKgO,WAAW,OAAS,IAC/D,CACAuf,aAAatpB,GACTA,EAAOgB,QAAQT,WAAY,CAC/B,EAGJ,MAAMipB,GAAc,WACbC,GAAc,CACjBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAEVC,GAAiBxoB,GAAkB,OAAVA,GAA4B,KAAVA,EAoC3CyoB,KAAuBnwB,EAAgBowB,8BAA+B,CACxEC,SAAS,GAKb,SAASC,GAAe9vB,EAAO9C,EAAMsxB,GACjCxuB,EAAMquB,OAAOI,oBAAoBvxB,EAAMsxB,EAAUmB,GACrD,CAYA,SAASI,GAAiBC,EAAU3B,GAChC,IAAK,MAAM4B,KAAQD,EACf,GAAIC,IAAS5B,GAAU4B,EAAKC,SAAS7B,GACjC,OAAO,CAGnB,CACA,SAAS8B,GAAqBnwB,EAAO9C,EAAMsxB,GACvC,MAAMH,EAASruB,EAAMquB,OACf+B,EAAW,IAAIC,kBAAkBC,IACnC,IAAIC,GAAU,EACd,IAAK,MAAM/Y,KAAS8Y,EAChBC,EAAUA,GAAWR,GAAiBvY,EAAMgZ,WAAYnC,GACxDkC,EAAUA,IAAYR,GAAiBvY,EAAMiZ,aAAcpC,GAE3DkC,GACA/B,GACJ,IAMJ,OAJA4B,EAASM,QAAQC,SAAU,CACvBC,WAAW,EACXC,SAAS,IAENT,CACX,CACA,SAASU,GAAqB9wB,EAAO9C,EAAMsxB,GACvC,MAAMH,EAASruB,EAAMquB,OACf+B,EAAW,IAAIC,kBAAkBC,IACnC,IAAIC,GAAU,EACd,IAAK,MAAM/Y,KAAS8Y,EAChBC,EAAUA,GAAWR,GAAiBvY,EAAMiZ,aAAcpC,GAC1DkC,EAAUA,IAAYR,GAAiBvY,EAAMgZ,WAAYnC,GAEzDkC,GACA/B,GACJ,IAMJ,OAJA4B,EAASM,QAAQC,SAAU,CACvBC,WAAW,EACXC,SAAS,IAENT,CACX,CACA,MAAMW,GAAqB,IAAInxB,IAC/B,IAAIoxB,GAAsB,EAC1B,SAASC,KACL,MAAMC,EAAMnwB,OAAOowB,iBACfD,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmBxwB,SAAQ,CAAC6wB,EAAQpxB,KAC5BA,EAAMqxB,0BAA4BH,GAClCE,GACJ,IAER,CAaA,SAASE,GAAqBtxB,EAAO9C,EAAMsxB,GACvC,MAAMH,EAASruB,EAAMquB,OACfkD,EAAYlD,GAAU7uB,EAAgBgyB,eAAenD,GAC3D,IAAKkD,EACD,OAEJ,MAAMH,EAAS5xB,EAAgBiyB,WAAU,CAAC/W,EAAOD,KAC7C,MAAMprB,EAAIkiC,EAAUG,YACpBlD,EAAS9T,EAAOD,GACZprB,EAAIkiC,EAAUG,aACdlD,GACJ,GACDztB,QACGqvB,EAAW,IAAIuB,gBAAgBrB,IACjC,MAAM9Y,EAAQ8Y,EAAQ,GAChB5V,EAAQlD,EAAMoa,YAAYlX,MAC1BD,EAASjD,EAAMoa,YAAYnX,OACnB,IAAVC,GAA0B,IAAXD,GAGnB2W,EAAO1W,EAAOD,EAAO,IAIzB,OAFA2V,EAASM,QAAQa,GAlCrB,SAAuCvxB,EAAOoxB,GACrCL,GAAmB5pB,MACpBpG,OAAOwtB,iBAAiB,SAAU0C,IAEtCF,GAAmB9uB,IAAIjC,EAAOoxB,EAClC,CA8BIS,CAA8B7xB,EAAOoxB,GAC9BhB,CACX,CACA,SAAS0B,GAAgB9xB,EAAO9C,EAAMkzB,GAC9BA,GACAA,EAAS2B,aAEA,WAAT70B,GApCR,SAAyC8C,GACrC+wB,GAAmBhuB,OAAO/C,GACrB+wB,GAAmB5pB,MACpBpG,OAAO0tB,oBAAoB,SAAUwC,GAE7C,CAgCQe,CAAgChyB,EAExC,CACA,SAASiyB,GAAqBjyB,EAAO9C,EAAMsxB,GACvC,MAAMH,EAASruB,EAAMquB,OACf6D,EAAQ1yB,EAAgBiyB,WAAWtvB,IACnB,OAAdnC,EAAMkL,KACNsjB,EAtHZ,SAAyBrsB,EAAOnC,GAC5B,MAAM9C,EAAO8xB,GAAY7sB,EAAMjF,OAASiF,EAAMjF,MACxC,EAAExM,EAAE,EAAEoc,GAAOtN,EAAgBgqB,oBAAoBrnB,EAAOnC,GAC9D,MAAO,CACH9C,OACA8C,QACAmyB,OAAQhwB,EACRzR,OAAS7B,IAAN6B,EAAkBA,EAAI,KACzBoc,OAASje,IAANie,EAAkBA,EAAI,KAEjC,CA4GqBslB,CAAgBjwB,EAAOnC,GACpC,GACDA,GAEH,OAhIJ,SAAqBiwB,EAAM/yB,EAAMsxB,GAC7ByB,EAAK1B,iBAAiBrxB,EAAMsxB,EAAUmB,GAC1C,CA6HI0C,CAAYhE,EAAQnxB,EAAMg1B,GACnBA,CACX,CACC,MAAMI,WAAoBnE,GAC1BC,eAAeC,EAAQtQ,GAChB,MAAM9K,EAAUob,GAAUA,EAAO/e,YAAc+e,EAAO/e,WAAW,MACjE,OAAI2D,GAAWA,EAAQob,SAAWA,GA3KzC,SAAoBA,EAAQtQ,GACzB,MAAMK,EAAQiQ,EAAOjQ,MACfmU,EAAelE,EAAOmE,aAAa,UACnCC,EAAcpE,EAAOmE,aAAa,SAcxC,GAbAnE,EAAOU,IAAe,CAClBtuB,QAAS,CACLga,OAAQ8X,EACR7X,MAAO+X,EACPrU,MAAO,CACHiG,QAASjG,EAAMiG,QACf5J,OAAQ2D,EAAM3D,OACdC,MAAO0D,EAAM1D,SAIzB0D,EAAMiG,QAAUjG,EAAMiG,SAAW,QACjCjG,EAAMsU,UAAYtU,EAAMsU,WAAa,aACjChD,GAAc+C,GAAc,CAC5B,MAAME,EAAenzB,EAAgBozB,aAAavE,EAAQ,cACrCx/B,IAAjB8jC,IACAtE,EAAO3T,MAAQiY,EAEvB,CACA,GAAIjD,GAAc6C,GACd,GAA4B,KAAxBlE,EAAOjQ,MAAM3D,OACb4T,EAAO5T,OAAS4T,EAAO3T,OAASqD,GAAe,OAC5C,CACH,MAAM8U,EAAgBrzB,EAAgBozB,aAAavE,EAAQ,eACrCx/B,IAAlBgkC,IACAxE,EAAO5T,OAASoY,EAExB,CAGR,CA0IYC,CAAWzE,EAAQtQ,GACZ9K,GAEJ,IACX,CACHqb,eAAerb,GACR,MAAMob,EAASpb,EAAQob,OACvB,IAAKA,EAAOU,IACR,OAAO,EAEX,MAAMtuB,EAAU4tB,EAAOU,IAAatuB,QACpC,CACI,SACA,SACFF,SAASkD,IACP,MAAMyD,EAAQzG,EAAQgD,GAClBjE,EAAgB2a,cAAcjT,GAC9BmnB,EAAO0E,gBAAgBtvB,GAEvB4qB,EAAO2E,aAAavvB,EAAMyD,EAC9B,IAEJ,MAAMkX,EAAQ3d,EAAQ2d,OAAS,CAAC,EAMhC,OALA5iB,OAAOD,KAAK6iB,GAAO7d,SAAS0F,IACxBooB,EAAOjQ,MAAMnY,GAAOmY,EAAMnY,EAAI,IAElCooB,EAAO3T,MAAQ2T,EAAO3T,aACf2T,EAAOU,KACP,CACX,CACHR,iBAAiBvuB,EAAO9C,EAAMsxB,GACvBpxB,KAAKqxB,oBAAoBzuB,EAAO9C,GAChC,MAAM+1B,EAAUjzB,EAAMkzB,WAAalzB,EAAMkzB,SAAW,CAAC,GAM/CxL,EALW,CACbyL,OAAQhD,GACRiD,OAAQtC,GACRM,OAAQE,IAEap0B,IAAS+0B,GAClCgB,EAAQ/1B,GAAQwqB,EAAQ1nB,EAAO9C,EAAMsxB,EACzC,CACHC,oBAAoBzuB,EAAO9C,GACpB,MAAM+1B,EAAUjzB,EAAMkzB,WAAalzB,EAAMkzB,SAAW,CAAC,GAC/ChB,EAAQe,EAAQ/1B,GACjBg1B,KAGY,CACbiB,OAAQrB,GACRsB,OAAQtB,GACRV,OAAQU,IAEa50B,IAAS4yB,IAC1B9vB,EAAO9C,EAAMg1B,GACrBe,EAAQ/1B,QAAQrO,EACpB,CACA6/B,sBACI,OAAO3tB,OAAOowB,gBAClB,CACHxC,eAAeN,EAAQ3T,EAAOD,EAAQsD,GAC/B,OAAOve,EAAgBmvB,eAAeN,EAAQ3T,EAAOD,EAAQsD,EACjE,CACH6Q,WAAWP,GACJ,MAAMkD,EAAY/xB,EAAgBgyB,eAAenD,GACjD,SAAUkD,IAAaA,EAAU8B,YACrC,EAGJ,SAASC,GAAgBjF,GACrB,OAAK7uB,EAAgB+zB,mBAAgD,oBAApBC,iBAAmCnF,aAAkBmF,gBAC3F1E,GAEJwD,EACX,CAEA,MAAMmB,GACFzoB,gBAAkB,CAAC,EACnBA,0BAAuBnc,EACvB6B,EACAoc,EACAnI,QAAS,EACT4B,QACAE,YACAitB,gBAAgB7L,GACZ,MAAM,EAAEn3B,EAAE,EAAEoc,GAAO1P,KAAK4rB,SAAS,CAC7B,IACA,KACDnB,GACH,MAAO,CACHn3B,IACAoc,IAER,CACA6mB,WACI,OAAOn0B,EAAgBkkB,SAAStmB,KAAK1M,IAAM8O,EAAgBkkB,SAAStmB,KAAK0P,EAC7E,CACAkc,SAAS/hB,EAAO2sB,GACZ,MAAM3zB,EAAQ7C,KAAKqJ,YACnB,IAAKmtB,IAAU3zB,EAEX,OAAO7C,KAEX,MAAM/O,EAAM,CAAC,EAIb,OAHA4Y,EAAM1G,SAASkD,IACXpV,EAAIoV,GAAQxD,EAAMwD,IAASxD,EAAMwD,GAAMkB,SAAW1E,EAAMwD,GAAMgB,IAAMrH,KAAKqG,EAAK,IAE3EpV,CACX,EA2EH,SAAS+uB,GAAK/F,EAAOwc,EAAUlW,EAASmW,EAAYC,GACjD,MAAMpzB,EAAQnB,EAAgByN,eAAe6mB,EAAY,GACnDrsB,EAAM9a,KAAKE,IAAI2S,EAAgByN,eAAe8mB,EAAU1c,EAAM9oB,QAAS8oB,EAAM9oB,QACnF,IACIA,EAAQgB,EAAG+sB,EADX7M,EAAQ,EAQZ,IANAkO,EAAUhxB,KAAKqnC,KAAKrW,GAChBoW,IACAxlC,EAASwlC,EAAWD,EACpBnW,EAAUpvB,EAAS5B,KAAKuX,MAAM3V,EAASovB,IAE3CrB,EAAO3b,EACD2b,EAAO,GACT7M,IACA6M,EAAO3vB,KAAKL,MAAMqU,EAAQ8O,EAAQkO,GAEtC,IAAIpuB,EAAI5C,KAAKC,IAAI+T,EAAO,GAAIpR,EAAIkY,EAAKlY,IAC7BA,IAAM+sB,IACNuX,EAASxxB,KAAKgV,EAAM9nB,IACpBkgB,IACA6M,EAAO3vB,KAAKL,MAAMqU,EAAQ8O,EAAQkO,GAG9C,CAeA,MACMsW,GAAiB,CAAC5sB,EAAO8Q,EAAMmB,IAAkB,QAATnB,GAA2B,SAATA,EAAkB9Q,EAAM8Q,GAAQmB,EAASjS,EAAM8Q,GAAQmB,EACjH4a,GAAgB,CAACC,EAAaC,IAAgBznC,KAAKE,IAAIunC,GAAiBD,EAAaA,GAC1F,SAASE,GAAO3e,EAAK4e,GAClB,MAAMC,EAAS,GACTC,EAAY9e,EAAInnB,OAAS+lC,EACzBhmC,EAAMonB,EAAInnB,OAChB,IAAIgB,EAAI,EACR,KAAMA,EAAIjB,EAAKiB,GAAKilC,EAChBD,EAAOlyB,KAAKqT,EAAI/oB,KAAKuX,MAAM3U,KAE/B,OAAOglC,CACX,CACC,SAASE,GAAoBptB,EAAOU,EAAO2sB,GACxC,MAAMnmC,EAAS8Y,EAAMgQ,MAAM9oB,OACrBomC,EAAahoC,KAAKE,IAAIkb,EAAOxZ,EAAS,GACtCoS,EAAQ0G,EAAMgU,YACd5T,EAAMJ,EAAMiU,UACZsZ,EAAU,KAChB,IACItb,EADAub,EAAYxtB,EAAMiQ,gBAAgBqd,GAEtC,KAAID,IAEIpb,EADW,IAAX/qB,EACS5B,KAAKC,IAAIioC,EAAYl0B,EAAO8G,EAAMotB,GAC1B,IAAV9sB,GACGV,EAAMiQ,gBAAgB,GAAKud,GAAa,GAExCA,EAAYxtB,EAAMiQ,gBAAgBqd,EAAa,IAAM,EAEnEE,GAAaF,EAAa5sB,EAAQuR,GAAUA,EACxCub,EAAYl0B,EAAQi0B,GAAWC,EAAYptB,EAAMmtB,IAIzD,OAAOC,CACX,CAcC,SAASC,GAAkBvuB,GACxB,OAAOA,EAAQwuB,UAAYxuB,EAAQyuB,WAAa,CACpD,CACC,SAASC,GAAe1uB,EAAS2uB,GAC9B,IAAK3uB,EAAQ8d,QACT,OAAO,EAEX,MAAM8Q,EAAO31B,EAAgB41B,OAAO7uB,EAAQ4uB,KAAMD,GAC5CnJ,EAAUvsB,EAAgBitB,UAAUlmB,EAAQwlB,SAElD,OADcvsB,EAAgB5P,QAAQ2W,EAAQ8X,MAAQ9X,EAAQ8X,KAAK9vB,OAAS,GAC7D4mC,EAAKE,WAAatJ,EAAQtR,MAC7C,CAcA,SAAS6a,GAAWC,EAAO9N,EAAUjgB,GAChC,IAAInZ,EAAMmR,EAAgBg2B,mBAAmBD,GAI9C,OAHI/tB,GAAwB,UAAbigB,IAAyBjgB,GAAwB,UAAbigB,KAC/Cp5B,EA7Ea,CAACknC,GAAkB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EA6E1EE,CAAapnC,IAEhBA,CACX,CAwCA,MAAMqnC,WAAcjC,GAChBx2B,YAAYsG,GACRqW,QACCxc,KAAK4M,GAAKzG,EAAIyG,GACd5M,KAAKF,KAAOqG,EAAIrG,KAChBE,KAAKmJ,aAAU1X,EACfuO,KAAK8N,IAAM3H,EAAI2H,IACf9N,KAAK4C,MAAQuD,EAAIvD,MACjB5C,KAAK6U,SAAMpjB,EACXuO,KAAK+U,YAAStjB,EACduO,KAAKgV,UAAOvjB,EACZuO,KAAK8U,WAAQrjB,EACbuO,KAAKsd,WAAQ7rB,EACbuO,KAAKqd,YAAS5rB,EACfuO,KAAKu4B,SAAW,CACZvjB,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GAEX/U,KAAKmkB,cAAW1yB,EAChBuO,KAAKokB,eAAY3yB,EACjBuO,KAAKw4B,gBAAa/mC,EAClBuO,KAAKy4B,mBAAgBhnC,EACrBuO,KAAK04B,iBAAcjnC,EACnBuO,KAAK24B,kBAAelnC,EACpBuO,KAAKwM,UAAO/a,EACZuO,KAAK44B,mBAAgBnnC,EACtBuO,KAAKvQ,SAAMgC,EACXuO,KAAKxQ,SAAMiC,EACXuO,KAAK64B,YAASpnC,EACbuO,KAAKia,MAAQ,GACbja,KAAK84B,eAAiB,KACtB94B,KAAK+4B,YAAc,KACnB/4B,KAAKg5B,YAAc,KACpBh5B,KAAK6Z,QAAU,EACf7Z,KAAKi5B,WAAa,EAClBj5B,KAAKk5B,kBAAoB,CAAC,EACzBl5B,KAAKie,iBAAcxsB,EACnBuO,KAAKke,eAAYzsB,EAClBuO,KAAK6pB,gBAAiB,EACtB7pB,KAAKm5B,cAAW1nC,EAChBuO,KAAKo5B,cAAW3nC,EAChBuO,KAAKq5B,mBAAgB5nC,EACrBuO,KAAKs5B,mBAAgB7nC,EACrBuO,KAAKu5B,aAAe,EACpBv5B,KAAKw5B,aAAe,EACpBx5B,KAAKqZ,OAAS,CAAC,EACfrZ,KAAKy5B,mBAAoB,EACzBz5B,KAAK0O,cAAWjd,CACpB,CACHw3B,KAAK9f,GACEnJ,KAAKmJ,QAAUA,EAAQuwB,WAAW15B,KAAKkS,cACvClS,KAAKwM,KAAOrD,EAAQqD,KACpBxM,KAAKo5B,SAAWp5B,KAAKoS,MAAMjJ,EAAQ1Z,KACnCuQ,KAAKm5B,SAAWn5B,KAAKoS,MAAMjJ,EAAQ3Z,KACnCwQ,KAAKs5B,cAAgBt5B,KAAKoS,MAAMjJ,EAAQwwB,cACxC35B,KAAKq5B,cAAgBr5B,KAAKoS,MAAMjJ,EAAQywB,aAC5C,CACHxnB,MAAM6D,EAAKtL,GACJ,OAAOsL,CACX,CACH5B,gBACO,IAAI,SAAE+kB,EAAS,SAAED,EAAS,cAAEG,EAAc,cAAED,GAAmBr5B,KAK/D,OAJAo5B,EAAWh3B,EAAgBy3B,gBAAgBT,EAAUtlB,OAAOC,mBAC5DolB,EAAW/2B,EAAgBy3B,gBAAgBV,EAAUrlB,OAAOE,mBAC5DslB,EAAgBl3B,EAAgBy3B,gBAAgBP,EAAexlB,OAAOC,mBACtEslB,EAAgBj3B,EAAgBy3B,gBAAgBR,EAAevlB,OAAOE,mBAC/D,CACHvkB,IAAK2S,EAAgBy3B,gBAAgBT,EAAUE,GAC/C9pC,IAAK4S,EAAgBy3B,gBAAgBV,EAAUE,GAC/CllB,WAAY/R,EAAgB+I,eAAeiuB,GAC3ChlB,WAAYhS,EAAgB+I,eAAeguB,GAEnD,CACH1lB,UAAUC,GACH,IACIJ,GADA,IAAE7jB,EAAI,IAAED,EAAI,WAAE2kB,EAAW,WAAEC,GAAgBpU,KAAKqU,gBAEpD,GAAIF,GAAcC,EACd,MAAO,CACH3kB,MACAD,OAGR,MAAMsqC,EAAQ95B,KAAKgM,0BACnB,IAAI,IAAI7Z,EAAI,EAAGuY,EAAOovB,EAAM3oC,OAAQgB,EAAIuY,IAAQvY,EAC5CmhB,EAAQwmB,EAAM3nC,GAAG+Z,WAAWuH,UAAUzT,KAAM0T,GACvCS,IACD1kB,EAAMF,KAAKE,IAAIA,EAAK6jB,EAAM7jB,MAEzB2kB,IACD5kB,EAAMD,KAAKC,IAAIA,EAAK8jB,EAAM9jB,MAKlC,OAFAC,EAAM2kB,GAAc3kB,EAAMD,EAAMA,EAAMC,EACtCD,EAAM2kB,GAAc1kB,EAAMD,EAAMC,EAAMD,EAC/B,CACHC,IAAK2S,EAAgBy3B,gBAAgBpqC,EAAK2S,EAAgBy3B,gBAAgBrqC,EAAKC,IAC/ED,IAAK4S,EAAgBy3B,gBAAgBrqC,EAAK4S,EAAgBy3B,gBAAgBpqC,EAAKD,IAEvF,CACH69B,aACO,MAAO,CACHrY,KAAMhV,KAAK04B,aAAe,EAC1B7jB,IAAK7U,KAAKw4B,YAAc,EACxB1jB,MAAO9U,KAAK24B,cAAgB,EAC5B5jB,OAAQ/U,KAAKy4B,eAAiB,EAEtC,CACHsB,WACO,OAAO/5B,KAAKia,KAChB,CACHnH,YACO,MAAMnC,EAAO3Q,KAAK4C,MAAM+N,KACxB,OAAO3Q,KAAKmJ,QAAQ0J,SAAW7S,KAAK2c,eAAiBhM,EAAKqpB,QAAUrpB,EAAKspB,UAAYtpB,EAAKkC,QAAU,EACxG,CACHqnB,cAAc3kB,EAAYvV,KAAK4C,MAAM2S,WAE9B,OADcvV,KAAK+4B,cAAgB/4B,KAAK+4B,YAAc/4B,KAAKm6B,mBAAmB5kB,GAElF,CACA6a,eACIpwB,KAAKqZ,OAAS,CAAC,EACfrZ,KAAKy5B,mBAAoB,CAC7B,CACAW,eACIh4B,EAAgBi4B,SAASr6B,KAAKmJ,QAAQixB,aAAc,CAChDp6B,MAER,CACHwH,OAAO2c,EAAUC,EAAWkW,GACrB,MAAM,YAAEje,EAAY,MAAEke,EAAQtgB,MAAOugB,GAAcx6B,KAAKmJ,QAClDsxB,EAAaD,EAASC,WAC5Bz6B,KAAKo6B,eACLp6B,KAAKmkB,SAAWA,EAChBnkB,KAAKokB,UAAYA,EACjBpkB,KAAKu4B,SAAW+B,EAAUl8B,OAAOqB,OAAO,CACpCuV,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GACTulB,GACHt6B,KAAKia,MAAQ,KACbja,KAAKg5B,YAAc,KACnBh5B,KAAK84B,eAAiB,KACtB94B,KAAK+4B,YAAc,KACnB/4B,KAAK06B,sBACL16B,KAAK26B,gBACL36B,KAAK46B,qBACL56B,KAAKi5B,WAAaj5B,KAAK2c,eAAiB3c,KAAKsd,MAAQgd,EAAQtlB,KAAOslB,EAAQxlB,MAAQ9U,KAAKqd,OAASid,EAAQzlB,IAAMylB,EAAQvlB,OACnH/U,KAAKy5B,oBACNz5B,KAAK66B,mBACL76B,KAAK86B,sBACL96B,KAAK+6B,kBACL/6B,KAAK64B,OAASz2B,EAAgB44B,UAAUh7B,KAAMu6B,EAAOle,GACrDrc,KAAKy5B,mBAAoB,GAE7Bz5B,KAAKi7B,mBACLj7B,KAAKia,MAAQja,KAAKk7B,cAAgB,GAClCl7B,KAAKm7B,kBACL,MAAMC,EAAkBX,EAAaz6B,KAAKia,MAAM9oB,OAChD6O,KAAKq7B,sBAAsBD,EAAkBnE,GAAOj3B,KAAKia,MAAOwgB,GAAcz6B,KAAKia,OACnFja,KAAKsI,YACLtI,KAAKs7B,+BACLt7B,KAAKu7B,yBACLv7B,KAAKw7B,8BACDhB,EAASvT,UAAYuT,EAASiB,UAAgC,SAApBjB,EAASkB,UACnD17B,KAAKia,MA3YjB,SAAkBhQ,EAAOgQ,GACrB,MAAMugB,EAAWvwB,EAAMd,QAAQ8Q,MACzB0hB,EAyBV,SAA2B1xB,GACvB,MAAMiS,EAASjS,EAAMd,QAAQ+S,OACvB0b,EAAa3tB,EAAM2xB,YACnBC,EAAW5xB,EAAM4P,QAAU+d,GAAc1b,EAAS,EAAI,GACtD4f,EAAW7xB,EAAMgvB,WAAarB,EACpC,OAAOroC,KAAKuX,MAAMvX,KAAKE,IAAIosC,EAAUC,GACzC,CA/B+BC,CAAkB9xB,GACvC+xB,EAAazsC,KAAKE,IAAI+qC,EAASxD,eAAiB2E,EAAoBA,GACpEM,EAAezB,EAAS0B,MAAMC,QA6CvC,SAAyBliB,GACtB,MAAMkd,EAAS,GACf,IAAIhlC,EAAGuY,EACP,IAAIvY,EAAI,EAAGuY,EAAOuP,EAAM9oB,OAAQgB,EAAIuY,EAAMvY,IAClC8nB,EAAM9nB,GAAG+pC,OACT/E,EAAOlyB,KAAK9S,GAGpB,OAAOglC,CACX,CAtDkDiF,CAAgBniB,GAAS,GACjEoiB,EAAkBJ,EAAa9qC,OAC/BmrC,EAAQL,EAAa,GACrBze,EAAOye,EAAaI,EAAkB,GACtC5F,EAAW,GACjB,GAAI4F,EAAkBL,EAElB,OAgDP,SAAoB/hB,EAAOwc,EAAUwF,EAAc1b,GAChD,IAEIpuB,EAFAkgB,EAAQ,EACR6M,EAAO+c,EAAa,GAGxB,IADA1b,EAAUhxB,KAAKqnC,KAAKrW,GAChBpuB,EAAI,EAAGA,EAAI8nB,EAAM9oB,OAAQgB,IACrBA,IAAM+sB,IACNuX,EAASxxB,KAAKgV,EAAM9nB,IACpBkgB,IACA6M,EAAO+c,EAAa5pB,EAAQkO,GAGxC,CA7DQgc,CAAWtiB,EAAOwc,EAAUwF,EAAcI,EAAkBL,GACrDvF,EAEX,MAAMlW,EAqBT,SAA0B0b,EAAchiB,EAAO+hB,GAC5C,MAAMQ,EA4DT,SAAwBlkB,GACrB,MAAMpnB,EAAMonB,EAAInnB,OAChB,IAAIgB,EAAGi3B,EACP,GAAIl4B,EAAM,EACN,OAAO,EAEX,IAAIk4B,EAAO9Q,EAAI,GAAInmB,EAAI,EAAGA,EAAIjB,IAAOiB,EACjC,GAAImmB,EAAInmB,GAAKmmB,EAAInmB,EAAI,KAAOi3B,EACxB,OAAO,EAGf,OAAOA,CACX,CAxE6BqT,CAAeR,GAClC1b,EAAUtG,EAAM9oB,OAAS6qC,EAC/B,IAAKQ,EACD,OAAOjtC,KAAKC,IAAI+wB,EAAS,GAE7B,MAAMmc,EAAUt6B,EAAgBu6B,WAAWH,GAC3C,IAAI,IAAIrqC,EAAI,EAAGuY,EAAOgyB,EAAQvrC,OAAS,EAAGgB,EAAIuY,EAAMvY,IAAI,CACpD,MAAM4T,EAAS22B,EAAQvqC,GACvB,GAAI4T,EAASwa,EACT,OAAOxa,CAEf,CACA,OAAOxW,KAAKC,IAAI+wB,EAAS,EAC7B,CAnCoBqc,CAAiBX,EAAchiB,EAAO+hB,GACtD,GAAIK,EAAkB,EAAG,CACrB,IAAIlqC,EAAGuY,EACP,MAAMmyB,EAAkBR,EAAkB,EAAI9sC,KAAKL,OAAOsuB,EAAO8e,IAAUD,EAAkB,IAAM,KAEnG,IADArc,GAAK/F,EAAOwc,EAAUlW,EAASne,EAAgB2a,cAAc8f,GAAmB,EAAIP,EAAQO,EAAiBP,GACzGnqC,EAAI,EAAGuY,EAAO2xB,EAAkB,EAAGlqC,EAAIuY,EAAMvY,IAC7C6tB,GAAK/F,EAAOwc,EAAUlW,EAAS0b,EAAa9pC,GAAI8pC,EAAa9pC,EAAI,IAGrE,OADA6tB,GAAK/F,EAAOwc,EAAUlW,EAAS/C,EAAMpb,EAAgB2a,cAAc8f,GAAmB5iB,EAAM9oB,OAASqsB,EAAOqf,GACrGpG,CACX,CAEA,OADAzW,GAAK/F,EAAOwc,EAAUlW,GACfkW,CACX,CAiXyBgF,CAASz7B,KAAMA,KAAKia,OACjCja,KAAKg5B,YAAc,KACnBh5B,KAAK88B,iBAEL1B,GACAp7B,KAAKq7B,sBAAsBr7B,KAAKia,OAEpCja,KAAK+8B,YACL/8B,KAAKg9B,MACLh9B,KAAKi9B,WACLj9B,KAAKk9B,aACT,CACH50B,YACO,IACIoW,EAAYE,EADZue,EAAgBn9B,KAAKmJ,QAAQiB,QAE7BpK,KAAK2c,gBACL+B,EAAa1e,KAAKgV,KAClB4J,EAAW5e,KAAK8U,QAEhB4J,EAAa1e,KAAK6U,IAClB+J,EAAW5e,KAAK+U,OAChBooB,GAAiBA,GAErBn9B,KAAKie,YAAcS,EACnB1e,KAAKke,UAAYU,EACjB5e,KAAK6pB,eAAiBsT,EACtBn9B,KAAK6Z,QAAU+E,EAAWF,EAC1B1e,KAAKo9B,eAAiBp9B,KAAKmJ,QAAQk0B,aACvC,CACAH,cACI96B,EAAgBi4B,SAASr6B,KAAKmJ,QAAQ+zB,YAAa,CAC/Cl9B,MAER,CACA06B,sBACIt4B,EAAgBi4B,SAASr6B,KAAKmJ,QAAQuxB,oBAAqB,CACvD16B,MAER,CACA26B,gBACQ36B,KAAK2c,gBACL3c,KAAKsd,MAAQtd,KAAKmkB,SAClBnkB,KAAKgV,KAAO,EACZhV,KAAK8U,MAAQ9U,KAAKsd,QAElBtd,KAAKqd,OAASrd,KAAKokB,UACnBpkB,KAAK6U,IAAM,EACX7U,KAAK+U,OAAS/U,KAAKqd,QAEvBrd,KAAK04B,YAAc,EACnB14B,KAAKw4B,WAAa,EAClBx4B,KAAK24B,aAAe,EACpB34B,KAAKy4B,cAAgB,CACzB,CACAmC,qBACIx4B,EAAgBi4B,SAASr6B,KAAKmJ,QAAQyxB,mBAAoB,CACtD56B,MAER,CACAs9B,WAAWxf,GACP9d,KAAK4C,MAAM26B,cAAczf,EAAM9d,KAAKkS,cACpC9P,EAAgBi4B,SAASr6B,KAAKmJ,QAAQ2U,GAAO,CACzC9d,MAER,CACA66B,mBACI76B,KAAKs9B,WAAW,mBACpB,CACAxC,sBAAuB,CACvBC,kBACI/6B,KAAKs9B,WAAW,kBACpB,CACArC,mBACIj7B,KAAKs9B,WAAW,mBACpB,CACHpC,aACO,MAAO,EACX,CACAC,kBACIn7B,KAAKs9B,WAAW,kBACpB,CACAE,8BACIp7B,EAAgBi4B,SAASr6B,KAAKmJ,QAAQq0B,4BAA6B,CAC/Dx9B,MAER,CACHy9B,mBAAmBxjB,GACZ,MAAMugB,EAAWx6B,KAAKmJ,QAAQ8Q,MAC9B,IAAI9nB,EAAGuY,EAAMpG,EACb,IAAInS,EAAI,EAAGuY,EAAOuP,EAAM9oB,OAAQgB,EAAIuY,EAAMvY,IACtCmS,EAAO2V,EAAM9nB,GACbmS,EAAKoQ,MAAQtS,EAAgBi4B,SAASG,EAASH,SAAU,CACrD/1B,EAAKwF,MACL3X,EACA8nB,GACDja,KAEX,CACA09B,6BACIt7B,EAAgBi4B,SAASr6B,KAAKmJ,QAAQu0B,2BAA4B,CAC9D19B,MAER,CACAs7B,+BACIl5B,EAAgBi4B,SAASr6B,KAAKmJ,QAAQmyB,6BAA8B,CAChEt7B,MAER,CACAu7B,yBACI,MAAMpyB,EAAUnJ,KAAKmJ,QACfqxB,EAAWrxB,EAAQ8Q,MACnB0jB,EAAW7G,GAAc92B,KAAKia,MAAM9oB,OAAQgY,EAAQ8Q,MAAM+c,eAC1D4G,EAAcpD,EAASoD,aAAe,EACtCC,EAAcrD,EAASqD,YAC7B,IACIC,EAAW1Z,EAAW2Z,EADtBnF,EAAgBgF,EAEpB,IAAK59B,KAAKg+B,eAAiBxD,EAASvT,SAAW2W,GAAeC,GAAeF,GAAY,IAAM39B,KAAK2c,eAEhG,YADA3c,KAAK44B,cAAgBgF,GAGzB,MAAMK,EAAaj+B,KAAKk+B,iBAClBC,EAAgBF,EAAWG,OAAO9gB,MAClC+gB,EAAiBJ,EAAWK,QAAQjhB,OACpC8G,EAAW/hB,EAAgBm8B,YAAYv+B,KAAK4C,MAAM0a,MAAQ6gB,EAAe,EAAGn+B,KAAKmkB,UACvF2Z,EAAY30B,EAAQ+S,OAASlc,KAAKmkB,SAAWwZ,EAAWxZ,GAAYwZ,EAAW,GAC3EQ,EAAgB,EAAIL,IACpBA,EAAY3Z,GAAYwZ,GAAYx0B,EAAQ+S,OAAS,GAAM,IAC3DkI,EAAYpkB,KAAKokB,UAAYsT,GAAkBvuB,EAAQgT,MAAQqe,EAAS7L,QAAUkJ,GAAe1uB,EAAQq1B,MAAOx+B,KAAK4C,MAAMuG,QAAQ4uB,MACnIgG,EAAmBxuC,KAAK+7B,KAAK6S,EAAgBA,EAAgBE,EAAiBA,GAC9EzF,EAAgBx2B,EAAgBq8B,UAAUlvC,KAAKE,IAAIF,KAAKmvC,KAAKt8B,EAAgBm8B,aAAaN,EAAWK,QAAQjhB,OAAS,GAAKygB,GAAY,EAAG,IAAKvuC,KAAKmvC,KAAKt8B,EAAgBm8B,YAAYna,EAAY2Z,GAAmB,EAAG,IAAMxuC,KAAKmvC,KAAKt8B,EAAgBm8B,YAAYF,EAAiBN,GAAmB,EAAG,MAC1SnF,EAAgBrpC,KAAKC,IAAIouC,EAAaruC,KAAKE,IAAIouC,EAAajF,KAEhE54B,KAAK44B,cAAgBA,CACzB,CACA4C,8BACIp5B,EAAgBi4B,SAASr6B,KAAKmJ,QAAQqyB,4BAA6B,CAC/Dx7B,MAER,CACA88B,gBAAiB,CACjBC,YACI36B,EAAgBi4B,SAASr6B,KAAKmJ,QAAQ4zB,UAAW,CAC7C/8B,MAER,CACAg9B,MACI,MAAMzV,EAAU,CACZjK,MAAO,EACPD,OAAQ,IAEN,MAAEza,EAAQuG,SAAW8Q,MAAOugB,EAAWgE,MAAOG,EAAYxiB,KAAMyiB,IAAiB5+B,KACjFinB,EAAUjnB,KAAKg+B,aACfrhB,EAAe3c,KAAK2c,eAC1B,GAAIsK,EAAS,CACT,MAAM4X,EAAchH,GAAe8G,EAAW/7B,EAAMuG,QAAQ4uB,MAQ5D,GAPIpb,GACA4K,EAAQjK,MAAQtd,KAAKmkB,SACrBoD,EAAQlK,OAASqa,GAAkBkH,GAAYC,IAE/CtX,EAAQlK,OAASrd,KAAKokB,UACtBmD,EAAQjK,MAAQoa,GAAkBkH,GAAYC,GAE9CrE,EAASvT,SAAWjnB,KAAKia,MAAM9oB,OAAQ,CACvC,MAAM,MAAEmrC,EAAM,KAAE9e,EAAK,OAAE4gB,EAAO,QAAEE,GAAat+B,KAAKk+B,iBAC5CY,EAAiC,EAAnBtE,EAAS7L,QACvBoQ,EAAe38B,EAAgB8f,UAAUliB,KAAK44B,eAC9CzV,EAAM5zB,KAAK4zB,IAAI4b,GACf1b,EAAM9zB,KAAK8zB,IAAI0b,GACrB,GAAIpiB,EAAc,CACd,MAAMqiB,EAAcxE,EAASyE,OAAS,EAAI5b,EAAM+a,EAAO9gB,MAAQ6F,EAAMmb,EAAQjhB,OAC7EkK,EAAQlK,OAAS9tB,KAAKE,IAAIuQ,KAAKokB,UAAWmD,EAAQlK,OAAS2hB,EAAcF,EAC7E,KAAO,CACH,MAAMI,EAAa1E,EAASyE,OAAS,EAAI9b,EAAMib,EAAO9gB,MAAQ+F,EAAMib,EAAQjhB,OAC5EkK,EAAQjK,MAAQ/tB,KAAKE,IAAIuQ,KAAKmkB,SAAUoD,EAAQjK,MAAQ4hB,EAAaJ,EACzE,CACA9+B,KAAKm/B,kBAAkB7C,EAAO9e,EAAM6F,EAAKF,EAC7C,CACJ,CACAnjB,KAAKo/B,iBACDziB,GACA3c,KAAKsd,MAAQtd,KAAK6Z,QAAUjX,EAAM0a,MAAQtd,KAAKu4B,SAASvjB,KAAOhV,KAAKu4B,SAASzjB,MAC7E9U,KAAKqd,OAASkK,EAAQlK,SAEtBrd,KAAKsd,MAAQiK,EAAQjK,MACrBtd,KAAKqd,OAASrd,KAAK6Z,QAAUjX,EAAMya,OAASrd,KAAKu4B,SAAS1jB,IAAM7U,KAAKu4B,SAASxjB,OAEtF,CACAoqB,kBAAkB7C,EAAO9e,EAAM6F,EAAKF,GAChC,MAAQlJ,OAAO,MAAEke,EAAM,QAAExJ,GAAW,SAAEtE,GAAcrqB,KAAKmJ,QACnDk2B,EAAmC,IAAvBr/B,KAAK44B,cACjB0G,EAAgC,QAAbjV,GAAoC,MAAdrqB,KAAKwM,KACpD,GAAIxM,KAAK2c,eAAgB,CACrB,MAAM4iB,EAAav/B,KAAKka,gBAAgB,GAAKla,KAAKgV,KAC5CwqB,EAAcx/B,KAAK8U,MAAQ9U,KAAKka,gBAAgBla,KAAKia,MAAM9oB,OAAS,GAC1E,IAAIunC,EAAc,EACdC,EAAe,EACf0G,EACIC,GACA5G,EAAcvV,EAAMmZ,EAAMhf,MAC1Bqb,EAAetV,EAAM7F,EAAKH,SAE1Bqb,EAAcrV,EAAMiZ,EAAMjf,OAC1Bsb,EAAexV,EAAM3F,EAAKF,OAEb,UAAV6a,EACPQ,EAAenb,EAAKF,MACH,QAAV6a,EACPO,EAAc4D,EAAMhf,MACH,UAAV6a,IACPO,EAAc4D,EAAMhf,MAAQ,EAC5Bqb,EAAenb,EAAKF,MAAQ,GAEhCtd,KAAK04B,YAAcnpC,KAAKC,KAAKkpC,EAAc6G,EAAa5Q,GAAW3uB,KAAKsd,OAAStd,KAAKsd,MAAQiiB,GAAa,GAC3Gv/B,KAAK24B,aAAeppC,KAAKC,KAAKmpC,EAAe6G,EAAc7Q,GAAW3uB,KAAKsd,OAAStd,KAAKsd,MAAQkiB,GAAc,EACnH,KAAO,CACH,IAAIhH,EAAahb,EAAKH,OAAS,EAC3Bob,EAAgB6D,EAAMjf,OAAS,EACrB,UAAV8a,GACAK,EAAa,EACbC,EAAgB6D,EAAMjf,QACL,QAAV8a,IACPK,EAAahb,EAAKH,OAClBob,EAAgB,GAEpBz4B,KAAKw4B,WAAaA,EAAa7J,EAC/B3uB,KAAKy4B,cAAgBA,EAAgB9J,CACzC,CACJ,CACHyQ,iBACWp/B,KAAKu4B,WACLv4B,KAAKu4B,SAASvjB,KAAOzlB,KAAKC,IAAIwQ,KAAK04B,YAAa14B,KAAKu4B,SAASvjB,MAC9DhV,KAAKu4B,SAAS1jB,IAAMtlB,KAAKC,IAAIwQ,KAAKw4B,WAAYx4B,KAAKu4B,SAAS1jB,KAC5D7U,KAAKu4B,SAASzjB,MAAQvlB,KAAKC,IAAIwQ,KAAK24B,aAAc34B,KAAKu4B,SAASzjB,OAChE9U,KAAKu4B,SAASxjB,OAASxlB,KAAKC,IAAIwQ,KAAKy4B,cAAez4B,KAAKu4B,SAASxjB,QAE1E,CACAkoB,WACI76B,EAAgBi4B,SAASr6B,KAAKmJ,QAAQ8zB,SAAU,CAC5Cj9B,MAER,CACH2c,eACO,MAAM,KAAEnQ,EAAK,SAAE6d,GAAcrqB,KAAKmJ,QAClC,MAAoB,QAAbkhB,GAAmC,WAAbA,GAAkC,MAAT7d,CAC1D,CACHizB,aACO,OAAOz/B,KAAKmJ,QAAQolB,QACxB,CACH8M,sBAAsBphB,GAGf,IAAI9nB,EAAGuY,EACP,IAHA1K,KAAKw9B,8BACLx9B,KAAKy9B,mBAAmBxjB,GAEpB9nB,EAAI,EAAGuY,EAAOuP,EAAM9oB,OAAQgB,EAAIuY,EAAMvY,IAClCiQ,EAAgB2a,cAAc9C,EAAM9nB,GAAGuiB,SACvCuF,EAAMxB,OAAOtmB,EAAG,GAChBuY,IACAvY,KAGR6N,KAAK09B,4BACT,CACHQ,iBACO,IAAID,EAAaj+B,KAAKg5B,YACtB,IAAKiF,EAAY,CACb,MAAMxD,EAAaz6B,KAAKmJ,QAAQ8Q,MAAMwgB,WACtC,IAAIxgB,EAAQja,KAAKia,MACbwgB,EAAaxgB,EAAM9oB,SACnB8oB,EAAQgd,GAAOhd,EAAOwgB,IAE1Bz6B,KAAKg5B,YAAciF,EAAaj+B,KAAK0/B,mBAAmBzlB,EAAOA,EAAM9oB,OAAQ6O,KAAKmJ,QAAQ8Q,MAAM+c,cACpG,CACA,OAAOiH,CACX,CACHyB,mBAAmBzlB,EAAO9oB,EAAQ6lC,GAC3B,MAAM,IAAElpB,EAAMorB,kBAAmByG,GAAY3/B,KACvC4/B,EAAS,GACTC,EAAU,GACVzI,EAAY7nC,KAAKuX,MAAM3V,EAAS2lC,GAAc3lC,EAAQ6lC,IAC5D,IAEI7kC,EAAGmM,EAAGwhC,EAAMprB,EAAOqrB,EAAUC,EAAY1pB,EAAO2hB,EAAY3a,EAAOD,EAAQ4iB,EAF3EC,EAAkB,EAClBC,EAAmB,EAEvB,IAAIhuC,EAAI,EAAGA,EAAIhB,EAAQgB,GAAKilC,EAAU,CAUlC,GATA1iB,EAAQuF,EAAM9nB,GAAGuiB,MACjBqrB,EAAW//B,KAAKogC,wBAAwBjuC,GACxC2b,EAAIiqB,KAAOiI,EAAaD,EAASM,OACjC/pB,EAAQqpB,EAAOK,GAAcL,EAAOK,IAAe,CAC/CrvB,KAAM,CAAC,EACP2vB,GAAI,IAERrI,EAAa8H,EAAS9H,WACtB3a,EAAQD,EAAS,EACZjb,EAAgB2a,cAAcrI,IAAWtS,EAAgB5P,QAAQkiB,IAG/D,GAAItS,EAAgB5P,QAAQkiB,GAC/B,IAAIpW,EAAI,EAAGwhC,EAAOprB,EAAMvjB,OAAQmN,EAAIwhC,IAAQxhC,EACxC2hC,EAAevrB,EAAMpW,GAChB8D,EAAgB2a,cAAckjB,IAAiB79B,EAAgB5P,QAAQytC,KACxE3iB,EAAQlb,EAAgBm+B,aAAazyB,EAAKwI,EAAM3F,KAAM2F,EAAMgqB,GAAIhjB,EAAO2iB,GACvE5iB,GAAU4a,QAPlB3a,EAAQlb,EAAgBm+B,aAAazyB,EAAKwI,EAAM3F,KAAM2F,EAAMgqB,GAAIhjB,EAAO5I,GACvE2I,EAAS4a,EAUb2H,EAAO36B,KAAKqY,GACZuiB,EAAQ56B,KAAKoY,GACb6iB,EAAkB3wC,KAAKC,IAAI8tB,EAAO4iB,GAClCC,EAAmB5wC,KAAKC,IAAI6tB,EAAQ8iB,EACxC,EA7iBP,SAAwBR,EAAQxuC,GAC7BiR,EAAgB+tB,KAAKwP,GAASrpB,IAC1B,MAAMgqB,EAAKhqB,EAAMgqB,GACXE,EAAQF,EAAGnvC,OAAS,EAC1B,IAAIgB,EACJ,GAAIquC,EAAQrvC,EAAQ,CAChB,IAAIgB,EAAI,EAAGA,EAAIquC,IAASruC,SACbmkB,EAAM3F,KAAK2vB,EAAGnuC,IAEzBmuC,EAAG7nB,OAAO,EAAG+nB,EACjB,IAER,CAkiBQC,CAAed,EAAQxuC,GACvB,MAAMitC,EAASwB,EAAOjiB,QAAQuiB,GACxB5B,EAAUuB,EAAQliB,QAAQwiB,GAC1BO,EAAWC,IAAM,CACfrjB,MAAOsiB,EAAOe,IAAQ,EACtBtjB,OAAQwiB,EAAQc,IAAQ,IAEhC,MAAO,CACHrE,MAAOoE,EAAQ,GACfljB,KAAMkjB,EAAQvvC,EAAS,GACvBitC,OAAQsC,EAAQtC,GAChBE,QAASoC,EAAQpC,GACjBsB,SACAC,UAER,CACHlrB,iBAAiB7K,GACV,OAAOA,CACX,CACHkQ,iBAAiBlQ,EAAOa,GACjB,OAAO6I,GACX,CACHqL,iBAAiB+hB,GAAQ,CACzB1mB,gBAAgBvP,GACT,MAAMsP,EAAQja,KAAKia,MACnB,OAAItP,EAAQ,GAAKA,EAAQsP,EAAM9oB,OAAS,EAC7B,KAEJ6O,KAAKga,iBAAiBC,EAAMtP,GAAOb,MAC9C,CACH6U,mBAAmBkiB,GACR7gC,KAAK6pB,iBACLgX,EAAU,EAAIA,GAElB,MAAMD,EAAQ5gC,KAAKie,YAAc4iB,EAAU7gC,KAAK6Z,QAChD,OAAOzX,EAAgB0+B,YAAY9gC,KAAKo9B,eAAiBh7B,EAAgB2+B,YAAY/gC,KAAK4C,MAAOg+B,EAAO,GAAKA,EACjH,CACHI,mBAAmBJ,GACZ,MAAMC,GAAWD,EAAQ5gC,KAAKie,aAAeje,KAAK6Z,QAClD,OAAO7Z,KAAK6pB,eAAiB,EAAIgX,EAAUA,CAC/C,CACHnkB,eACO,OAAO1c,KAAKga,iBAAiBha,KAAKihC,eACtC,CACHA,eACO,MAAM,IAAExxC,EAAI,IAAED,GAASwQ,KACvB,OAAOvQ,EAAM,GAAKD,EAAM,EAAIA,EAAMC,EAAM,GAAKD,EAAM,EAAIC,EAAM,CACjE,CACHyiB,WAAWvH,GACJ,MAAMsP,EAAQja,KAAKia,OAAS,GAC5B,GAAItP,GAAS,GAAKA,EAAQsP,EAAM9oB,OAAQ,CACpC,MAAMmT,EAAO2V,EAAMtP,GACnB,OAAOrG,EAAKoK,WAAapK,EAAKoK,SAnkB1C,SAA2BoH,EAAQnL,EAAOrG,GACtC,OAAOlC,EAAgB2T,cAAcD,EAAQ,CACzCxR,OACAqG,QACA7K,KAAM,QAEd,CA6jBqDohC,CAAkBlhC,KAAKkS,aAAcvH,EAAOrG,GACzF,CACA,OAAOtE,KAAK0O,WAAa1O,KAAK0O,UA3kBVoH,EA2kBwC9V,KAAK4C,MAAMsP,aAAclS,KA1kBlFoC,EAAgB2T,cAAcD,EAAQ,CACzC7L,MAykBqFjK,KAxkBrFF,KAAM,YAHd,IAA4BgW,CA4kBxB,CACH8lB,YACO,MAAMuF,EAAcnhC,KAAKmJ,QAAQ8Q,MAC3BmnB,EAAMh/B,EAAgB8f,UAAUliB,KAAK44B,eACrCzV,EAAM5zB,KAAKwqB,IAAIxqB,KAAK4zB,IAAIie,IACxB/d,EAAM9zB,KAAKwqB,IAAIxqB,KAAK8zB,IAAI+d,IACxBnD,EAAaj+B,KAAKk+B,iBAClBvP,EAAUwS,EAAYE,iBAAmB,EACzCpvC,EAAIgsC,EAAaA,EAAWG,OAAO9gB,MAAQqR,EAAU,EACrDr/B,EAAI2uC,EAAaA,EAAWK,QAAQjhB,OAASsR,EAAU,EAC7D,OAAO3uB,KAAK2c,eAAiBrtB,EAAI6zB,EAAMlxB,EAAIoxB,EAAMpxB,EAAIkxB,EAAM7zB,EAAI+zB,EAAM/zB,EAAI+zB,EAAMpxB,EAAIkxB,EAAM7zB,EAAI6zB,EAAMlxB,EAAIoxB,CAC3G,CACH2a,aACO,MAAM/W,EAAUjnB,KAAKmJ,QAAQ8d,QAC7B,MAAgB,SAAZA,IACSA,EAENjnB,KAAKgM,0BAA0B7a,OAAS,CACnD,CACHmwC,sBAAsB/rB,GACf,MAAM/I,EAAOxM,KAAKwM,KACZ5J,EAAQ5C,KAAK4C,MACbuG,EAAUnJ,KAAKmJ,SACf,KAAEgT,EAAK,SAAEkO,EAAS,OAAE1D,GAAYxd,EAChC+S,EAASC,EAAKD,OACdS,EAAe3c,KAAK2c,eAEpBoa,EADQ/2B,KAAKia,MACO9oB,QAAU+qB,EAAS,EAAI,GAC3CqlB,EAAK7J,GAAkBvb,GACvBlY,EAAQ,GACRu9B,EAAa7a,EAAO+S,WAAW15B,KAAKkS,cACpCuvB,EAAYD,EAAWva,QAAUua,EAAWlkB,MAAQ,EACpDokB,EAAgBD,EAAY,EAC5BE,EAAmB,SAASf,GAC9B,OAAOx+B,EAAgB2+B,YAAYn+B,EAAOg+B,EAAOa,EACrD,EACA,IAAIG,EAAazvC,EAAGslC,EAAWoK,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EACpC,GAAiB,QAAbhY,EACAuX,EAAcD,EAAiB3hC,KAAK+U,QACpCgtB,EAAM/hC,KAAK+U,OAASwsB,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiBpsB,EAAUV,KAAO6sB,EACvCW,EAAK9sB,EAAUR,YACZ,GAAiB,WAAbsV,EACPuX,EAAcD,EAAiB3hC,KAAK6U,KACpCstB,EAAK5sB,EAAUV,IACfwtB,EAAKV,EAAiBpsB,EAAUR,QAAU2sB,EAC1CK,EAAMH,EAAcF,EACpBO,EAAMjiC,KAAK6U,IAAM0sB,OACd,GAAiB,SAAblX,EACPuX,EAAcD,EAAiB3hC,KAAK8U,OACpCgtB,EAAM9hC,KAAK8U,MAAQysB,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiBpsB,EAAUP,MAAQ0sB,EACxCU,EAAK7sB,EAAUT,WACZ,GAAiB,UAAbuV,EACPuX,EAAcD,EAAiB3hC,KAAKgV,MACpCktB,EAAK3sB,EAAUP,KACfotB,EAAKT,EAAiBpsB,EAAUT,OAAS4sB,EACzCI,EAAMF,EAAcF,EACpBM,EAAMhiC,KAAKgV,KAAOusB,OACf,GAAa,MAAT/0B,EAAc,CACrB,GAAiB,WAAb6d,EACAuX,EAAcD,GAAkBpsB,EAAUV,IAAMU,EAAUR,QAAU,EAAI,SACrE,GAAI3S,EAAgBmG,SAAS8hB,GAAW,CAC3C,MAAMiY,EAAiBlkC,OAAOD,KAAKksB,GAAU,GACvCvgB,EAAQugB,EAASiY,GACvBV,EAAcD,EAAiB3hC,KAAK4C,MAAMsK,OAAOo1B,GAAgBtoB,iBAAiBlQ,GACtF,CACAq4B,EAAK5sB,EAAUV,IACfwtB,EAAK9sB,EAAUR,OACfgtB,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,CAChB,MAAO,GAAa,MAAT/0B,EAAc,CACrB,GAAiB,WAAb6d,EACAuX,EAAcD,GAAkBpsB,EAAUP,KAAOO,EAAUT,OAAS,QACjE,GAAI1S,EAAgBmG,SAAS8hB,GAAW,CAC3C,MAAMiY,EAAiBlkC,OAAOD,KAAKksB,GAAU,GACvCvgB,EAAQugB,EAASiY,GACvBV,EAAcD,EAAiB3hC,KAAK4C,MAAMsK,OAAOo1B,GAAgBtoB,iBAAiBlQ,GACtF,CACAg4B,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAK3sB,EAAUP,KACfotB,EAAK7sB,EAAUT,KACnB,CACA,MAAMytB,EAAQngC,EAAgByN,eAAe1G,EAAQ8Q,MAAM+c,cAAeD,GACpEyL,EAAOjzC,KAAKC,IAAI,EAAGD,KAAKqnC,KAAKG,EAAcwL,IACjD,IAAIpwC,EAAI,EAAGA,EAAI4kC,EAAa5kC,GAAKqwC,EAAK,CAClC,MAAM3sB,EAAU7V,KAAKkS,WAAW/f,GAC1BswC,EAActmB,EAAKud,WAAW7jB,GAC9B6sB,EAAoB/b,EAAO+S,WAAW7jB,GACtC0L,EAAYkhB,EAAYlhB,UACxBohB,EAAYF,EAAYniC,MACxBsiC,EAAaF,EAAkBG,MAAQ,GACvCC,EAAmBJ,EAAkBK,WACrCjF,EAAY2E,EAAY3E,UACxBkF,EAAYP,EAAYO,UACxBC,EAAiBR,EAAYQ,gBAAkB,GAC/CC,EAAuBT,EAAYS,qBACzCzL,EAAYJ,GAAoBr3B,KAAM7N,EAAG+pB,QACvBzqB,IAAdgmC,IAGJoK,EAAmBz/B,EAAgB2+B,YAAYn+B,EAAO60B,EAAWlW,GAC7D5E,EACAmlB,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAE1B59B,EAAMgB,KAAK,CACP68B,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACA/kB,MAAOiE,EACPjhB,MAAOqiC,EACPC,aACAE,mBACAhF,YACAkF,YACAC,iBACAC,yBAER,CAGA,OAFAljC,KAAKu5B,aAAexC,EACpB/2B,KAAKw5B,aAAeoI,EACb39B,CACX,CACHk2B,mBAAmB5kB,GACZ,MAAM/I,EAAOxM,KAAKwM,KACZrD,EAAUnJ,KAAKmJ,SACf,SAAEkhB,EAAWpQ,MAAOknB,GAAiBh4B,EACrCwT,EAAe3c,KAAK2c,eACpB1C,EAAQja,KAAKia,OACb,MAAEke,EAAM,WAAEgL,EAAW,QAAExU,EAAQ,OAAEsQ,GAAYkC,EAC7CI,EAAK7J,GAAkBvuB,EAAQgT,MAC/BinB,EAAiB7B,EAAK5S,EACtB0U,EAAkBpE,GAAUtQ,EAAUyU,EACtC/iB,GAAYje,EAAgB8f,UAAUliB,KAAK44B,eAC3C30B,EAAQ,GACd,IAAI9R,EAAGuY,EAAMpG,EAAMoQ,EAAOphB,EAAGoc,EAAG4zB,EAAW1C,EAAO7I,EAAME,EAAYsL,EAAWC,EAC3EC,EAAe,SACnB,GAAiB,QAAbpZ,EACA3a,EAAI1P,KAAK+U,OAASsuB,EAClBC,EAAYtjC,KAAK0jC,+BACd,GAAiB,WAAbrZ,EACP3a,EAAI1P,KAAK6U,IAAMwuB,EACfC,EAAYtjC,KAAK0jC,+BACd,GAAiB,SAAbrZ,EAAqB,CAC5B,MAAMp5B,EAAM+O,KAAK2jC,wBAAwBpC,GACzC+B,EAAYryC,EAAIqyC,UAChBhwC,EAAIrC,EAAIqC,CACZ,MAAO,GAAiB,UAAb+2B,EAAsB,CAC7B,MAAMp5B,EAAM+O,KAAK2jC,wBAAwBpC,GACzC+B,EAAYryC,EAAIqyC,UAChBhwC,EAAIrC,EAAIqC,CACZ,MAAO,GAAa,MAATkZ,EAAc,CACrB,GAAiB,WAAb6d,EACA3a,GAAK6F,EAAUV,IAAMU,EAAUR,QAAU,EAAIquB,OAC1C,GAAIhhC,EAAgBmG,SAAS8hB,GAAW,CAC3C,MAAMiY,EAAiBlkC,OAAOD,KAAKksB,GAAU,GACvCvgB,EAAQugB,EAASiY,GACvB5yB,EAAI1P,KAAK4C,MAAMsK,OAAOo1B,GAAgBtoB,iBAAiBlQ,GAASs5B,CACpE,CACAE,EAAYtjC,KAAK0jC,yBACrB,MAAO,GAAa,MAATl3B,EAAc,CACrB,GAAiB,WAAb6d,EACA/2B,GAAKiiB,EAAUP,KAAOO,EAAUT,OAAS,EAAIsuB,OAC1C,GAAIhhC,EAAgBmG,SAAS8hB,GAAW,CAC3C,MAAMiY,EAAiBlkC,OAAOD,KAAKksB,GAAU,GACvCvgB,EAAQugB,EAASiY,GACvBhvC,EAAI0M,KAAK4C,MAAMsK,OAAOo1B,GAAgBtoB,iBAAiBlQ,EAC3D,CACAw5B,EAAYtjC,KAAK2jC,wBAAwBpC,GAAI+B,SACjD,CACa,MAAT92B,IACc,UAAV2rB,EACAsL,EAAe,MACE,QAAVtL,IACPsL,EAAe,WAGvB,MAAMxF,EAAaj+B,KAAKk+B,iBACxB,IAAI/rC,EAAI,EAAGuY,EAAOuP,EAAM9oB,OAAQgB,EAAIuY,IAAQvY,EAAE,CAC1CmS,EAAO2V,EAAM9nB,GACbuiB,EAAQpQ,EAAKoQ,MACb,MAAM+tB,EAActB,EAAYzH,WAAW15B,KAAKkS,WAAW/f,IAC3DyuC,EAAQ5gC,KAAKka,gBAAgB/nB,GAAKgvC,EAAYyC,YAC9C7L,EAAO/3B,KAAKogC,wBAAwBjuC,GACpC8lC,EAAaF,EAAKE,WAClBsL,EAAYnhC,EAAgB5P,QAAQkiB,GAASA,EAAMvjB,OAAS,EAC5D,MAAM0yC,EAAYN,EAAY,EACxBjjC,EAAQmiC,EAAYniC,MACpBwjC,EAAcrB,EAAYsB,gBAC1BC,EAAcvB,EAAYwB,gBAChC,IAuCIC,EAvCAC,EAAgBb,EAwCpB,GAvCI3mB,GACArpB,EAAIstC,EACc,UAAd0C,IAEIa,EADAhyC,IAAMuY,EAAO,EACI1K,KAAKmJ,QAAQiB,QAAoB,OAAV,QAC3B,IAANjY,EACU6N,KAAKmJ,QAAQiB,QAAmB,QAAT,OAExB,UAKhBo5B,EAFS,QAAbnZ,EACmB,SAAf8Y,GAAsC,IAAb9iB,GACXkjB,EAAYtL,EAAaA,EAAa,EAC9B,WAAfkL,GACOlF,EAAWK,QAAQjhB,OAAS,EAAIwmB,EAAY5L,EAAaA,GAEzDgG,EAAWK,QAAQjhB,OAAS4a,EAAa,EAGxC,SAAfkL,GAAsC,IAAb9iB,EACZ4X,EAAa,EACJ,WAAfkL,EACMlF,EAAWK,QAAQjhB,OAAS,EAAIwmB,EAAY5L,EAE5CgG,EAAWK,QAAQjhB,OAASkmB,EAAYtL,EAGzDgH,IACAuE,IAAe,GAEF,IAAbnjB,GAAmBoiB,EAAY2B,oBAC/B9wC,GAAK2kC,EAAa,EAAI1oC,KAAK8zB,IAAIhD,MAGnC3Q,EAAIkxB,EACJ4C,GAAc,EAAID,GAAatL,EAAa,GAG5CwK,EAAY2B,kBAAmB,CAC/B,MAAMC,EAAejiC,EAAgBitB,UAAUoT,EAAY6B,iBACrDjnB,EAAS4gB,EAAW4B,QAAQ1tC,GAC5BmrB,EAAQ2gB,EAAW2B,OAAOztC,GAChC,IAAI0iB,EAAM2uB,EAAaa,EAAaxvB,IAChCG,EAAO,EAAIqvB,EAAarvB,KAC5B,OAAOyuB,GACH,IAAK,SACD5uB,GAAOwI,EAAS,EAChB,MACJ,IAAK,SACDxI,GAAOwI,EAGf,OAAOimB,GACH,IAAK,SACDtuB,GAAQsI,EAAQ,EAChB,MACJ,IAAK,QACDtI,GAAQsI,EAGhB4mB,EAAW,CACPlvB,OACAH,MACAyI,MAAOA,EAAQ+mB,EAAa/mB,MAC5BD,OAAQA,EAASgnB,EAAahnB,OAC9B/c,MAAOmiC,EAAY8B,cAE3B,CACAtgC,EAAMgB,KAAK,CACPyP,QACAqjB,OACAyL,aACAr6B,QAAS,CACLkX,WACA/f,QACAwjC,cACAE,cACAV,UAAWa,EACXV,eACAe,YAAa,CACTlxC,EACAoc,GAEJw0B,aAGZ,CACA,OAAOjgC,CACX,CACAy/B,0BACI,MAAM,SAAErZ,EAAS,MAAEpQ,GAAWja,KAAKmJ,QAEnC,IADkB/G,EAAgB8f,UAAUliB,KAAK44B,eAE7C,MAAoB,QAAbvO,EAAqB,OAAS,QAEzC,IAAI8N,EAAQ,SAQZ,MAPoB,UAAhBle,EAAMke,MACNA,EAAQ,OACe,QAAhBle,EAAMke,MACbA,EAAQ,QACe,UAAhBle,EAAMke,QACbA,EAAQ,SAELA,CACX,CACAwL,wBAAwBpC,GACpB,MAAM,SAAElX,EAAWpQ,OAAO,WAAEkpB,EAAW,OAAElE,EAAO,QAAEtQ,IAAgB3uB,KAAKmJ,QAEjEi6B,EAAiB7B,EAAK5S,EACtByP,EAFap+B,KAAKk+B,iBAEEE,OAAO9gB,MACjC,IAAIgmB,EACAhwC,EAoDJ,MAnDiB,SAAb+2B,EACI4U,GACA3rC,EAAI0M,KAAK8U,MAAQ6Z,EACE,SAAfwU,EACAG,EAAY,OACU,WAAfH,GACPG,EAAY,SACZhwC,GAAK8qC,EAAS,IAEdkF,EAAY,QACZhwC,GAAK8qC,KAGT9qC,EAAI0M,KAAK8U,MAAQsuB,EACE,SAAfD,EACAG,EAAY,QACU,WAAfH,GACPG,EAAY,SACZhwC,GAAK8qC,EAAS,IAEdkF,EAAY,OACZhwC,EAAI0M,KAAKgV,OAGG,UAAbqV,EACH4U,GACA3rC,EAAI0M,KAAKgV,KAAO2Z,EACG,SAAfwU,EACAG,EAAY,QACU,WAAfH,GACPG,EAAY,SACZhwC,GAAK8qC,EAAS,IAEdkF,EAAY,OACZhwC,GAAK8qC,KAGT9qC,EAAI0M,KAAKgV,KAAOouB,EACG,SAAfD,EACAG,EAAY,OACU,WAAfH,GACPG,EAAY,SACZhwC,GAAK8qC,EAAS,IAEdkF,EAAY,QACZhwC,EAAI0M,KAAK8U,QAIjBwuB,EAAY,QAET,CACHA,YACAhwC,IAER,CACHmxC,oBACO,GAAIzkC,KAAKmJ,QAAQ8Q,MAAMglB,OACnB,OAEJ,MAAMr8B,EAAQ5C,KAAK4C,MACbynB,EAAWrqB,KAAKmJ,QAAQkhB,SAC9B,MAAiB,SAAbA,GAAoC,UAAbA,EAChB,CACHxV,IAAK,EACLG,KAAMhV,KAAKgV,KACXD,OAAQnS,EAAMya,OACdvI,MAAO9U,KAAK8U,OAGH,QAAbuV,GAAmC,WAAbA,EACf,CACHxV,IAAK7U,KAAK6U,IACVG,KAAM,EACND,OAAQ/U,KAAK+U,OACbD,MAAOlS,EAAM0a,YALrB,CAQJ,CACHonB,iBACO,MAAM,IAAE52B,EAAM3E,SAAS,gBAAEgY,GAAmB,KAAEnM,EAAK,IAAEH,EAAI,MAAEyI,EAAM,OAAED,GAAYrd,KAC3EmhB,IACArT,EAAI62B,OACJ72B,EAAIoT,UAAYC,EAChBrT,EAAI82B,SAAS5vB,EAAMH,EAAKyI,EAAOD,GAC/BvP,EAAI+2B,UAEZ,CACA9lB,qBAAqBjV,GACjB,MAAMqS,EAAOnc,KAAKmJ,QAAQgT,KAC1B,IAAKnc,KAAKg+B,eAAiB7hB,EAAK8K,QAC5B,OAAO,EAEX,MACMtc,EADQ3K,KAAKia,MACC6qB,WAAWhkC,GAAIA,EAAEgJ,QAAUA,IAC/C,OAAIa,GAAS,EACIwR,EAAKud,WAAW15B,KAAKkS,WAAWvH,IACjC4W,UAET,CACX,CACHwjB,SAASxvB,GACF,MAAM4G,EAAOnc,KAAKmJ,QAAQgT,KACpBrO,EAAM9N,KAAK8N,IACX7J,EAAQjE,KAAK84B,iBAAmB94B,KAAK84B,eAAiB94B,KAAKshC,sBAAsB/rB,IACvF,IAAIpjB,EAAGuY,EACP,MAAMs6B,EAAW,CAAC/xC,EAAIC,EAAI8tB,KACjBA,EAAM1D,OAAU0D,EAAM1gB,QAG3BwN,EAAI62B,OACJ72B,EAAIyT,UAAYP,EAAM1D,MACtBxP,EAAIsT,YAAcJ,EAAM1gB,MACxBwN,EAAIm3B,YAAYjkB,EAAM4hB,YAAc,IACpC90B,EAAIo3B,eAAiBlkB,EAAM8hB,iBAC3Bh1B,EAAIq3B,YACJr3B,EAAIs3B,OAAOnyC,EAAGK,EAAGL,EAAGyc,GACpB5B,EAAIu3B,OAAOnyC,EAAGI,EAAGJ,EAAGwc,GACpB5B,EAAIw3B,SACJx3B,EAAI+2B,UAAS,EAEjB,GAAI1oB,EAAK8K,QACL,IAAI90B,EAAI,EAAGuY,EAAOzG,EAAM9S,OAAQgB,EAAIuY,IAAQvY,EAAE,CAC1C,MAAM+R,EAAOD,EAAM9R,GACfgqB,EAAKopB,iBACLP,EAAS,CACL1xC,EAAG4Q,EAAKg+B,GACRxyB,EAAGxL,EAAKi+B,IACT,CACC7uC,EAAG4Q,EAAKk+B,GACR1yB,EAAGxL,EAAKm+B,IACTn+B,GAEHiY,EAAKwb,WACLqN,EAAS,CACL1xC,EAAG4Q,EAAK49B,IACRpyB,EAAGxL,EAAK69B,KACT,CACCzuC,EAAG4Q,EAAK89B,IACRtyB,EAAGxL,EAAK+9B,KACT,CACC3hC,MAAO4D,EAAK8+B,UACZ1lB,MAAOpZ,EAAK45B,UACZ8E,WAAY1+B,EAAK++B,eACjBH,iBAAkB5+B,EAAKg/B,sBAGnC,CAER,CACHsC,aACO,MAAM,MAAE5iC,EAAM,IAAEkL,EAAM3E,SAAS,OAAEwd,EAAO,KAAExK,IAAanc,KACjDwhC,EAAa7a,EAAO+S,WAAW15B,KAAKkS,cACpCuvB,EAAY9a,EAAOM,QAAUua,EAAWlkB,MAAQ,EACtD,IAAKmkB,EACD,OAEJ,MAAMgE,EAAgBtpB,EAAKud,WAAW15B,KAAKkS,WAAW,IAAIqP,UACpDqgB,EAAc5hC,KAAKw5B,aACzB,IAAI0I,EAAIE,EAAID,EAAIE,EACZriC,KAAK2c,gBACLulB,EAAK9/B,EAAgB2+B,YAAYn+B,EAAO5C,KAAKgV,KAAMysB,GAAaA,EAAY,EAC5EW,EAAKhgC,EAAgB2+B,YAAYn+B,EAAO5C,KAAK8U,MAAO2wB,GAAiBA,EAAgB,EACrFtD,EAAKE,EAAKT,IAEVO,EAAK//B,EAAgB2+B,YAAYn+B,EAAO5C,KAAK6U,IAAK4sB,GAAaA,EAAY,EAC3EY,EAAKjgC,EAAgB2+B,YAAYn+B,EAAO5C,KAAK+U,OAAQ0wB,GAAiBA,EAAgB,EACtFvD,EAAKE,EAAKR,GAEd9zB,EAAI62B,OACJ72B,EAAIyT,UAAYigB,EAAWlkB,MAC3BxP,EAAIsT,YAAcogB,EAAWlhC,MAC7BwN,EAAIq3B,YACJr3B,EAAIs3B,OAAOlD,EAAIC,GACfr0B,EAAIu3B,OAAOjD,EAAIC,GACfv0B,EAAIw3B,SACJx3B,EAAI+2B,SACR,CACHa,WAAWnwB,GAEJ,IADoBvV,KAAKmJ,QAAQ8Q,MAChBgN,QACb,OAEJ,MAAMnZ,EAAM9N,KAAK8N,IACXwH,EAAOtV,KAAKykC,oBACdnvB,GACAlT,EAAgBujC,SAAS73B,EAAKwH,GAElC,MAAMrR,EAAQjE,KAAKk6B,cAAc3kB,GACjC,IAAK,MAAMrR,KAAQD,EAAM,CACrB,MAAM2hC,EAAoB1hC,EAAKiF,QACzB42B,EAAW77B,EAAK6zB,KAChBrjB,EAAQxQ,EAAKwQ,MACbhF,EAAIxL,EAAKs/B,WACfphC,EAAgByjC,WAAW/3B,EAAK4G,EAAO,EAAGhF,EAAGqwB,EAAU6F,EAC3D,CACItwB,GACAlT,EAAgB0jC,WAAWh4B,EAEnC,CACHi4B,YACO,MAAM,IAAEj4B,EAAM3E,SAAS,SAAEkhB,EAAS,MAAEmU,EAAM,QAAEp0B,IAAgBpK,KAC5D,IAAKw+B,EAAMvX,QACP,OAEJ,MAAM8Q,EAAO31B,EAAgB41B,OAAOwG,EAAMzG,MACpCpJ,EAAUvsB,EAAgBitB,UAAUmP,EAAM7P,SAC1CwJ,EAAQqG,EAAMrG,MACpB,IAAIjc,EAAS6b,EAAKE,WAAa,EACd,WAAb5N,GAAsC,WAAbA,GAAyBjoB,EAAgBmG,SAAS8hB,IAC3EnO,GAAUyS,EAAQ5Z,OACd3S,EAAgB5P,QAAQgsC,EAAMvd,QAC9B/E,GAAU6b,EAAKE,YAAcuG,EAAMvd,KAAK9vB,OAAS,KAGrD+qB,GAAUyS,EAAQ9Z,IAEtB,MAAM,OAAEmxB,EAAO,OAAEC,EAAO,SAAE9hB,EAAS,SAAE9D,GA5kC7C,SAAmBpW,EAAOiS,EAAQmO,EAAU8N,GACxC,MAAM,IAAEtjB,EAAI,KAAEG,EAAK,OAAED,EAAO,MAAED,EAAM,MAAElS,GAAWqH,GAC3C,UAAEsL,EAAU,OAAErI,GAAYtK,EAChC,IACIuhB,EAAU6hB,EAAQC,EADlB5lB,EAAW,EAEf,MAAMhD,EAAStI,EAASF,EAClByI,EAAQxI,EAAQE,EACtB,GAAI/K,EAAM0S,eAAgB,CAEtB,GADAqpB,EAAS5jC,EAAgB8jC,eAAe/N,EAAOnjB,EAAMF,GACjD1S,EAAgBmG,SAAS8hB,GAAW,CACpC,MAAMiY,EAAiBlkC,OAAOD,KAAKksB,GAAU,GACvCvgB,EAAQugB,EAASiY,GACvB2D,EAAS/4B,EAAOo1B,GAAgBtoB,iBAAiBlQ,GAASuT,EAASnB,CACvE,MACI+pB,EADoB,WAAb5b,GACG9U,EAAUR,OAASQ,EAAUV,KAAO,EAAIwI,EAASnB,EAElD2a,GAAe5sB,EAAOogB,EAAUnO,GAE7CiI,EAAWrP,EAAQE,CACvB,KAAO,CACH,GAAI5S,EAAgBmG,SAAS8hB,GAAW,CACpC,MAAMiY,EAAiBlkC,OAAOD,KAAKksB,GAAU,GACvCvgB,EAAQugB,EAASiY,GACvB0D,EAAS94B,EAAOo1B,GAAgBtoB,iBAAiBlQ,GAASwT,EAAQpB,CACtE,MACI8pB,EADoB,WAAb3b,GACG9U,EAAUP,KAAOO,EAAUT,OAAS,EAAIwI,EAAQpB,EAEjD2a,GAAe5sB,EAAOogB,EAAUnO,GAE7C+pB,EAAS7jC,EAAgB8jC,eAAe/N,EAAOpjB,EAAQF,GACvDwL,EAAwB,SAAbgK,GAAuBjoB,EAAgB0hB,QAAU1hB,EAAgB0hB,OAChF,CACA,MAAO,CACHkiB,SACAC,SACA9hB,WACA9D,WAER,CAsiC2D8lB,CAAUnmC,KAAMkc,EAAQmO,EAAU8N,GACrF/1B,EAAgByjC,WAAW/3B,EAAK0wB,EAAMvd,KAAM,EAAG,EAAG8W,EAAM,CACpDz3B,MAAOk+B,EAAMl+B,MACb6jB,WACA9D,WACAijB,UAAWpL,GAAWC,EAAO9N,EAAUjgB,GACvCq5B,aAAc,SACde,YAAa,CACTwB,EACAC,IAGZ,CACA9hC,KAAKoR,GACIvV,KAAKg+B,eAGVh+B,KAAK0kC,iBACL1kC,KAAK+kC,SAASxvB,GACdvV,KAAKwlC,aACLxlC,KAAK+lC,YACL/lC,KAAK0lC,WAAWnwB,GACpB,CACHyZ,UACO,MAAM7kB,EAAOnK,KAAKmJ,QACZi9B,EAAKj8B,EAAK8P,OAAS9P,EAAK8P,MAAMgV,GAAK,EACnCoX,EAAKjkC,EAAgByN,eAAe1F,EAAKgS,MAAQhS,EAAKgS,KAAK8S,GAAI,GAC/DqX,EAAKlkC,EAAgByN,eAAe1F,EAAKwc,QAAUxc,EAAKwc,OAAOsI,EAAG,GACxE,OAAKjvB,KAAKg+B,cAAgBh+B,KAAKmE,OAASm0B,GAAMtP,UAAU7kB,KAUjD,CACH,CACI8qB,EAAGoX,EACHliC,KAAOoR,IACHvV,KAAK0kC,iBACL1kC,KAAK+kC,SAASxvB,GACdvV,KAAK+lC,WAAW,GAGxB,CACI9W,EAAGqX,EACHniC,KAAM,KACFnE,KAAKwlC,YAAY,GAGzB,CACIvW,EAAGmX,EACHjiC,KAAOoR,IACHvV,KAAK0lC,WAAWnwB,EAAU,IA3B3B,CACH,CACI0Z,EAAGmX,EACHjiC,KAAOoR,IACHvV,KAAKmE,KAAKoR,EAAU,GA2BxC,CACHvJ,wBAAwBlM,GACjB,MAAMg6B,EAAQ95B,KAAK4C,MAAM2nB,+BACnBgc,EAASvmC,KAAKwM,KAAO,SACrB2qB,EAAS,GACf,IAAIhlC,EAAGuY,EACP,IAAIvY,EAAI,EAAGuY,EAAOovB,EAAM3oC,OAAQgB,EAAIuY,IAAQvY,EAAE,CAC1C,MAAMmZ,EAAOwuB,EAAM3nC,GACfmZ,EAAKi7B,KAAYvmC,KAAK4M,IAAQ9M,GAAQwL,EAAKxL,OAASA,GACpDq3B,EAAOlyB,KAAKqG,EAEpB,CACA,OAAO6rB,CACX,CACHiJ,wBAAwBz1B,GACjB,MAAMR,EAAOnK,KAAKmJ,QAAQ8Q,MAAMyf,WAAW15B,KAAKkS,WAAWvH,IAC3D,OAAOvI,EAAgB41B,OAAO7tB,EAAK4tB,KACvC,CACHyO,aACO,MAAMC,EAAWzmC,KAAKogC,wBAAwB,GAAGnI,WACjD,OAAQj4B,KAAK2c,eAAiB3c,KAAKsd,MAAQtd,KAAKqd,QAAUopB,CAC9D,EAGJ,MAAMC,GACF7mC,YAAYC,EAAM6mC,EAAOC,GACrB5mC,KAAKF,KAAOA,EACZE,KAAK2mC,MAAQA,EACb3mC,KAAK4mC,SAAWA,EAChB5mC,KAAKiE,MAAQ7F,OAAOyoC,OAAO,KAC/B,CACAC,UAAUhnC,GACN,OAAO1B,OAAO4qB,UAAU+d,cAAcrjC,KAAK1D,KAAKF,KAAKkpB,UAAWlpB,EAAKkpB,UACzE,CACH7mB,SAAS+B,GACF,MAAM1E,EAAQpB,OAAO4oC,eAAe9iC,GACpC,IAAI+iC,GAiEZ,SAA2BznC,GACvB,MAAO,OAAQA,GAAS,aAAcA,CAC1C,EAlEY0nC,CAAkB1nC,KAClBynC,EAAcjnC,KAAKmC,SAAS3C,IAEhC,MAAMyE,EAAQjE,KAAKiE,MACb2I,EAAK1I,EAAK0I,GACV+5B,EAAQ3mC,KAAK2mC,MAAQ,IAAM/5B,EACjC,IAAKA,EACD,MAAM,IAAIic,MAAM,2BAA6B3kB,GAEjD,OAAI0I,KAAM3I,IAGVA,EAAM2I,GAAM1I,EAyBpB,SAA0BA,EAAMyiC,EAAOM,GACnC,MAAME,EAAe/kC,EAAgBglC,MAAMhpC,OAAOyoC,OAAO,MAAO,CAC5DI,EAAc7kC,EAAgBqG,SAAS/D,IAAIuiC,GAAe,CAAC,EAC3D7kC,EAAgBqG,SAAS/D,IAAIiiC,GAC7BziC,EAAKuE,WAETrG,EAAgBqG,SAAS5D,IAAI8hC,EAAOQ,GAChCjjC,EAAKmjC,eAOb,SAAuBV,EAAOW,GAC1BlpC,OAAOD,KAAKmpC,GAAQnkC,SAASokC,IACzB,MAAMC,EAAgBD,EAASE,MAAM,KAC/BC,EAAaF,EAAcjjC,MAC3BojC,EAAc,CAChBhB,GACFntB,OAAOguB,GAAeI,KAAK,KACvBC,EAAQP,EAAOC,GAAUE,MAAM,KAC/BK,EAAaD,EAAMtjC,MACnBwjC,EAAcF,EAAMD,KAAK,KAC/BxlC,EAAgBqG,SAASu/B,MAAML,EAAaD,EAAYK,EAAaD,EAAW,GAExF,CAlBQG,CAActB,EAAOziC,EAAKmjC,eAE1BnjC,EAAKgkC,aACL9lC,EAAgBqG,SAAS0/B,SAASxB,EAAOziC,EAAKgkC,YAEtD,CArCQE,CAAiBlkC,EAAMyiC,EAAOM,GAC1BjnC,KAAK4mC,UACLxkC,EAAgBqG,SAASm+B,SAAS1iC,EAAK0I,GAAI1I,EAAKmkC,YALzC1B,CAQf,CACHjiC,IAAIkI,GACG,OAAO5M,KAAKiE,MAAM2I,EACtB,CACH07B,WAAWpkC,GACJ,MAAMD,EAAQjE,KAAKiE,MACb2I,EAAK1I,EAAK0I,GACV+5B,EAAQ3mC,KAAK2mC,MACf/5B,KAAM3I,UACCA,EAAM2I,GAEb+5B,GAAS/5B,KAAMxK,EAAgBqG,SAASk+B,YACjCvkC,EAAgBqG,SAASk+B,GAAO/5B,GACnC5M,KAAK4mC,iBACExkC,EAAgBimC,UAAUz7B,GAG7C,EAiCJ,MAAM27B,GACF1oC,cACIG,KAAK2oB,YAAc,IAAI+d,GAAc/4B,EAAmB,YAAY,GACpE3N,KAAKqV,SAAW,IAAIqxB,GAAcrQ,GAAS,YAC3Cr2B,KAAK4gB,QAAU,IAAI8lB,GAActoC,OAAQ,WACzC4B,KAAKkN,OAAS,IAAIw5B,GAAcpO,GAAO,UACvCt4B,KAAKwoC,iBAAmB,CACpBxoC,KAAK2oB,YACL3oB,KAAKkN,OACLlN,KAAKqV,SAEb,CACHnQ,OAAOyT,GACA3Y,KAAKyoC,MAAM,WAAY9vB,EAC3B,CACAjT,UAAUiT,GACN3Y,KAAKyoC,MAAM,aAAc9vB,EAC7B,CACH+vB,kBAAkB/vB,GACX3Y,KAAKyoC,MAAM,WAAY9vB,EAAM3Y,KAAK2oB,YACtC,CACH1Z,eAAe0J,GACR3Y,KAAKyoC,MAAM,WAAY9vB,EAAM3Y,KAAKqV,SACtC,CACHszB,cAAchwB,GACP3Y,KAAKyoC,MAAM,WAAY9vB,EAAM3Y,KAAK4gB,QACtC,CACHgoB,aAAajwB,GACN3Y,KAAKyoC,MAAM,WAAY9vB,EAAM3Y,KAAKkN,OACtC,CACH27B,cAAcj8B,GACP,OAAO5M,KAAK8oC,KAAKl8B,EAAI5M,KAAK2oB,YAAa,aAC3C,CACHD,WAAW9b,GACJ,OAAO5M,KAAK8oC,KAAKl8B,EAAI5M,KAAKqV,SAAU,UACxC,CACH0zB,UAAUn8B,GACH,OAAO5M,KAAK8oC,KAAKl8B,EAAI5M,KAAK4gB,QAAS,SACvC,CACHooB,SAASp8B,GACF,OAAO5M,KAAK8oC,KAAKl8B,EAAI5M,KAAKkN,OAAQ,QACtC,CACH+7B,qBAAqBtwB,GACd3Y,KAAKyoC,MAAM,aAAc9vB,EAAM3Y,KAAK2oB,YACxC,CACHugB,kBAAkBvwB,GACX3Y,KAAKyoC,MAAM,aAAc9vB,EAAM3Y,KAAKqV,SACxC,CACH8zB,iBAAiBxwB,GACV3Y,KAAKyoC,MAAM,aAAc9vB,EAAM3Y,KAAK4gB,QACxC,CACHwoB,gBAAgBzwB,GACT3Y,KAAKyoC,MAAM,aAAc9vB,EAAM3Y,KAAKkN,OACxC,CACHu7B,MAAMxgC,EAAQ0Q,EAAM0wB,GACb,IACO1wB,GACLxV,SAASmmC,IACP,MAAMC,EAAMF,GAAiBrpC,KAAKwpC,oBAAoBF,GAClDD,GAAiBE,EAAIzC,UAAUwC,IAAQC,IAAQvpC,KAAK4gB,SAAW0oB,EAAI18B,GACnE5M,KAAKypC,MAAMxhC,EAAQshC,EAAKD,GAExBlnC,EAAgB+tB,KAAKmZ,GAAMplC,IACvB,MAAMwlC,EAAUL,GAAiBrpC,KAAKwpC,oBAAoBtlC,GAC1DlE,KAAKypC,MAAMxhC,EAAQyhC,EAASxlC,EAAK,GAEzC,GAER,CACHulC,MAAMxhC,EAAQwgB,EAAUkhB,GACjB,MAAMC,EAAcxnC,EAAgBynC,YAAY5hC,GAChD7F,EAAgBi4B,SAASsP,EAAU,SAAWC,GAAc,GAAID,GAChElhB,EAASxgB,GAAQ0hC,GACjBvnC,EAAgBi4B,SAASsP,EAAU,QAAUC,GAAc,GAAID,EACnE,CACHH,oBAAoB1pC,GACb,IAAI,IAAI3N,EAAI,EAAGA,EAAI6N,KAAKwoC,iBAAiBr3C,OAAQgB,IAAI,CACjD,MAAMo3C,EAAMvpC,KAAKwoC,iBAAiBr2C,GAClC,GAAIo3C,EAAIzC,UAAUhnC,GACd,OAAOypC,CAEf,CACA,OAAOvpC,KAAK4gB,OAChB,CACHkoB,KAAKl8B,EAAIy8B,EAAevpC,GACjB,MAAMoE,EAAOmlC,EAAc3kC,IAAIkI,GAC/B,QAAanb,IAATyS,EACA,MAAM,IAAI2kB,MAAM,IAAMjc,EAAK,yBAA2B9M,EAAO,KAEjE,OAAOoE,CACX,EAEJ,IAAIukB,GAA2B,IAAI8f,GAEnC,MAAMuB,GACFjqC,cACIG,KAAK+pC,MAAQ,EACjB,CACHC,OAAOpnC,EAAOqnC,EAAMtxB,EAAMxL,GACN,eAAT88B,IACAjqC,KAAK+pC,MAAQ/pC,KAAKkqC,mBAAmBtnC,GAAO,GAC5C5C,KAAK2C,QAAQ3C,KAAK+pC,MAAOnnC,EAAO,YAEpC,MAAMslC,EAAc/6B,EAASnN,KAAKmqC,aAAavnC,GAAOuK,OAAOA,GAAUnN,KAAKmqC,aAAavnC,GACnFu0B,EAASn3B,KAAK2C,QAAQulC,EAAatlC,EAAOqnC,EAAMtxB,GAKtD,MAJa,iBAATsxB,IACAjqC,KAAK2C,QAAQulC,EAAatlC,EAAO,QACjC5C,KAAK2C,QAAQ3C,KAAK+pC,MAAOnnC,EAAO,cAE7Bu0B,CACX,CACHx0B,QAAQulC,EAAatlC,EAAOqnC,EAAMtxB,GAC3BA,EAAOA,GAAQ,CAAC,EAChB,IAAK,MAAMyxB,KAAclC,EAAY,CACjC,MAAMmC,EAASD,EAAWC,OACpBpiC,EAASoiC,EAAOJ,GAChB9c,EAAS,CACXvqB,EACA+V,EACAyxB,EAAWjhC,SAEf,IAAyD,IAArD/G,EAAgBi4B,SAASpyB,EAAQklB,EAAQkd,IAAqB1xB,EAAK2xB,WACnE,OAAO,CAEf,CACA,OAAO,CACX,CACAC,aACSnoC,EAAgB2a,cAAc/c,KAAKqZ,UACpCrZ,KAAKwqC,UAAYxqC,KAAKqZ,OACtBrZ,KAAKqZ,YAAS5nB,EAEtB,CACH04C,aAAavnC,GACN,GAAI5C,KAAKqZ,OACL,OAAOrZ,KAAKqZ,OAEhB,MAAM6uB,EAAcloC,KAAKqZ,OAASrZ,KAAKkqC,mBAAmBtnC,GAE1D,OADA5C,KAAKyqC,oBAAoB7nC,GAClBslC,CACX,CACAgC,mBAAmBtnC,EAAO8G,GACtB,MAAMvB,EAASvF,GAASA,EAAMuF,OACxBgB,EAAU/G,EAAgByN,eAAe1H,EAAOgB,SAAWhB,EAAOgB,QAAQyX,QAAS,CAAC,GACpFA,EAWb,SAAoBzY,GACjB,MAAMuiC,EAAW,CAAC,EACZ9pB,EAAU,GACVziB,EAAOC,OAAOD,KAAKsqB,GAAS7H,QAAQ3c,OAC1C,IAAI,IAAI9R,EAAI,EAAGA,EAAIgM,EAAKhN,OAAQgB,IAC5ByuB,EAAQ3b,KAAKwjB,GAASsgB,UAAU5qC,EAAKhM,KAEzC,MAAMw4C,EAAQxiC,EAAOyY,SAAW,GAChC,IAAI,IAAIzuB,EAAI,EAAGA,EAAIw4C,EAAMx5C,OAAQgB,IAAI,CACjC,MAAMk4C,EAASM,EAAMx4C,IACY,IAA7ByuB,EAAQjD,QAAQ0sB,KAChBzpB,EAAQ3b,KAAKolC,GACbK,EAASL,EAAOz9B,KAAM,EAE9B,CACA,MAAO,CACHgU,UACA8pB,WAER,CA9BwBE,CAAWziC,GAC3B,OAAmB,IAAZgB,GAAsBO,EAuCrC,SAA2B9G,GAAO,QAAEge,EAAQ,SAAE8pB,GAAavhC,EAASO,GAChE,MAAMytB,EAAS,GACTthB,EAAUjT,EAAMsP,aACtB,IAAK,MAAMm4B,KAAUzpB,EAAQ,CACzB,MAAMhU,EAAKy9B,EAAOz9B,GACZzC,EAAO0gC,GAAQ1hC,EAAQyD,GAAKlD,GACrB,OAATS,GAGJgtB,EAAOlyB,KAAK,CACRolC,SACAlhC,QAAS2hC,GAAWloC,EAAMuF,OAAQ,CAC9BkiC,SACAM,MAAOD,EAAS99B,IACjBzC,EAAM0L,IAEjB,CACA,OAAOshB,CACX,CAzDgD4T,CAAkBnoC,EAAOge,EAASzX,EAASO,GAAhD,EACvC,CACH+gC,oBAAoB7nC,GACb,MAAMooC,EAAsBhrC,KAAKwqC,WAAa,GACxCtC,EAAcloC,KAAKqZ,OACnB+P,EAAO,CAAC/4B,EAAGC,IAAID,EAAE8c,QAAQ7Z,IAAKhD,EAAE26C,MAAMv7B,GAAIpc,EAAE+2C,OAAOz9B,KAAO8C,EAAE26B,OAAOz9B,OACzE5M,KAAK2C,QAAQymB,EAAK4hB,EAAqB9C,GAActlC,EAAO,QAC5D5C,KAAK2C,QAAQymB,EAAK8e,EAAa8C,GAAsBpoC,EAAO,QAChE,EAsBJ,SAASioC,GAAQ1hC,EAASO,GACtB,OAAKA,IAAmB,IAAZP,GAGI,IAAZA,EACO,CAAC,EAELA,EALI,IAMf,CAoBA,SAAS2hC,GAAW3iC,GAAQ,OAAEkiC,EAAO,MAAEM,GAAUxgC,EAAM0L,GACnD,MAAM1X,EAAOgK,EAAO+iC,gBAAgBb,GAC9Bt4B,EAAS5J,EAAO6J,gBAAgB7H,EAAMhM,GAI5C,OAHIwsC,GAASN,EAAO5hC,UAChBsJ,EAAO9M,KAAKolC,EAAO5hC,UAEhBN,EAAO8J,eAAeF,EAAQ8D,EAAS,CAC1C,IACD,CACCs1B,YAAY,EACZC,WAAW,EACXC,SAAS,GAEjB,CAEA,SAASC,GAAaxrC,EAAMqJ,GACxB,MAAMoiC,EAAkBnpC,EAAgBqG,SAASmI,SAAS9Q,IAAS,CAAC,EAEpE,QADwBqJ,EAAQyH,UAAY,CAAC,GAAG9Q,IAAS,CAAC,GACpCoQ,WAAa/G,EAAQ+G,WAAaq7B,EAAgBr7B,WAAa,GACzF,CAaA,SAASs7B,GAAc5+B,GACnB,GAAW,MAAPA,GAAqB,MAAPA,GAAqB,MAAPA,EAC5B,OAAOA,CAEf,CASA,SAAS6+B,GAAc7+B,KAAO8+B,GAC1B,GAAIF,GAAc5+B,GACd,OAAOA,EAEX,IAAK,MAAMzC,KAAQuhC,EAAa,CAC5B,MAAMl/B,EAAOrC,EAAKqC,OAZL,SADK6d,EAayBlgB,EAAKkgB,WAZb,WAAbA,EACf,IAEM,SAAbA,GAAoC,UAAbA,EAChB,SADX,IASiEzd,EAAGzb,OAAS,GAAKq6C,GAAc5+B,EAAG,GAAG/N,eAClG,GAAI2N,EACA,OAAOA,CAEf,CAjBJ,IAA0B6d,EAkBtB,MAAM,IAAIxB,MAAM,6BAA6Bjc,uDACjD,CACA,SAAS++B,GAAmB/+B,EAAIJ,EAAM+C,GAClC,GAAIA,EAAQ/C,EAAO,YAAcI,EAC7B,MAAO,CACHJ,OAGZ,CAgEA,SAASo/B,GAAYzjC,GACjB,MAAMgB,EAAUhB,EAAOgB,UAAYhB,EAAOgB,QAAU,CAAC,GACrDA,EAAQyX,QAAUxe,EAAgByN,eAAe1G,EAAQyX,QAAS,CAAC,GACnEzX,EAAQ+D,OAzDZ,SAA0B/E,EAAQgB,GAC9B,MAAM0iC,EAAgBzpC,EAAgBimC,UAAUlgC,EAAOrI,OAAS,CAC5DoN,OAAQ,CAAC,GAEP4+B,EAAe3iC,EAAQ+D,QAAU,CAAC,EAClC6+B,EAAiBT,GAAanjC,EAAOrI,KAAMqJ,GAC3C+D,EAAS9O,OAAOyoC,OAAO,MA8C7B,OA7CAzoC,OAAOD,KAAK2tC,GAAc3oC,SAASyJ,IAC/B,MAAMo/B,EAAYF,EAAal/B,GAC/B,IAAKxK,EAAgBmG,SAASyjC,GAC1B,OAAO58B,QAAQ68B,MAAM,0CAA0Cr/B,KAEnE,GAAIo/B,EAAUE,OACV,OAAO98B,QAAQC,KAAK,kDAAkDzC,KAE1E,MAAMJ,EAAOi/B,GAAc7+B,EAAIo/B,EAxBvC,SAAkCp/B,EAAIzE,GAClC,GAAIA,EAAOwI,MAAQxI,EAAOwI,KAAKC,SAAU,CACrC,MAAMu7B,EAAUhkC,EAAOwI,KAAKC,SAASzD,QAAQ3c,GAAIA,EAAEof,UAAYhD,GAAMpc,EAAEuf,UAAYnD,IACnF,GAAIu/B,EAAQh7C,OACR,OAAOw6C,GAAmB/+B,EAAI,IAAKu/B,EAAQ,KAAOR,GAAmB/+B,EAAI,IAAKu/B,EAAQ,GAE9F,CACA,MAAO,CAAC,CACZ,CAgBkDC,CAAyBx/B,EAAIzE,GAAS/F,EAAgBqG,SAASyE,OAAO8+B,EAAUlsC,OACpHusC,EA5Dd,SAAmC7/B,EAAM0D,GACrC,OAAO1D,IAAS0D,EAAY,UAAY,SAC5C,CA0D0Bo8B,CAA0B9/B,EAAMu/B,GAC5CQ,EAAsBV,EAAc3+B,QAAU,CAAC,EACrDA,EAAON,GAAMxK,EAAgBoqC,QAAQpuC,OAAOyoC,OAAO,MAAO,CACtD,CACIr6B,QAEJw/B,EACAO,EAAoB//B,GACpB+/B,EAAoBF,IACtB,IAENlkC,EAAOwI,KAAKC,SAASzN,SAASoM,IAC1B,MAAMzP,EAAOyP,EAAQzP,MAAQqI,EAAOrI,KAC9BoQ,EAAYX,EAAQW,WAAao7B,GAAaxrC,EAAMqJ,GAEpDojC,GADkBnqC,EAAgBimC,UAAUvoC,IAAS,CAAC,GAChBoN,QAAU,CAAC,EACvD9O,OAAOD,KAAKouC,GAAqBppC,SAASspC,IACtC,MAAMjgC,EAtFlB,SAAmCI,EAAIsD,GACnC,IAAI1D,EAAOI,EAMX,MALW,YAAPA,EACAJ,EAAO0D,EACO,YAAPtD,IACPJ,EAAqB,MAAd0D,EAAoB,IAAM,KAE9B1D,CACX,CA8EyBkgC,CAA0BD,EAAWv8B,GAC5CtD,EAAK2C,EAAQ/C,EAAO,WAAaA,EACvCU,EAAON,GAAMM,EAAON,IAAOxO,OAAOyoC,OAAO,MACzCzkC,EAAgBoqC,QAAQt/B,EAAON,GAAK,CAChC,CACIJ,QAEJs/B,EAAal/B,GACb2/B,EAAoBE,IACtB,GACJ,IAENruC,OAAOD,KAAK+O,GAAQ/J,SAAS0F,IACzB,MAAMoB,EAAQiD,EAAOrE,GACrBzG,EAAgBoqC,QAAQviC,EAAO,CAC3B7H,EAAgBqG,SAASyE,OAAOjD,EAAMnK,MACtCsC,EAAgBqG,SAASwB,OAC3B,IAECiD,CACX,CAIqBy/B,CAAiBxkC,EAAQgB,EAC9C,CACA,SAASyjC,GAASj8B,GAId,OAHAA,EAAOA,GAAQ,CAAC,GACXC,SAAWD,EAAKC,UAAY,GACjCD,EAAKkC,OAASlC,EAAKkC,QAAU,GACtBlC,CACX,CAOA,MAAMk8B,GAAW,IAAIrqC,IACfsqC,GAAa,IAAIC,IACvB,SAASC,GAAWz2B,EAAU02B,GAC1B,IAAI9uC,EAAO0uC,GAASnoC,IAAI6R,GAMxB,OALKpY,IACDA,EAAO8uC,IACPJ,GAAShoC,IAAI0R,EAAUpY,GACvB2uC,GAAW5nC,IAAI/G,IAEZA,CACX,CACA,MAAM+uC,GAAa,CAACroC,EAAKzE,EAAKyI,KAC1B,MAAMsB,EAAO/H,EAAgB8Q,iBAAiB9S,EAAKyI,QACtCpX,IAAT0Y,GACAtF,EAAIK,IAAIiF,EACZ,EAEJ,MAAMgjC,GACFttC,YAAYsI,GACRnI,KAAKotC,QAzBb,SAAoBjlC,GAIhB,OAHAA,EAASA,GAAU,CAAC,GACbwI,KAAOi8B,GAASzkC,EAAOwI,MAC9Bi7B,GAAYzjC,GACLA,CACX,CAoBuBklC,CAAWllC,GAC1BnI,KAAKstC,YAAc,IAAI9qC,IACvBxC,KAAKutC,eAAiB,IAAI/qC,GAC9B,CACIgrC,eACA,OAAOxtC,KAAKotC,QAAQI,QACxB,CACI1tC,WACA,OAAOE,KAAKotC,QAAQttC,IACxB,CACIA,SAAKA,GACLE,KAAKotC,QAAQttC,KAAOA,CACxB,CACI6Q,WACA,OAAO3Q,KAAKotC,QAAQz8B,IACxB,CACIA,SAAKA,GACL3Q,KAAKotC,QAAQz8B,KAAOi8B,GAASj8B,EACjC,CACIxH,cACA,OAAOnJ,KAAKotC,QAAQjkC,OACxB,CACIA,YAAQA,GACRnJ,KAAKotC,QAAQjkC,QAAUA,CAC3B,CACIyX,cACA,OAAO5gB,KAAKotC,QAAQxsB,OACxB,CACApZ,SACI,MAAMW,EAASnI,KAAKotC,QACpBptC,KAAKytC,aACL7B,GAAYzjC,EAChB,CACAslC,aACIztC,KAAKstC,YAAYI,QACjB1tC,KAAKutC,eAAeG,OACxB,CACH57B,iBAAiB67B,GACV,OAAOX,GAAWW,GAAa,IAAI,CAC3B,CACI,YAAYA,IACZ,MAGhB,CACH52B,0BAA0B42B,EAAa72B,GAChC,OAAOk2B,GAAW,GAAGW,gBAA0B72B,KAAc,IAAI,CACzD,CACI,YAAY62B,iBAA2B72B,IACvC,eAAeA,KAEnB,CACI,YAAY62B,IACZ,MAGhB,CACHj3B,wBAAwBi3B,EAAat3B,GAC9B,OAAO22B,GAAW,GAAGW,KAAet3B,KAAe,IAAI,CAC/C,CACI,YAAYs3B,cAAwBt3B,IACpC,YAAYs3B,IACZ,YAAYt3B,IACZ,MAGhB,CACH60B,gBAAgBb,GACT,MAAMz9B,EAAKy9B,EAAOz9B,GAElB,OAAOogC,GAAW,GADLhtC,KAAKF,eACkB8M,KAAM,IAAI,CACtC,CACI,WAAWA,OACRy9B,EAAOuD,wBAA0B,MAGpD,CACHC,cAAcC,EAAWC,GAClB,MAAMT,EAActtC,KAAKstC,YACzB,IAAIh3B,EAAQg3B,EAAY5oC,IAAIopC,GAK5B,OAJKx3B,IAASy3B,IACVz3B,EAAQ,IAAI9T,IACZ8qC,EAAYzoC,IAAIipC,EAAWx3B,IAExBA,CACX,CACHtE,gBAAgB87B,EAAWE,EAAUD,GAC9B,MAAM,QAAE5kC,EAAQ,KAAErJ,GAAUE,KACtBsW,EAAQtW,KAAK6tC,cAAcC,EAAWC,GACtCtgC,EAAS6I,EAAM5R,IAAIspC,GACzB,GAAIvgC,EACA,OAAOA,EAEX,MAAMsE,EAAS,IAAIg7B,IACnBiB,EAAS7qC,SAAShF,IACV2vC,IACA/7B,EAAO7M,IAAI4oC,GACX3vC,EAAKgF,SAAS0F,GAAMqkC,GAAWn7B,EAAQ+7B,EAAWjlC,MAEtD1K,EAAKgF,SAAS0F,GAAMqkC,GAAWn7B,EAAQ5I,EAASN,KAChD1K,EAAKgF,SAAS0F,GAAMqkC,GAAWn7B,EAAQ3P,EAAgBimC,UAAUvoC,IAAS,CAAC,EAAG+I,KAC9E1K,EAAKgF,SAAS0F,GAAMqkC,GAAWn7B,EAAQ3P,EAAgBqG,SAAUI,KACjE1K,EAAKgF,SAAS0F,GAAMqkC,GAAWn7B,EAAQ3P,EAAgB8lC,YAAar/B,IAAK,IAE7E,MAAM2jB,EAAQj6B,MAAM4M,KAAK4S,GAOzB,OANqB,IAAjBya,EAAMr7B,QACNq7B,EAAMvnB,KAAK7G,OAAOyoC,OAAO,OAEzBiG,GAAW3nC,IAAI6oC,IACf13B,EAAMzR,IAAImpC,EAAUxhB,GAEjBA,CACX,CACHyhB,oBACO,MAAM,QAAE9kC,EAAQ,KAAErJ,GAAUE,KAC5B,MAAO,CACHmJ,EACA/G,EAAgBimC,UAAUvoC,IAAS,CAAC,EACpCsC,EAAgBqG,SAASmI,SAAS9Q,IAAS,CAAC,EAC5C,CACIA,QAEJsC,EAAgBqG,SAChBrG,EAAgB8lC,YAExB,CACHtxB,oBAAoB7E,EAAQ/T,EAAO6X,EAASc,EAAW,CAChD,KAEA,MAAMwgB,EAAS,CACX/tB,SAAS,IAEP,SAAE8kC,EAAS,YAAEC,GAAiBC,GAAYpuC,KAAKutC,eAAgBx7B,EAAQ4E,GAC7E,IAAIxN,EAAU+kC,EACd,GAqCR,SAAqBpZ,EAAO92B,GACxB,MAAM,aAAEqwC,EAAa,YAAEC,GAAiBlsC,EAAgB+nC,aAAarV,GACrE,IAAK,MAAMzuB,KAAQrI,EAAM,CACrB,MAAMmtC,EAAakD,EAAahoC,GAC1B+kC,EAAYkD,EAAYjoC,GACxByD,GAASshC,GAAaD,IAAerW,EAAMzuB,GACjD,GAAI8kC,IAAe/oC,EAAgBmsC,WAAWzkC,IAAU0kC,GAAY1kC,KAAWshC,GAAahpC,EAAgB5P,QAAQsX,GAChH,OAAO,CAEf,CACA,OAAO,CACX,CAhDY2kC,CAAYP,EAAUlwC,GAAQ,CAC9Bm5B,EAAO/tB,SAAU,EACjByM,EAAUzT,EAAgBmsC,WAAW14B,GAAWA,IAAYA,EAC5D,MAAM64B,EAAc1uC,KAAKiS,eAAeF,EAAQ8D,EAASs4B,GACzDhlC,EAAU/G,EAAgBusC,eAAeT,EAAUr4B,EAAS64B,EAChE,CACA,IAAK,MAAMroC,KAAQrI,EACfm5B,EAAO9wB,GAAQ8C,EAAQ9C,GAE3B,OAAO8wB,CACX,CACHllB,eAAeF,EAAQ8D,EAASc,EAAW,CACpC,IACDi4B,GACC,MAAM,SAAEV,GAAcE,GAAYpuC,KAAKutC,eAAgBx7B,EAAQ4E,GAC/D,OAAOvU,EAAgBmG,SAASsN,GAAWzT,EAAgBusC,eAAeT,EAAUr4B,OAASpkB,EAAWm9C,GAAsBV,CAClI,EAEJ,SAASE,GAAYS,EAAe98B,EAAQ4E,GACxC,IAAIL,EAAQu4B,EAAcnqC,IAAIqN,GACzBuE,IACDA,EAAQ,IAAI9T,IACZqsC,EAAchqC,IAAIkN,EAAQuE,IAE9B,MAAMC,EAAWI,EAASixB,OAC1B,IAAIn6B,EAAS6I,EAAM5R,IAAI6R,GASvB,OARK9I,IAEDA,EAAS,CACLygC,SAFa9rC,EAAgB0sC,gBAAgB/8B,EAAQ4E,GAGrDw3B,YAAax3B,EAASxJ,QAAQxM,IAAKA,EAAE9B,cAAc2xB,SAAS,YAEhEla,EAAMzR,IAAI0R,EAAU9I,IAEjBA,CACX,CACA,MAAM+gC,GAAe1kC,GAAQ1H,EAAgBmG,SAASuB,IAAU1L,OAAOwK,oBAAoBkB,GAAO1E,QAAO,CAACC,EAAKwD,IAAMxD,GAAOjD,EAAgBmsC,WAAWzkC,EAAMjB,MAAO,GAgB9JkmC,GAAkB,CACpB,MACA,SACA,OACA,QACA,aAEJ,SAASC,GAAqB3kB,EAAU7d,GACpC,MAAoB,QAAb6d,GAAmC,WAAbA,IAAgE,IAAvC0kB,GAAgBpxB,QAAQ0M,IAA6B,MAAT7d,CACtG,CACA,SAASyiC,GAAcC,EAAIC,GACvB,OAAO,SAAS9+C,EAAGC,GACf,OAAOD,EAAE6+C,KAAQ5+C,EAAE4+C,GAAM7+C,EAAE8+C,GAAM7+C,EAAE6+C,GAAM9+C,EAAE6+C,GAAM5+C,EAAE4+C,EACvD,CACJ,CACA,SAASE,GAAqBv5B,GAC1B,MAAMjT,EAAQiT,EAAQjT,MAChB4F,EAAmB5F,EAAMuG,QAAQT,UACvC9F,EAAM26B,cAAc,eACpBn7B,EAAgBi4B,SAAS7xB,GAAoBA,EAAiB6mC,WAAY,CACtEx5B,GACDjT,EACP,CACA,SAAS0sC,GAAoBz5B,GACzB,MAAMjT,EAAQiT,EAAQjT,MAChB4F,EAAmB5F,EAAMuG,QAAQT,UACvCtG,EAAgBi4B,SAAS7xB,GAAoBA,EAAiB+mC,WAAY,CACtE15B,GACDjT,EACP,CACC,SAAS4sC,GAAUtrC,GAShB,OARI9B,EAAgB+zB,mBAAqC,iBAATjyB,EAC5CA,EAAOqvB,SAASkc,eAAevrC,GACxBA,GAAQA,EAAK/S,SACpB+S,EAAOA,EAAK,IAEZA,GAAQA,EAAK+sB,SACb/sB,EAAOA,EAAK+sB,QAET/sB,CACX,CACA,MAAMwrC,GAAY,CAAC,EACbC,GAAY9mC,IACd,MAAMooB,EAASue,GAAU3mC,GACzB,OAAOzK,OAAO6K,OAAOymC,IAAWviC,QAAQ5c,GAAIA,EAAE0gC,SAAWA,IAAQ1sB,KAAK,EAE1E,SAASqrC,GAAgBxvC,EAAKmD,EAAO8U,GACjC,MAAMla,EAAOC,OAAOD,KAAKiC,GACzB,IAAK,MAAMyI,KAAO1K,EAAK,CACnB,MAAM0xC,GAAUhnC,EAChB,GAAIgnC,GAAUtsC,EAAO,CACjB,MAAMuG,EAAQ1J,EAAIyI,UACXzI,EAAIyI,IACPwP,EAAO,GAAKw3B,EAAStsC,KACrBnD,EAAIyvC,EAASx3B,GAAQvO,EAE7B,CACJ,CACJ,CAqBA,MAAM7H,GACF2L,gBAAkBxL,EAAgBqG,SAClCmF,iBAAmB8hC,GACnB9hC,iBAAmBxL,EAAgBimC,UACnCz6B,gBAAkB6a,GAClB7a,eAtFU,QAuFVA,gBAAkB+hC,GAClB/hC,mBAAmB3J,GACfwkB,GAASvjB,OAAOjB,GAChB6rC,IACJ,CACAliC,qBAAqB3J,GACjBwkB,GAAS/iB,UAAUzB,GACnB6rC,IACJ,CACAjwC,YAAYqE,EAAM6rC,GACd,MAAM5nC,EAASnI,KAAKmI,OAAS,IAAIglC,GAAO4C,GAClCC,EAAgBR,GAAUtrC,GAC1B+rC,EAAgBN,GAASK,GAC/B,GAAIC,EACA,MAAM,IAAIpnB,MAAM,4CAA+ConB,EAAcrjC,GAA7D,kDAA6HqjC,EAAchf,OAAOrkB,GAAK,oBAE3K,MAAMzD,EAAUhB,EAAO8J,eAAe9J,EAAO8lC,oBAAqBjuC,KAAKkS,cACvElS,KAAKwtC,SAAW,IAAKrlC,EAAOqlC,UAAYtX,GAAgB8Z,IACxDhwC,KAAKwtC,SAAS/b,aAAatpB,GAC3B,MAAM0N,EAAU7V,KAAKwtC,SAASxc,eAAegf,EAAe7mC,EAAQwX,aAC9DsQ,EAASpb,GAAWA,EAAQob,OAC5B5T,EAAS4T,GAAUA,EAAO5T,OAC1BC,EAAQ2T,GAAUA,EAAO3T,MAC/Btd,KAAK4M,GAAKxK,EAAgB8tC,MAC1BlwC,KAAK8N,IAAM+H,EACX7V,KAAKixB,OAASA,EACdjxB,KAAKsd,MAAQA,EACbtd,KAAKqd,OAASA,EACdrd,KAAKmwC,SAAWhnC,EAChBnJ,KAAKowC,aAAepwC,KAAK2gB,YACzB3gB,KAAKgvB,QAAU,GACfhvB,KAAKqwC,UAAY,GACjBrwC,KAAKqM,aAAU5a,EACfuO,KAAKmuB,MAAQ,GACbnuB,KAAKi0B,6BAA0BxiC,EAC/BuO,KAAKuV,eAAY9jB,EACjBuO,KAAKoE,QAAU,GACfpE,KAAKswC,gBAAa7+C,EAClBuO,KAAKuwC,WAAa,CAAC,EAClBvwC,KAAKwwC,0BAAuB/+C,EAC7BuO,KAAKywC,gBAAkB,GACvBzwC,KAAKkN,OAAS,CAAC,EACflN,KAAK0wC,SAAW,IAAI5G,GACpB9pC,KAAK81B,SAAW,CAAC,EACjB91B,KAAK2wC,eAAiB,CAAC,EACvB3wC,KAAK4wC,UAAW,EAChB5wC,KAAKoX,yBAAsB3lB,EAC3BuO,KAAK0O,cAAWjd,EAChBuO,KAAK6wC,UAAYzuC,EAAgB0uC,UAAU9lC,GAAOhL,KAAKwH,OAAOwD,IAAO7B,EAAQ4nC,aAAe,GAC5F/wC,KAAK4Y,aAAe,GACpB82B,GAAU1vC,KAAK4M,IAAM5M,KAChB6V,GAAYob,GAIjBrrB,EAASd,OAAO9E,KAAM,WAAYovC,IAClCxpC,EAASd,OAAO9E,KAAM,WAAYsvC,IAClCtvC,KAAKgxC,cACDhxC,KAAK4wC,UACL5wC,KAAKwH,UAPL4H,QAAQ68B,MAAM,oEAStB,CACItrB,kBACA,MAAQxX,SAAS,YAAEwX,EAAY,oBAAEswB,GAAuB,MAAE3zB,EAAM,OAAED,EAAO,aAAE+yB,GAAkBpwC,KAC7F,OAAKoC,EAAgB2a,cAAc4D,GAG/BswB,GAAuBb,EAChBA,EAEJ/yB,EAASC,EAAQD,EAAS,KALtBsD,CAMf,CACIhQ,WACA,OAAO3Q,KAAKmI,OAAOwI,IACvB,CACIA,SAAKA,GACL3Q,KAAKmI,OAAOwI,KAAOA,CACvB,CACIxH,cACA,OAAOnJ,KAAKmwC,QAChB,CACIhnC,YAAQA,GACRnJ,KAAKmI,OAAOgB,QAAUA,CAC1B,CACIsf,eACA,OAAOA,EACX,CACHuoB,cASO,OARAhxC,KAAKu9B,cAAc,cACfv9B,KAAKmJ,QAAQ+nC,WACblxC,KAAKg0B,SAEL5xB,EAAgB+uC,YAAYnxC,KAAMA,KAAKmJ,QAAQ4qB,kBAEnD/zB,KAAKoxC,aACLpxC,KAAKu9B,cAAc,aACZv9B,IACX,CACA0tC,QAEI,OADAtrC,EAAgBivC,YAAYrxC,KAAKixB,OAAQjxB,KAAK8N,KACvC9N,IACX,CACAwF,OAEI,OADAI,EAASJ,KAAKxF,MACPA,IACX,CACHg0B,OAAO1W,EAAOD,GACFzX,EAAS5B,QAAQhE,MAGlBA,KAAKsxC,kBAAoB,CACrBh0B,QACAD,UAJJrd,KAAKuxC,QAAQj0B,EAAOD,EAO5B,CACAk0B,QAAQj0B,EAAOD,GACX,MAAMlU,EAAUnJ,KAAKmJ,QACf8nB,EAASjxB,KAAKixB,OACdtQ,EAAcxX,EAAQ8nC,qBAAuBjxC,KAAK2gB,YAClD6wB,EAAUxxC,KAAKwtC,SAASjc,eAAeN,EAAQ3T,EAAOD,EAAQsD,GAC9D8wB,EAAWtoC,EAAQ4qB,kBAAoB/zB,KAAKwtC,SAASlc,sBACrDtmB,EAAOhL,KAAKsd,MAAQ,SAAW,SACrCtd,KAAKsd,MAAQk0B,EAAQl0B,MACrBtd,KAAKqd,OAASm0B,EAAQn0B,OACtBrd,KAAKowC,aAAepwC,KAAK2gB,YACpBve,EAAgB+uC,YAAYnxC,KAAMyxC,GAAU,KAGjDzxC,KAAKu9B,cAAc,SAAU,CACzBxzB,KAAMynC,IAEVpvC,EAAgBi4B,SAASlxB,EAAQuoC,SAAU,CACvC1xC,KACAwxC,GACDxxC,MACCA,KAAK4wC,UACD5wC,KAAK6wC,UAAU7lC,IACfhL,KAAK2xC,SAGjB,CACAC,sBACI,MACMC,EADU7xC,KAAKmJ,QACS+D,QAAU,CAAC,EACzC9K,EAAgB+tB,KAAK0hB,GAAe,CAACC,EAAavL,KAC9CuL,EAAYllC,GAAK25B,CAAM,GAE/B,CACHwL,sBACO,MAAM5oC,EAAUnJ,KAAKmJ,QACf6oC,EAAY7oC,EAAQ+D,OACpBA,EAASlN,KAAKkN,OACd+kC,EAAU7zC,OAAOD,KAAK+O,GAAQ9H,QAAO,CAAChF,EAAKwM,KAC7CxM,EAAIwM,IAAM,EACHxM,IACR,CAAC,GACJ,IAAI6D,EAAQ,GACR+tC,IACA/tC,EAAQA,EAAMuV,OAAOpb,OAAOD,KAAK6zC,GAAWv/C,KAAKma,IAC7C,MAAM8+B,EAAesG,EAAUplC,GACzBJ,EAAOi/B,GAAc7+B,EAAI8+B,GACzBwG,EAAoB,MAAT1lC,EACXmQ,EAAwB,MAATnQ,EACrB,MAAO,CACHrD,QAASuiC,EACTyG,UAAWD,EAAW,YAAcv1B,EAAe,SAAW,OAC9Dy1B,MAAOF,EAAW,eAAiBv1B,EAAe,WAAa,SAClE,MAGTva,EAAgB+tB,KAAKlsB,GAAQC,IACzB,MAAMwnC,EAAexnC,EAAKiF,QACpByD,EAAK8+B,EAAa9+B,GAClBJ,EAAOi/B,GAAc7+B,EAAI8+B,GACzB2G,EAAYjwC,EAAgByN,eAAe67B,EAAa5rC,KAAMoE,EAAKkuC,YAC3C3gD,IAA1Bi6C,EAAarhB,UAA0B2kB,GAAqBtD,EAAarhB,SAAU7d,KAAUwiC,GAAqB9qC,EAAKiuC,aACvHzG,EAAarhB,SAAWnmB,EAAKiuC,WAEjCF,EAAQrlC,IAAM,EACd,IAAI3C,EAAQ,KACR2C,KAAMM,GAAUA,EAAON,GAAI9M,OAASuyC,EACpCpoC,EAAQiD,EAAON,IAGf3C,EAAQ,IADWwe,GAASugB,SAASqJ,GAC7B,CAAe,CACnBzlC,KACA9M,KAAMuyC,EACNvkC,IAAK9N,KAAK8N,IACVlL,MAAO5C,OAEXkN,EAAOjD,EAAM2C,IAAM3C,GAEvBA,EAAMgf,KAAKyiB,EAAcviC,EAAQ,IAErC/G,EAAgB+tB,KAAK8hB,GAAS,CAACK,EAAY1lC,KAClC0lC,UACMplC,EAAON,EAClB,IAEJxK,EAAgB+tB,KAAKjjB,GAASjD,IAC1B6kB,GAAQxmB,UAAUtI,KAAMiK,EAAOA,EAAMd,SACrC2lB,GAAQC,OAAO/uB,KAAMiK,EAAM,GAEnC,CACHsoC,kBACO,MAAM/nC,EAAWxK,KAAKqwC,UAChBn4B,EAAUlY,KAAK2Q,KAAKC,SAASzf,OAC7B8mB,EAAUzN,EAASrZ,OAEzB,GADAqZ,EAASkP,MAAK,CAACrpB,EAAGC,IAAID,EAAEsa,MAAQra,EAAEqa,QAC9BsN,EAAUC,EAAS,CACnB,IAAI,IAAI/lB,EAAI+lB,EAAS/lB,EAAI8lB,IAAW9lB,EAChC6N,KAAKwyC,oBAAoBrgD,GAE7BqY,EAASiO,OAAOP,EAASD,EAAUC,EACvC,CACAlY,KAAKywC,gBAAkBjmC,EAASioC,MAAM,GAAG/4B,KAAKu1B,GAAc,QAAS,SACzE,CACHyD,8BACO,MAAQrC,UAAW7lC,EAAWmG,MAAM,SAAEC,IAAiB5Q,KACnDwK,EAASrZ,OAASyf,EAASzf,eACpB6O,KAAKqM,QAEhB7B,EAASrH,SAAQ,CAACmI,EAAMX,KACqC,IAArDiG,EAASzD,QAAQ7Z,GAAIA,IAAMgY,EAAKua,WAAU10B,QAC1C6O,KAAKwyC,oBAAoB7nC,EAC7B,GAER,CACAgoC,2BACI,MAAMC,EAAiB,GACjBhiC,EAAW5Q,KAAK2Q,KAAKC,SAC3B,IAAIze,EAAGuY,EAEP,IADA1K,KAAK0yC,8BACDvgD,EAAI,EAAGuY,EAAOkG,EAASzf,OAAQgB,EAAIuY,EAAMvY,IAAI,CAC7C,MAAMod,EAAUqB,EAASze,GACzB,IAAImZ,EAAOtL,KAAK6Q,eAAe1e,GAC/B,MAAM2N,EAAOyP,EAAQzP,MAAQE,KAAKmI,OAAOrI,KAWzC,GAVIwL,EAAKxL,MAAQwL,EAAKxL,OAASA,IAC3BE,KAAKwyC,oBAAoBrgD,GACzBmZ,EAAOtL,KAAK6Q,eAAe1e,IAE/BmZ,EAAKxL,KAAOA,EACZwL,EAAK4E,UAAYX,EAAQW,WAAao7B,GAAaxrC,EAAME,KAAKmJ,SAC9DmC,EAAKunC,MAAQtjC,EAAQsjC,OAAS,EAC9BvnC,EAAKX,MAAQxY,EACbmZ,EAAKoJ,MAAQ,GAAKnF,EAAQmF,MAC1BpJ,EAAKwnC,QAAU9yC,KAAKsiB,iBAAiBnwB,GACjCmZ,EAAKY,WACLZ,EAAKY,WAAWoD,YAAYnd,GAC5BmZ,EAAKY,WAAW6C,iBACb,CACH,MAAMgkC,EAAkBtqB,GAASogB,cAAc/oC,IACzC,mBAAE8O,EAAmB,gBAAEC,GAAqBzM,EAAgBqG,SAASmI,SAAS9Q,GACpF1B,OAAOqB,OAAOszC,EAAiB,CAC3BlkC,gBAAiB4Z,GAASC,WAAW7Z,GACrCD,mBAAoBA,GAAsB6Z,GAASC,WAAW9Z,KAElEtD,EAAKY,WAAa,IAAI6mC,EAAgB/yC,KAAM7N,GAC5CygD,EAAe3tC,KAAKqG,EAAKY,WAC7B,CACJ,CAEA,OADAlM,KAAKuyC,kBACEK,CACX,CACHI,iBACO5wC,EAAgB+tB,KAAKnwB,KAAK2Q,KAAKC,UAAU,CAACrB,EAAStE,KAC/CjL,KAAK6Q,eAAe5F,GAAciB,WAAW8E,OAAO,GACrDhR,KACP,CACHgR,QACOhR,KAAKgzC,iBACLhzC,KAAKu9B,cAAc,QACvB,CACA/1B,OAAOwD,GACH,MAAM7C,EAASnI,KAAKmI,OACpBA,EAAOX,SACP,MAAM2B,EAAUnJ,KAAKmwC,SAAWhoC,EAAO8J,eAAe9J,EAAO8lC,oBAAqBjuC,KAAKkS,cACjF+gC,EAAgBjzC,KAAKoX,qBAAuBjO,EAAQT,UAK1D,GAJA1I,KAAKkzC,gBACLlzC,KAAKmzC,sBACLnzC,KAAKozC,uBACLpzC,KAAK0wC,SAASnG,cAIP,IAHHvqC,KAAKu9B,cAAc,eAAgB,CACnCvyB,OACAs/B,YAAY,IAEZ,OAEJ,MAAMsI,EAAiB5yC,KAAK2yC,2BAC5B3yC,KAAKu9B,cAAc,wBACnB,IAAInO,EAAa,EACjB,IAAI,IAAIj9B,EAAI,EAAGuY,EAAO1K,KAAK2Q,KAAKC,SAASzf,OAAQgB,EAAIuY,EAAMvY,IAAI,CAC3D,MAAM,WAAE+Z,GAAgBlM,KAAK6Q,eAAe1e,GACtC6e,GAASiiC,IAAyD,IAAxCL,EAAej1B,QAAQzR,GACvDA,EAAWsF,sBAAsBR,GACjCoe,EAAa7/B,KAAKC,KAAK0c,EAAWsI,iBAAkB4a,EACxD,CACAA,EAAapvB,KAAKqzC,YAAclqC,EAAQikB,OAAOkmB,YAAclkB,EAAa,EAC1EpvB,KAAKuzC,cAAcnkB,GACd6jB,GACD7wC,EAAgB+tB,KAAKyiB,GAAiB1mC,IAClCA,EAAW8E,OAAO,IAG1BhR,KAAKwzC,gBAAgBxoC,GACrBhL,KAAKu9B,cAAc,cAAe,CAC9BvyB,SAEJhL,KAAKgvB,QAAQtV,KAAKu1B,GAAc,IAAK,SACrC,MAAM,QAAE7qC,EAAQ,WAAEksC,GAAgBtwC,KAC9BswC,EACAtwC,KAAKyzC,cAAcnD,GAAY,GACxBlsC,EAAQjT,QACf6O,KAAK0zC,mBAAmBtvC,EAASA,GAAS,GAE9CpE,KAAK2xC,QACT,CACHuB,gBACO9wC,EAAgB+tB,KAAKnwB,KAAKkN,QAASjD,IAC/B6kB,GAAQI,UAAUlvB,KAAMiK,EAAM,IAElCjK,KAAK4xC,sBACL5xC,KAAK+xC,qBACT,CACHoB,sBACO,MAAMhqC,EAAUnJ,KAAKmJ,QACfwqC,EAAiB,IAAI5G,IAAI3uC,OAAOD,KAAK6B,KAAKuwC,aAC1CqD,EAAY,IAAI7G,IAAI5jC,EAAQ0qC,QAC7BzxC,EAAgB0xC,UAAUH,EAAgBC,MAAgB5zC,KAAKwwC,uBAAyBrnC,EAAQ+nC,aACjGlxC,KAAK+zC,eACL/zC,KAAKoxC,aAEb,CACHgC,uBACO,MAAM,eAAEzC,GAAoB3wC,KACtBg0C,EAAUh0C,KAAKi0C,0BAA4B,GACjD,IAAK,MAAM,OAAEhsC,EAAO,MAAE1E,EAAM,MAAE8O,KAAY2hC,EAEtCpE,GAAgBe,EAAgBptC,EADR,oBAAX0E,GAAgCoK,EAAQA,EAG7D,CACH4hC,yBACO,MAAMr7B,EAAe5Y,KAAK4Y,aAC1B,IAAKA,IAAiBA,EAAaznB,OAC/B,OAEJ6O,KAAK4Y,aAAe,GACpB,MAAMs7B,EAAel0C,KAAK2Q,KAAKC,SAASzf,OAClCgjD,EAAWxT,GAAM,IAAIoM,IAAIn0B,EAAazL,QAAQ5c,GAAIA,EAAE,KAAOowC,IAAKluC,KAAI,CAAClC,EAAG4B,IAAIA,EAAI,IAAM5B,EAAEkoB,OAAO,GAAGmvB,KAAK,QACvGwM,EAAYD,EAAQ,GAC1B,IAAI,IAAIhiD,EAAI,EAAGA,EAAI+hD,EAAc/hD,IAC7B,IAAKiQ,EAAgB0xC,UAAUM,EAAWD,EAAQhiD,IAC9C,OAGR,OAAOI,MAAM4M,KAAKi1C,GAAW3hD,KAAKlC,GAAIA,EAAEk3C,MAAM,OAAMh1C,KAAKpC,IAAI,CACrD4X,OAAQ5X,EAAE,GACVkT,OAAQlT,EAAE,GACVgiB,OAAQhiB,EAAE,MAEtB,CACHkjD,cAAcnkB,GACP,IAEO,IAFHpvB,KAAKu9B,cAAc,eAAgB,CACnC+M,YAAY,IAEZ,OAEJxb,GAAQtnB,OAAOxH,KAAMA,KAAKsd,MAAOtd,KAAKqd,OAAQ+R,GAC9C,MAAM9Z,EAAOtV,KAAKuV,UACZ8+B,EAAS/+B,EAAKgI,OAAS,GAAKhI,EAAK+H,QAAU,EACjDrd,KAAKgvB,QAAU,GACf5sB,EAAgB+tB,KAAKnwB,KAAKmuB,OAAQxB,IAC1B0nB,GAA2B,cAAjB1nB,EAAItC,WAGdsC,EAAIrkB,WACJqkB,EAAIrkB,YAERtI,KAAKgvB,QAAQ/pB,QAAQ0nB,EAAIqC,WAAU,GACpChvB,MACHA,KAAKgvB,QAAQ7rB,SAAQ,CAACe,EAAMyG,KACxBzG,EAAKowC,KAAO3pC,CAAK,IAErB3K,KAAKu9B,cAAc,cACvB,CACHiW,gBAAgBxoC,GACT,IAGO,IAHHhL,KAAKu9B,cAAc,uBAAwB,CAC3CvyB,OACAs/B,YAAY,IAFhB,CAMA,IAAI,IAAIn4C,EAAI,EAAGuY,EAAO1K,KAAK2Q,KAAKC,SAASzf,OAAQgB,EAAIuY,IAAQvY,EACzD6N,KAAK6Q,eAAe1e,GAAG+Z,WAAW5D,YAEtC,IAAI,IAAInW,EAAI,EAAGuY,EAAO1K,KAAK2Q,KAAKC,SAASzf,OAAQgB,EAAIuY,IAAQvY,EACzD6N,KAAKu0C,eAAepiD,EAAGiQ,EAAgBmsC,WAAWvjC,GAAQA,EAAK,CAC3DC,aAAc9Y,IACb6Y,GAEThL,KAAKu9B,cAAc,sBAAuB,CACtCvyB,QAVJ,CAYJ,CACHupC,eAAe5pC,EAAOK,GACf,MAAMM,EAAOtL,KAAK6Q,eAAelG,GAC3BgO,EAAO,CACTrN,OACAX,QACAK,OACAs/B,YAAY,IAEwC,IAApDtqC,KAAKu9B,cAAc,sBAAuB5kB,KAG9CrN,EAAKY,WAAWtI,QAAQoH,GACxB2N,EAAK2xB,YAAa,EAClBtqC,KAAKu9B,cAAc,qBAAsB5kB,GAC7C,CACAg5B,UAGW,IAFH3xC,KAAKu9B,cAAc,eAAgB,CACnC+M,YAAY,MAIZ1kC,EAAST,IAAInF,MACTA,KAAK4wC,WAAahrC,EAAS5B,QAAQhE,OACnC4F,EAASrC,MAAMvD,OAGnBA,KAAKmE,OACLirC,GAAqB,CACjBxsC,MAAO5C,QAGnB,CACAmE,OACI,IAAIhS,EACJ,GAAI6N,KAAKsxC,kBAAmB,CACxB,MAAM,MAAEh0B,EAAM,OAAED,GAAYrd,KAAKsxC,kBACjCtxC,KAAKuxC,QAAQj0B,EAAOD,GACpBrd,KAAKsxC,kBAAoB,IAC7B,CAEA,GADAtxC,KAAK0tC,QACD1tC,KAAKsd,OAAS,GAAKtd,KAAKqd,QAAU,EAClC,OAEJ,IAEO,IAFHrd,KAAKu9B,cAAc,aAAc,CACjC+M,YAAY,IAEZ,OAEJ,MAAMkK,EAASx0C,KAAKgvB,QACpB,IAAI78B,EAAI,EAAGA,EAAIqiD,EAAOrjD,QAAUqjD,EAAOriD,GAAG88B,GAAK,IAAK98B,EAChDqiD,EAAOriD,GAAGgS,KAAKnE,KAAKuV,WAGxB,IADAvV,KAAKy0C,gBACCtiD,EAAIqiD,EAAOrjD,SAAUgB,EACvBqiD,EAAOriD,GAAGgS,KAAKnE,KAAKuV,WAExBvV,KAAKu9B,cAAc,YACvB,CACH9yB,uBAAuBF,GAChB,MAAMC,EAAWxK,KAAKywC,gBAChBtZ,EAAS,GACf,IAAIhlC,EAAGuY,EACP,IAAIvY,EAAI,EAAGuY,EAAOF,EAASrZ,OAAQgB,EAAIuY,IAAQvY,EAAE,CAC7C,MAAMmZ,EAAOd,EAASrY,GACjBoY,IAAiBe,EAAKwnC,SACvB3b,EAAOlyB,KAAKqG,EAEpB,CACA,OAAO6rB,CACX,CACH5M,+BACO,OAAOvqB,KAAKyK,wBAAuB,EACvC,CACHgqC,gBACO,IAEO,IAFHz0C,KAAKu9B,cAAc,qBAAsB,CACzC+M,YAAY,IAEZ,OAEJ,MAAM9/B,EAAWxK,KAAKuqB,+BACtB,IAAI,IAAIp4B,EAAIqY,EAASrZ,OAAS,EAAGgB,GAAK,IAAKA,EACvC6N,KAAK00C,aAAalqC,EAASrY,IAE/B6N,KAAKu9B,cAAc,oBACvB,CACHmX,aAAappC,GACN,MAAMwC,EAAM9N,KAAK8N,IACXqH,EAAO7J,EAAKsJ,MACZ+/B,GAAWx/B,EAAKF,SAChBK,EA/fd,SAAwBhK,GACpB,MAAM,OAAEiF,EAAO,OAAEE,GAAYnF,EAC7B,GAAIiF,GAAUE,EACV,MAAO,CACHuE,KAAMzE,EAAOyE,KACbF,MAAOvE,EAAOuE,MACdD,IAAKpE,EAAOoE,IACZE,OAAQtE,EAAOsE,OAG3B,CAqfqB6/B,CAAetpC,IAAStL,KAAKuV,UACpCoD,EAAO,CACTrN,OACAX,MAAOW,EAAKX,MACZ2/B,YAAY,IAEsC,IAAlDtqC,KAAKu9B,cAAc,oBAAqB5kB,KAGxCg8B,GACAvyC,EAAgBujC,SAAS73B,EAAK,CAC1BkH,MAAoB,IAAdG,EAAKH,KAAiB,EAAIM,EAAKN,KAAOG,EAAKH,KACjDF,OAAsB,IAAfK,EAAKL,MAAkB9U,KAAKsd,MAAQhI,EAAKR,MAAQK,EAAKL,MAC7DD,KAAkB,IAAbM,EAAKN,IAAgB,EAAIS,EAAKT,IAAMM,EAAKN,IAC9CE,QAAwB,IAAhBI,EAAKJ,OAAmB/U,KAAKqd,OAAS/H,EAAKP,OAASI,EAAKJ,SAGzEzJ,EAAKY,WAAW/H,OACZwwC,GACAvyC,EAAgB0jC,WAAWh4B,GAE/B6K,EAAK2xB,YAAa,EAClBtqC,KAAKu9B,cAAc,mBAAoB5kB,GAC3C,CACHgS,cAAc9K,GACP,OAAOzd,EAAgBwoB,eAAe/K,EAAO7f,KAAKuV,UAAWvV,KAAKqzC,YACtE,CACAwB,0BAA0BpkD,EAAGua,EAAM7B,EAASshB,GACxC,MAAMxiB,EAASikB,EAAYC,MAAMnhB,GACjC,MAAsB,mBAAX/C,EACAA,EAAOjI,KAAMvP,EAAG0Y,EAASshB,GAE7B,EACX,CACA5Z,eAAe5F,GACX,MAAMsE,EAAUvP,KAAK2Q,KAAKC,SAAS3F,GAC7BT,EAAWxK,KAAKqwC,UACtB,IAAI/kC,EAAOd,EAAS2C,QAAQ7Z,GAAIA,GAAKA,EAAEuyB,WAAatW,IAAShL,MAkB7D,OAjBK+G,IACDA,EAAO,CACHxL,KAAM,KACN6Q,KAAM,GACNpB,QAAS,KACTrD,WAAY,KACZ0H,OAAQ,KACRhE,QAAS,KACTG,QAAS,KACT8iC,MAAOtjC,GAAWA,EAAQsjC,OAAS,EACnCloC,MAAOM,EACP4a,SAAUtW,EACVjC,QAAS,GACTiF,SAAS,GAEb/H,EAASvF,KAAKqG,IAEXA,CACX,CACA4G,aACI,OAAOlS,KAAK0O,WAAa1O,KAAK0O,SAAWtM,EAAgB2T,cAAc,KAAM,CACzEnT,MAAO5C,KACPF,KAAM,UAEd,CACA2nB,yBACI,OAAOznB,KAAKuqB,+BAA+Bp5B,MAC/C,CACAmxB,iBAAiBrX,GACb,MAAMsE,EAAUvP,KAAK2Q,KAAKC,SAAS3F,GACnC,IAAKsE,EACD,OAAO,EAEX,MAAMjE,EAAOtL,KAAK6Q,eAAe5F,GACjC,MAA8B,kBAAhBK,EAAKsI,QAAwBtI,EAAKsI,QAAUrE,EAAQqE,MACtE,CACAkhC,qBAAqB7pC,EAAc6nC,GAClB9yC,KAAK6Q,eAAe5F,GAC5B2I,QAAUk/B,CACnB,CACAnxB,qBAAqBhX,GACjB3K,KAAK2wC,eAAehmC,IAAU3K,KAAK2wC,eAAehmC,EACtD,CACA6T,kBAAkB7T,GACd,OAAQ3K,KAAK2wC,eAAehmC,EAChC,CACHoqC,kBAAkB9pC,EAAc+K,EAAW88B,GACpC,MAAM9nC,EAAO8nC,EAAU,OAAS,OAC1BxnC,EAAOtL,KAAK6Q,eAAe5F,GAC3BpI,EAAQyI,EAAKY,WAAW2K,wBAAmBplB,EAAWuZ,GACxD5I,EAAgBqU,QAAQT,IACxB1K,EAAKqF,KAAKqF,GAAWpC,QAAUk/B,EAC/B9yC,KAAKwH,WAELxH,KAAK80C,qBAAqB7pC,EAAc6nC,GACxCjwC,EAAM2E,OAAO8D,EAAM,CACfwnC,YAEJ9yC,KAAKwH,QAAQsG,GAAMA,EAAI7C,eAAiBA,EAAeD,OAAOvZ,IAEtE,CACAujD,KAAK/pC,EAAc+K,GACfhW,KAAK+0C,kBAAkB9pC,EAAc+K,GAAW,EACpD,CACAi/B,KAAKhqC,EAAc+K,GACfhW,KAAK+0C,kBAAkB9pC,EAAc+K,GAAW,EACpD,CACHw8B,oBAAoBvnC,GACb,MAAMK,EAAOtL,KAAKqwC,UAAUplC,GACxBK,GAAQA,EAAKY,YACbZ,EAAKY,WAAW+E,kBAEbjR,KAAKqwC,UAAUplC,EAC1B,CACAiqC,QACI,IAAI/iD,EAAGuY,EAGP,IAFA1K,KAAKwF,OACLI,EAASF,OAAO1F,MACZ7N,EAAI,EAAGuY,EAAO1K,KAAK2Q,KAAKC,SAASzf,OAAQgB,EAAIuY,IAAQvY,EACrD6N,KAAKwyC,oBAAoBrgD,EAEjC,CACAgjD,UACIn1C,KAAKu9B,cAAc,iBACnB,MAAM,OAAEtM,EAAO,IAAEnjB,GAAS9N,KAC1BA,KAAKk1C,QACLl1C,KAAKmI,OAAOslC,aACRxc,IACAjxB,KAAK+zC,eACL3xC,EAAgBivC,YAAYpgB,EAAQnjB,GACpC9N,KAAKwtC,SAAStc,eAAepjB,GAC7B9N,KAAKixB,OAAS,KACdjxB,KAAK8N,IAAM,aAER4hC,GAAU1vC,KAAK4M,IACtB5M,KAAKu9B,cAAc,eACvB,CACA6X,iBAAiBz8B,GACb,OAAO3Y,KAAKixB,OAAOokB,aAAa18B,EACpC,CACHy4B,aACOpxC,KAAKs1C,iBACDt1C,KAAKmJ,QAAQ+nC,WACblxC,KAAKu1C,uBAELv1C,KAAK4wC,UAAW,CAExB,CACH0E,iBACO,MAAMtyC,EAAYhD,KAAKuwC,WACjB/C,EAAWxtC,KAAKwtC,SAChBgI,EAAO,CAAC11C,EAAMsxB,KAChBoc,EAASrc,iBAAiBnxB,KAAMF,EAAMsxB,GACtCpuB,EAAUlD,GAAQsxB,CAAQ,EAExBA,EAAW,CAAC3gC,EAAG6C,EAAGoc,KACpBjf,EAAEqxB,QAAUxuB,EACZ7C,EAAEsxB,QAAUrS,EACZ1P,KAAKyzC,cAAchjD,EAAE,EAEzB2R,EAAgB+tB,KAAKnwB,KAAKmJ,QAAQ0qC,QAAS/zC,GAAO01C,EAAK11C,EAAMsxB,IACjE,CACHmkB,uBACYv1C,KAAKwwC,uBACNxwC,KAAKwwC,qBAAuB,CAAC,GAEjC,MAAMxtC,EAAYhD,KAAKwwC,qBACjBhD,EAAWxtC,KAAKwtC,SAChBgI,EAAO,CAAC11C,EAAMsxB,KAChBoc,EAASrc,iBAAiBnxB,KAAMF,EAAMsxB,GACtCpuB,EAAUlD,GAAQsxB,CAAQ,EAExBqkB,EAAU,CAAC31C,EAAMsxB,KACfpuB,EAAUlD,KACV0tC,EAASnc,oBAAoBrxB,KAAMF,EAAMsxB,UAClCpuB,EAAUlD,GACrB,EAEEsxB,EAAW,CAAC9T,EAAOD,KACjBrd,KAAKixB,QACLjxB,KAAKg0B,OAAO1W,EAAOD,EACvB,EAEJ,IAAIq4B,EACJ,MAAM9E,EAAW,KACb6E,EAAQ,SAAU7E,GAClB5wC,KAAK4wC,UAAW,EAChB5wC,KAAKg0B,SACLwhB,EAAK,SAAUpkB,GACfokB,EAAK,SAAUE,EAAS,EAE5BA,EAAW,KACP11C,KAAK4wC,UAAW,EAChB6E,EAAQ,SAAUrkB,GAClBpxB,KAAKk1C,QACLl1C,KAAKuxC,QAAQ,EAAG,GAChBiE,EAAK,SAAU5E,EAAS,EAExBpD,EAAShc,WAAWxxB,KAAKixB,QACzB2f,IAEA8E,GAER,CACH3B,eACO3xC,EAAgB+tB,KAAKnwB,KAAKuwC,YAAY,CAACnf,EAAUtxB,KAC7CE,KAAKwtC,SAASnc,oBAAoBrxB,KAAMF,EAAMsxB,EAAS,IAE3DpxB,KAAKuwC,WAAa,CAAC,EACnBnuC,EAAgB+tB,KAAKnwB,KAAKwwC,sBAAsB,CAACpf,EAAUtxB,KACvDE,KAAKwtC,SAASnc,oBAAoBrxB,KAAMF,EAAMsxB,EAAS,IAE3DpxB,KAAKwwC,0BAAuB/+C,CAChC,CACAkkD,iBAAiB1xC,EAAO+G,EAAMmxB,GAC1B,MAAMyZ,EAASzZ,EAAU,MAAQ,SACjC,IAAI7wB,EAAMpH,EAAM/R,EAAGuY,EAKnB,IAJa,YAATM,IACAM,EAAOtL,KAAK6Q,eAAe5M,EAAM,GAAGgH,cACpCK,EAAKY,WAAW,IAAM0pC,EAAS,wBAE/BzjD,EAAI,EAAGuY,EAAOzG,EAAM9S,OAAQgB,EAAIuY,IAAQvY,EAAE,CAC1C+R,EAAOD,EAAM9R,GACb,MAAM+Z,EAAahI,GAAQlE,KAAK6Q,eAAe3M,EAAK+G,cAAciB,WAC9DA,GACAA,EAAW0pC,EAAS,cAAc1xC,EAAKuR,QAASvR,EAAK+G,aAAc/G,EAAKyG,MAEhF,CACJ,CACHkrC,oBACO,OAAO71C,KAAKoE,SAAW,EAC3B,CACH0xC,kBAAkBC,GACX,MAAMC,EAAah2C,KAAKoE,SAAW,GAC7BmD,EAASwuC,EAAetjD,KAAI,EAAGwY,eAAeN,YAChD,MAAMW,EAAOtL,KAAK6Q,eAAe5F,GACjC,IAAKK,EACD,MAAM,IAAIud,MAAM,6BAA+B5d,GAEnD,MAAO,CACHA,eACAwK,QAASnK,EAAKqF,KAAKhG,GACnBA,QACH,KAEYvI,EAAgB6zC,eAAe1uC,EAAQyuC,KAEpDh2C,KAAKoE,QAAUmD,EACfvH,KAAKswC,WAAa,KAClBtwC,KAAK0zC,mBAAmBnsC,EAAQyuC,GAExC,CACHzY,cAAc0M,EAAMtxB,EAAMxL,GACnB,OAAOnN,KAAK0wC,SAAS1G,OAAOhqC,KAAMiqC,EAAMtxB,EAAMxL,EAClD,CACHgC,gBAAgB+mC,GACT,OAA6E,IAAtEl2C,KAAK0wC,SAASr3B,OAAOlM,QAAQxM,GAAIA,EAAE0pC,OAAOz9B,KAAOspC,IAAU/kD,MACtE,CACHuiD,mBAAmBnsC,EAAQyuC,EAAYG,GAChC,MAAMC,EAAep2C,KAAKmJ,QAAQktC,MAC5BjtB,EAAO,CAAC/4B,EAAGC,IAAID,EAAE8c,QAAQ7Z,IAAKhD,EAAE26C,MAAMv7B,GAAIpc,EAAE2X,eAAiByE,EAAEzE,cAAgB3X,EAAEqX,QAAU+E,EAAE/E,UAC7F2rC,EAAcltB,EAAK4sB,EAAYzuC,GAC/BgvC,EAAYJ,EAAS5uC,EAAS6hB,EAAK7hB,EAAQyuC,GAC7CM,EAAYnlD,QACZ6O,KAAK21C,iBAAiBW,EAAaF,EAAaprC,MAAM,GAEtDurC,EAAUplD,QAAUilD,EAAaprC,MACjChL,KAAK21C,iBAAiBY,EAAWH,EAAaprC,MAAM,EAE5D,CACHyoC,cAAchjD,EAAG0lD,GACV,MAAMx9B,EAAO,CACT5T,MAAOtU,EACP0lD,SACA7L,YAAY,EACZkM,YAAax2C,KAAK2qB,cAAcl6B,IAE9BgmD,EAAepM,IAAUA,EAAOlhC,QAAQ0qC,QAAU7zC,KAAKmJ,QAAQ0qC,QAAQrjB,SAAS//B,EAAEskC,OAAOj1B,MAC/F,IAA6D,IAAzDE,KAAKu9B,cAAc,cAAe5kB,EAAM89B,GACxC,OAEJ,MAAMnoB,EAAUtuB,KAAK02C,aAAajmD,EAAG0lD,EAAQx9B,EAAK69B,aAMlD,OALA79B,EAAK2xB,YAAa,EAClBtqC,KAAKu9B,cAAc,aAAc5kB,EAAM89B,IACnCnoB,GAAW3V,EAAK2V,UAChBtuB,KAAK2xC,SAEF3xC,IACX,CACH02C,aAAajmD,EAAG0lD,EAAQK,GACjB,MAAQpyC,QAAS4xC,EAAa,GAAG,QAAE7sC,GAAanJ,KAC1CyqB,EAAmB0rB,EACnB5uC,EAASvH,KAAK22C,mBAAmBlmD,EAAGulD,EAAYQ,EAAa/rB,GAC7DmsB,EAAUx0C,EAAgBy0C,cAAcpmD,GACxCqmD,EA5yBb,SAA4BrmD,EAAGqmD,EAAWN,EAAaI,GACpD,OAAKJ,GAA0B,aAAX/lD,EAAEqP,KAGlB82C,EACOE,EAEJrmD,EALI,IAMf,CAoyB0BsmD,CAAmBtmD,EAAGuP,KAAKswC,WAAYkG,EAAaI,GAClEJ,IACAx2C,KAAKswC,WAAa,KAClBluC,EAAgBi4B,SAASlxB,EAAQ6tC,QAAS,CACtCvmD,EACA8W,EACAvH,MACDA,MACC42C,GACAx0C,EAAgBi4B,SAASlxB,EAAQsY,QAAS,CACtChxB,EACA8W,EACAvH,MACDA,OAGX,MAAMsuB,GAAWlsB,EAAgB6zC,eAAe1uC,EAAQyuC,GAMxD,OALI1nB,GAAW6nB,KACXn2C,KAAKoE,QAAUmD,EACfvH,KAAK0zC,mBAAmBnsC,EAAQyuC,EAAYG,IAEhDn2C,KAAKswC,WAAawG,EACXxoB,CACX,CACHqoB,mBAAmBlmD,EAAGulD,EAAYQ,EAAa/rB,GACxC,GAAe,aAAXh6B,EAAEqP,KACF,MAAO,GAEX,IAAK02C,EACD,OAAOR,EAEX,MAAMI,EAAep2C,KAAKmJ,QAAQktC,MAClC,OAAOr2C,KAAK60C,0BAA0BpkD,EAAG2lD,EAAaprC,KAAMorC,EAAc3rB,EAC9E,EAEJ,SAASqlB,KACL,OAAO1tC,EAAgB+tB,KAAKluB,GAAMytC,WAAY9sC,GAAQA,EAAM8tC,SAASnG,cACzE,CAoDI,SAAS0M,GAAW7lD,EAAG8lD,EAAO5jD,EAAGoc,GACjC,MAAO,CACHpc,EAAGA,EAAIlC,EAAI7B,KAAK4zB,IAAI+zB,GACpBxnC,EAAGA,EAAIte,EAAI7B,KAAK8zB,IAAI6zB,GAE5B,CAcI,SAASC,GAAQrpC,EAAK2H,EAASyG,EAAQqE,EAASlW,EAAK6c,GACrD,MAAM,EAAE5zB,EAAE,EAAEoc,EAAIsT,WAAYzf,EAAM,YAAE6zC,EAAcx1B,YAAay1B,GAAY5hC,EACrEoM,EAActyB,KAAKC,IAAIimB,EAAQoM,YAActB,EAAUrE,EAASk7B,EAAa,GAC7Ex1B,EAAcy1B,EAAS,EAAIA,EAAS92B,EAAUrE,EAASk7B,EAAc,EAC3E,IAAIE,EAAgB,EACpB,MAAM9lD,EAAQ6Y,EAAM9G,EACpB,GAAIgd,EAAS,CAIT,MAEMg3B,IAFuBF,EAAS,EAAIA,EAAS92B,EAAU,IAChCsB,EAAc,EAAIA,EAActB,EAAU,IACI,EAE3E+2B,GAAiB9lD,GAD4B,IAAvB+lD,EAA2B/lD,EAAQ+lD,GAAsBA,EAAqBh3B,GAAW/uB,IACrE,CAC9C,CACA,MACMgmD,GAAehmD,EADRjC,KAAKC,IAAI,KAAOgC,EAAQqwB,EAAc3F,EAAS9Z,EAAgB4hB,IAAMnC,GAC7C,EAC/BmB,EAAazf,EAAQi0C,EAAcF,EACnCr0B,EAAW5Y,EAAMmtC,EAAcF,GAC/B,WAAEG,EAAW,SAAEC,EAAS,WAAEC,EAAW,SAAEC,GA/D7C,SAA6B3yB,EAAKrD,EAAaC,EAAag2B,GAC5D,MAAMC,GAXehuC,EAWKmb,EAAI9b,QAAQ4uC,aAV/B31C,EAAgB41C,kBAAkBluC,EAAO,CAC5C,aACA,WACA,aACA,cALR,IAAyBA,EAYrB,MAAMmuC,GAAiBp2B,EAAcD,GAAe,EAC9Cs2B,EAAa3oD,KAAKE,IAAIwoD,EAAeJ,EAAaj2B,EAAc,GAQhEu2B,EAAqBh3C,IACvB,MAAMi3C,GAAiBv2B,EAActyB,KAAKE,IAAIwoD,EAAe92C,IAAQ02C,EAAa,EAClF,OAAOz1C,EAAgBm8B,YAAYp9B,EAAK,EAAG5R,KAAKE,IAAIwoD,EAAeG,GAAe,EAEtF,MAAO,CACHX,WAAYU,EAAkBL,EAAEL,YAChCC,SAAUS,EAAkBL,EAAEJ,UAC9BC,WAAYv1C,EAAgBm8B,YAAYuZ,EAAEH,WAAY,EAAGO,GACzDN,SAAUx1C,EAAgBm8B,YAAYuZ,EAAEF,SAAU,EAAGM,GAE7D,CA0C+DG,CAAoB5iC,EAASmM,EAAaC,EAAaoB,EAAWD,GACvHs1B,EAA2Bz2B,EAAc41B,EACzCc,EAAyB12B,EAAc61B,EACvCc,EAA0Bx1B,EAAay0B,EAAaa,EACpDG,EAAwBx1B,EAAWy0B,EAAWa,EAC9CG,EAA2B92B,EAAc+1B,EACzCgB,EAAyB/2B,EAAcg2B,EACvCgB,EAA0B51B,EAAa20B,EAAae,EACpDG,EAAwB51B,EAAW20B,EAAWe,EAEpD,GADA7qC,EAAIq3B,YACAje,EAAU,CAEV,MAAM4xB,GAAyBN,EAA0BC,GAAyB,EAIlF,GAHA3qC,EAAImX,IAAI3xB,EAAGoc,EAAGmS,EAAa22B,EAAyBM,GACpDhrC,EAAImX,IAAI3xB,EAAGoc,EAAGmS,EAAai3B,EAAuBL,GAE9Cf,EAAW,EAAG,CACd,MAAMqB,EAAU9B,GAAWsB,EAAwBE,EAAuBnlD,EAAGoc,GAC7E5B,EAAImX,IAAI8zB,EAAQzlD,EAAGylD,EAAQrpC,EAAGgoC,EAAUe,EAAuBx1B,EAAW7gB,EAAgB0hB,QAC9F,CAEA,MAAMk1B,EAAK/B,GAAW0B,EAAwB11B,EAAU3vB,EAAGoc,GAG3D,GAFA5B,EAAIu3B,OAAO2T,EAAG1lD,EAAG0lD,EAAGtpC,GAEhBkoC,EAAW,EAAG,CACd,MAAMmB,EAAU9B,GAAW0B,EAAwBE,EAAuBvlD,EAAGoc,GAC7E5B,EAAImX,IAAI8zB,EAAQzlD,EAAGylD,EAAQrpC,EAAGkoC,EAAU30B,EAAW7gB,EAAgB0hB,QAAS+0B,EAAwBtpD,KAAKy0B,GAC7G,CAEA,MAAMi1B,GAAyBh2B,EAAW20B,EAAWh2B,GAAeoB,EAAa20B,EAAa/1B,IAAgB,EAI9G,GAHA9T,EAAImX,IAAI3xB,EAAGoc,EAAGkS,EAAaqB,EAAW20B,EAAWh2B,EAAaq3B,GAAuB,GACrFnrC,EAAImX,IAAI3xB,EAAGoc,EAAGkS,EAAaq3B,EAAuBj2B,EAAa20B,EAAa/1B,GAAa,GAErF+1B,EAAa,EAAG,CAChB,MAAMoB,EAAU9B,GAAWyB,EAA0BE,EAAyBtlD,EAAGoc,GACjF5B,EAAImX,IAAI8zB,EAAQzlD,EAAGylD,EAAQrpC,EAAGioC,EAAYiB,EAA0BrpD,KAAKy0B,GAAIhB,EAAa5gB,EAAgB0hB,QAC9G,CAEA,MAAMo1B,EAAKjC,GAAWqB,EAA0Bt1B,EAAY1vB,EAAGoc,GAG/D,GAFA5B,EAAIu3B,OAAO6T,EAAG5lD,EAAG4lD,EAAGxpC,GAEhB+nC,EAAa,EAAG,CAChB,MAAMsB,EAAU9B,GAAWqB,EAA0BE,EAAyBllD,EAAGoc,GACjF5B,EAAImX,IAAI8zB,EAAQzlD,EAAGylD,EAAQrpC,EAAG+nC,EAAYz0B,EAAa5gB,EAAgB0hB,QAAS00B,EACpF,CACJ,KAAO,CACH1qC,EAAIs3B,OAAO9xC,EAAGoc,GACd,MAAMypC,EAAc5pD,KAAK4zB,IAAIq1B,GAA2B32B,EAAcvuB,EAChE8lD,EAAc7pD,KAAK8zB,IAAIm1B,GAA2B32B,EAAcnS,EACtE5B,EAAIu3B,OAAO8T,EAAaC,GACxB,MAAMC,EAAY9pD,KAAK4zB,IAAIs1B,GAAyB52B,EAAcvuB,EAC5DgmD,EAAY/pD,KAAK8zB,IAAIo1B,GAAyB52B,EAAcnS,EAClE5B,EAAIu3B,OAAOgU,EAAWC,EAC1B,CACAxrC,EAAIyrC,WACR,CAmDA,MAAMC,WAAmBnjB,GACrBzoB,UAAY,MACZA,gBAAkB,CACdyX,YAAa,SACbhE,YAAa,OACbuhB,WAAY,GACZE,iBAAkB,EAClB2W,qBAAiBhoD,EACjBsmD,aAAc,EACdv2B,YAAa,EACbtF,OAAQ,EACRqE,QAAS,EACTkD,WAAOhyB,EACPy1B,UAAU,GAEdtZ,qBAAuB,CACnBuT,gBAAiB,mBAErBvT,mBAAqB,CACjB4S,aAAa,EACbC,WAAa3C,GAAgB,eAATA,GAExBwC,cACA2C,SACAy2B,YACA93B,YACAC,YACAu1B,YACAp0B,WACAnjB,YAAYsG,GACRqW,QACAxc,KAAKmJ,aAAU1X,EACfuO,KAAKsgB,mBAAgB7uB,EACrBuO,KAAKgjB,gBAAavxB,EAClBuO,KAAKijB,cAAWxxB,EAChBuO,KAAK4hB,iBAAcnwB,EACnBuO,KAAK6hB,iBAAcpwB,EACnBuO,KAAKo3C,YAAc,EACnBp3C,KAAK05C,YAAc,EACfvzC,GACA/H,OAAOqB,OAAOO,KAAMmG,EAE5B,CACA0kB,QAAQ8uB,EAAQC,EAAQnvB,GACpB,MAAM5K,EAAQ7f,KAAK4rB,SAAS,CACxB,IACA,KACDnB,IACG,MAAEhH,EAAM,SAAEiI,GAActpB,EAAgBypB,kBAAkBhM,EAAO,CACnEvsB,EAAGqmD,EACHjqC,EAAGkqC,KAED,WAAE52B,EAAW,SAAEC,EAAS,YAAErB,EAAY,YAAEC,EAAY,cAAEvB,GAAmBtgB,KAAK4rB,SAAS,CACzF,aACA,WACA,cACA,cACA,iBACDnB,GACGovB,GAAW75C,KAAKmJ,QAAQoX,QAAUvgB,KAAKmJ,QAAQqY,aAAe,EAE9Ds4B,EADiB13C,EAAgByN,eAAeyQ,EAAe2C,EAAWD,IACxC5gB,EAAgBigB,KAAOjgB,EAAgBshB,cAAcD,EAAOT,EAAYC,GAC1G82B,EAAe33C,EAAgB43C,WAAWtuB,EAAU9J,EAAci4B,EAASh4B,EAAcg4B,GAC/F,OAAOC,GAAiBC,CAC5B,CACAtuB,eAAehB,GACX,MAAM,EAAEn3B,EAAE,EAAEoc,EAAE,WAAEsT,EAAW,SAAEC,EAAS,YAAErB,EAAY,YAAEC,GAAiB7hB,KAAK4rB,SAAS,CACjF,IACA,IACA,aACA,WACA,cACA,eACDnB,IACG,OAAEvO,EAAO,QAAEqE,GAAavgB,KAAKmJ,QAC7B8wC,GAAaj3B,EAAaC,GAAY,EACtCi3B,GAAct4B,EAAcC,EAActB,EAAUrE,GAAU,EACpE,MAAO,CACH5oB,EAAGA,EAAI/D,KAAK4zB,IAAI82B,GAAaC,EAC7BxqC,EAAGA,EAAIngB,KAAK8zB,IAAI42B,GAAaC,EAErC,CACA5jB,gBAAgB7L,GACZ,OAAOzqB,KAAKyrB,eAAehB,EAC/B,CACAtmB,KAAK2J,GACD,MAAM,QAAE3E,EAAQ,cAAEmX,GAAmBtgB,KAC/Bkc,GAAU/S,EAAQ+S,QAAU,GAAK,EACjCqE,GAAWpX,EAAQoX,SAAW,GAAK,EACnC2G,EAAW/d,EAAQ+d,SAGzB,GAFAlnB,KAAKo3C,YAAsC,UAAxBjuC,EAAQkc,YAA0B,IAAO,EAC5DrlB,KAAK05C,YAAcp5B,EAAgBle,EAAgBigB,IAAM9yB,KAAKuX,MAAMwZ,EAAgBle,EAAgBigB,KAAO,EACrF,IAAlB/B,GAAuBtgB,KAAK4hB,YAAc,GAAK5hB,KAAK6hB,YAAc,EAClE,OAEJ/T,EAAI62B,OACJ,MAAMsV,GAAaj6C,KAAKgjB,WAAahjB,KAAKijB,UAAY,EACtDnV,EAAIqsC,UAAU5qD,KAAK4zB,IAAI82B,GAAa/9B,EAAQ3sB,KAAK8zB,IAAI42B,GAAa/9B,GAClE,MACMk+B,EAAel+B,GADT,EAAI3sB,KAAK8zB,IAAI9zB,KAAKE,IAAI2S,EAAgB4hB,GAAI1D,GAAiB,KAEvExS,EAAIoT,UAAY/X,EAAQgY,gBACxBrT,EAAIsT,YAAcjY,EAAQkY,YAvJlC,SAAiBvT,EAAK2H,EAASyG,EAAQqE,EAAS2G,GAC5C,MAAM,YAAEwyB,EAAY,WAAE12B,EAAW,cAAE1C,GAAmB7K,EACtD,IAAIwN,EAAWxN,EAAQwN,SACvB,GAAIy2B,EAAa,CACbvC,GAAQrpC,EAAK2H,EAASyG,EAAQqE,EAAS0C,EAAUiE,GACjD,IAAI,IAAI/0B,EAAI,EAAGA,EAAIunD,IAAevnD,EAC9B2b,EAAIoB,OAEHwO,MAAM4C,KACP2C,EAAWD,GAAc1C,EAAgBle,EAAgBigB,KAAOjgB,EAAgBigB,KAExF,CACA80B,GAAQrpC,EAAK2H,EAASyG,EAAQqE,EAAS0C,EAAUiE,GACjDpZ,EAAIoB,MAER,CAyIQmrC,CAAQvsC,EAAK9N,KAAMo6C,EAAc75B,EAAS2G,GAxIlD,SAAoBpZ,EAAK2H,EAASyG,EAAQqE,EAAS2G,GAC/C,MAAM,YAAEwyB,EAAY,WAAE12B,EAAW,cAAE1C,EAAc,QAAEnX,GAAasM,GAC1D,YAAE+L,EAAY,gBAAEi4B,EAAgB,WAAE7W,EAAW,iBAAEE,GAAsB35B,EACrEmxC,EAAgC,UAAxBnxC,EAAQkc,YACtB,IAAK7D,EACD,OAEJ1T,EAAIm3B,YAAYrC,GAAc,IAC9B90B,EAAIo3B,eAAiBpC,EACjBwX,GACAxsC,EAAIyT,UAA0B,EAAdC,EAChB1T,EAAIysC,SAAWd,GAAmB,UAElC3rC,EAAIyT,UAAYC,EAChB1T,EAAIysC,SAAWd,GAAmB,SAEtC,IAAIx2B,EAAWxN,EAAQwN,SACvB,GAAIy2B,EAAa,CACbvC,GAAQrpC,EAAK2H,EAASyG,EAAQqE,EAAS0C,EAAUiE,GACjD,IAAI,IAAI/0B,EAAI,EAAGA,EAAIunD,IAAevnD,EAC9B2b,EAAIw3B,SAEH5nB,MAAM4C,KACP2C,EAAWD,GAAc1C,EAAgBle,EAAgBigB,KAAOjgB,EAAgBigB,KAExF,CACIi4B,GA3LR,SAAiBxsC,EAAK2H,EAASwN,GAC3B,MAAM,WAAED,EAAW,YAAEo0B,EAAY,EAAE9jD,EAAE,EAAEoc,EAAE,YAAEmS,EAAY,YAAED,GAAiBnM,EAC1E,IAAI+kC,EAAcpD,EAAcv1B,EAGhC/T,EAAIq3B,YACJr3B,EAAImX,IAAI3xB,EAAGoc,EAAGmS,EAAamB,EAAaw3B,EAAav3B,EAAWu3B,GAC5D54B,EAAcw1B,GACdoD,EAAcpD,EAAcx1B,EAC5B9T,EAAImX,IAAI3xB,EAAGoc,EAAGkS,EAAaqB,EAAWu3B,EAAax3B,EAAaw3B,GAAa,IAE7E1sC,EAAImX,IAAI3xB,EAAGoc,EAAG0nC,EAAan0B,EAAW7gB,EAAgB0hB,QAASd,EAAa5gB,EAAgB0hB,SAEhGhW,EAAIyrC,YACJzrC,EAAIqH,MACR,CA6KQslC,CAAQ3sC,EAAK2H,EAASwN,GAErBy2B,IACDvC,GAAQrpC,EAAK2H,EAASyG,EAAQqE,EAAS0C,EAAUiE,GACjDpZ,EAAIw3B,SAEZ,CAwGQE,CAAW13B,EAAK9N,KAAMo6C,EAAc75B,EAAS2G,GAC7CpZ,EAAI+2B,SACR,EAGJ,SAAS6V,GAAS5sC,EAAK3E,EAAS6X,EAAQ7X,GACpC2E,EAAI6sC,QAAUv4C,EAAgByN,eAAemR,EAAM45B,eAAgBzxC,EAAQyxC,gBAC3E9sC,EAAIm3B,YAAY7iC,EAAgByN,eAAemR,EAAM4hB,WAAYz5B,EAAQy5B,aACzE90B,EAAIo3B,eAAiB9iC,EAAgByN,eAAemR,EAAM8hB,iBAAkB35B,EAAQ25B,kBACpFh1B,EAAIysC,SAAWn4C,EAAgByN,eAAemR,EAAMy4B,gBAAiBtwC,EAAQswC,iBAC7E3rC,EAAIyT,UAAYnf,EAAgByN,eAAemR,EAAMQ,YAAarY,EAAQqY,aAC1E1T,EAAIsT,YAAchf,EAAgByN,eAAemR,EAAMK,YAAalY,EAAQkY,YAChF,CACA,SAASgkB,GAAOv3B,EAAK+sC,EAAUz0C,GAC3B0H,EAAIu3B,OAAOj/B,EAAO9S,EAAG8S,EAAOsJ,EAChC,CAUA,SAASorC,GAASl7B,EAAQuG,EAASgH,EAAS,CAAC,GACzC,MAAM9a,EAAQuN,EAAOzuB,QACboS,MAAOw3C,EAAc,EAAI1wC,IAAK2wC,EAAY3oC,EAAQ,GAAO8a,GACzD5pB,MAAO03C,EAAe5wC,IAAK6wC,GAAgB/0B,EAC7C5iB,EAAQhU,KAAKC,IAAIurD,EAAaE,GAC9B5wC,EAAM9a,KAAKE,IAAIurD,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAClH,MAAO,CACH7oC,QACA9O,QACA0D,KAAMkf,EAAQlf,KACdyD,KAAML,EAAM9G,IAAU43C,EAAU9oC,EAAQhI,EAAM9G,EAAQ8G,EAAM9G,EAEpE,CACC,SAAS63C,GAAYttC,EAAK8X,EAAMO,EAASgH,GACtC,MAAM,OAAEvN,EAAO,QAAEzW,GAAayc,GACxB,MAAEvT,EAAM,MAAE9O,EAAM,KAAE0D,EAAK,KAAEyD,GAAUowC,GAASl7B,EAAQuG,EAASgH,GAC7DkuB,EA1BT,SAAuBlyC,GACpB,OAAIA,EAAQmyC,QACDl5C,EAAgBm5C,eAEvBpyC,EAAQqyC,SAA8C,aAAnCryC,EAAQsyC,uBACpBr5C,EAAgBs5C,eAEpBrW,EACX,CAkBuBsW,CAAcxyC,GACjC,IACIhX,EAAG0tB,EAAOrN,GADV,KAAE6F,GAAM,EAAK,QAAEjO,GAAa+iB,GAAU,CAAC,EAE3C,IAAIh7B,EAAI,EAAGA,GAAKuY,IAAQvY,EACpB0tB,EAAQD,GAAQrc,GAAS6G,EAAUM,EAAOvY,EAAIA,IAAMkgB,GAChDwN,EAAMG,OAEC3H,GACPvK,EAAIs3B,OAAOvlB,EAAMvsB,EAAGusB,EAAMnQ,GAC1B2I,GAAO,GAEPgjC,EAAWvtC,EAAK0E,EAAMqN,EAAOzV,EAASjB,EAAQmyC,SAElD9oC,EAAOqN,GAMX,OAJI5Y,IACA4Y,EAAQD,GAAQrc,GAAS6G,EAAUM,EAAO,IAAM2H,GAChDgpC,EAAWvtC,EAAK0E,EAAMqN,EAAOzV,EAASjB,EAAQmyC,YAEzCr0C,CACb,CACC,SAAS20C,GAAgB9tC,EAAK8X,EAAMO,EAASgH,GAC1C,MAAMvN,EAASgG,EAAKhG,QACd,MAAEvN,EAAM,MAAE9O,EAAM,KAAEmH,GAAUowC,GAASl7B,EAAQuG,EAASgH,IACtD,KAAE9U,GAAM,EAAK,QAAEjO,GAAa+iB,GAAU,CAAC,EAC7C,IAEIh7B,EAAG0tB,EAAOg8B,EAAO53B,EAAMJ,EAAMi4B,EAF7BC,EAAO,EACPC,EAAS,EAEb,MAAMC,EAActxC,IAASpH,GAAS6G,EAAUM,EAAOC,EAAQA,IAAU0H,EACnE6pC,EAAQ,KACNj4B,IAASJ,IACT/V,EAAIu3B,OAAO0W,EAAMl4B,GACjB/V,EAAIu3B,OAAO0W,EAAM93B,GACjBnW,EAAIu3B,OAAO0W,EAAMD,GACrB,EAMJ,IAJIzjC,IACAwH,EAAQD,EAAOq8B,EAAW,IAC1BnuC,EAAIs3B,OAAOvlB,EAAMvsB,EAAGusB,EAAMnQ,IAE1Bvd,EAAI,EAAGA,GAAKuY,IAAQvY,EAAE,CAEtB,GADA0tB,EAAQD,EAAOq8B,EAAW9pD,IACtB0tB,EAAMG,KACN,SAEJ,MAAM1sB,EAAIusB,EAAMvsB,EACVoc,EAAImQ,EAAMnQ,EACVysC,EAAa,EAAJ7oD,EACX6oD,IAAWN,GACPnsC,EAAIuU,EACJA,EAAOvU,EACAA,EAAImU,IACXA,EAAOnU,GAEXqsC,GAAQC,EAASD,EAAOzoD,KAAO0oD,IAE/BE,IACApuC,EAAIu3B,OAAO/xC,EAAGoc,GACdmsC,EAAQM,EACRH,EAAS,EACT/3B,EAAOJ,EAAOnU,GAElBosC,EAAQpsC,CACZ,CACAwsC,GACJ,CACC,SAASE,GAAkBx2B,GACxB,MAAMzb,EAAOyb,EAAKzc,QACZy5B,EAAaz4B,EAAKy4B,YAAcz4B,EAAKy4B,WAAWzxC,OAEtD,OADqBy0B,EAAKM,YAAeN,EAAK5e,OAAUmD,EAAKqxC,SAA2C,aAAhCrxC,EAAKsxC,wBAA0CtxC,EAAKmxC,SAAY1Y,EACjGwY,GAAlBQ,EACzB,CAoCA,MAAMS,GAA8B,mBAAXC,OAQzB,MAAMC,WAAoBlmB,GACtBzoB,UAAY,OACfA,gBAAkB,CACXgtC,eAAgB,OAChBhY,WAAY,GACZE,iBAAkB,EAClB2W,gBAAiB,QACjBj4B,YAAa,EACbg7B,iBAAiB,EACjBf,uBAAwB,UACxBvsC,MAAM,EACNyW,UAAU,EACV21B,SAAS,EACTE,QAAS,GAEhB5tC,qBAAuB,CAChBuT,gBAAiB,kBACjBE,YAAa,eAEjBzT,mBAAqB,CACjB4S,aAAa,EACbC,WAAa3C,GAAgB,eAATA,GAAkC,SAATA,GAEjDje,YAAYsG,GACRqW,QACAxc,KAAKomB,UAAW,EAChBpmB,KAAKmJ,aAAU1X,EACfuO,KAAKoI,YAAS3W,EACduO,KAAKgH,WAAQvV,EACbuO,KAAKooB,eAAY32B,EACjBuO,KAAKy8C,WAAQhrD,EACbuO,KAAK08C,aAAUjrD,EACfuO,KAAK28C,eAAYlrD,EACjBuO,KAAKkmB,YAAa,EAClBlmB,KAAK48C,gBAAiB,EACtB58C,KAAKimB,mBAAgBx0B,EACjB0U,GACA/H,OAAOqB,OAAOO,KAAMmG,EAE5B,CACA2gB,oBAAoBvR,EAAWrF,GAC3B,MAAM/G,EAAUnJ,KAAKmJ,QACrB,IAAKA,EAAQqyC,SAA8C,aAAnCryC,EAAQsyC,0BAA2CtyC,EAAQmyC,UAAYt7C,KAAK48C,eAAgB,CAChH,MAAM31C,EAAOkC,EAAQwc,SAAW3lB,KAAKgH,MAAQhH,KAAKooB,UAClDhmB,EAAgBy6C,2BAA2B78C,KAAK08C,QAASvzC,EAASoM,EAAWtO,EAAMiJ,GACnFlQ,KAAK48C,gBAAiB,CAC1B,CACJ,CACIh9B,WAAOA,GACP5f,KAAK08C,QAAU98B,SACR5f,KAAK28C,iBACL38C,KAAKy8C,MACZz8C,KAAK48C,gBAAiB,CAC1B,CACIh9B,aACA,OAAO5f,KAAK08C,OAChB,CACII,eACA,OAAO98C,KAAK28C,YAAc38C,KAAK28C,UAAYv6C,EAAgB26C,iBAAiB/8C,KAAMA,KAAKmJ,QAAQgd,SACnG,CACHmW,QACO,MAAMwgB,EAAW98C,KAAK88C,SAChBl9B,EAAS5f,KAAK4f,OACpB,OAAOk9B,EAAS3rD,QAAUyuB,EAAOk9B,EAAS,GAAGv5C,MACjD,CACHia,OACO,MAAMs/B,EAAW98C,KAAK88C,SAChBl9B,EAAS5f,KAAK4f,OACdvN,EAAQyqC,EAAS3rD,OACvB,OAAOkhB,GAASuN,EAAOk9B,EAASzqC,EAAQ,GAAGhI,IAC/C,CACHxJ,YAAYgf,EAAO0nB,GACZ,MAAMp+B,EAAUnJ,KAAKmJ,QACfW,EAAQ+V,EAAM0nB,GACd3nB,EAAS5f,KAAK4f,OACdk9B,EAAW16C,EAAgB46C,eAAeh9C,KAAM,CAClDunC,WACAhkC,MAAOuG,EACPO,IAAKP,IAET,IAAKgzC,EAAS3rD,OACV,OAEJ,MAAMgmC,EAAS,GACT8lB,EA/Hb,SAAiC9zC,GAC9B,OAAIA,EAAQmyC,QACDl5C,EAAgB86C,sBAEvB/zC,EAAQqyC,SAA8C,aAAnCryC,EAAQsyC,uBACpBr5C,EAAgB+6C,qBAEpB/6C,EAAgBg7C,YAC3B,CAuH6BC,CAAwBl0C,GAC7C,IAAIhX,EAAGuY,EACP,IAAIvY,EAAI,EAAGuY,EAAOoyC,EAAS3rD,OAAQgB,EAAIuY,IAAQvY,EAAE,CAC7C,MAAM,MAAEoR,EAAM,IAAE8G,GAASyyC,EAAS3qD,GAC5Bc,EAAK2sB,EAAOrc,GACZrQ,EAAK0sB,EAAOvV,GAClB,GAAIpX,IAAOC,EAAI,CACXikC,EAAOlyB,KAAKhS,GACZ,QACJ,CACA,MACMqqD,EAAeL,EAAahqD,EAAIC,EAD5B3D,KAAKwqB,KAAKjQ,EAAQ7W,EAAGs0C,KAAcr0C,EAAGq0C,GAAYt0C,EAAGs0C,KAClBp+B,EAAQmyC,SACrDgC,EAAa/V,GAAY1nB,EAAM0nB,GAC/BpQ,EAAOlyB,KAAKq4C,EAChB,CACA,OAAyB,IAAlBnmB,EAAOhmC,OAAegmC,EAAO,GAAKA,CAC7C,CACHikB,YAAYttC,EAAKqY,EAASgH,GAEnB,OADsBivB,GAAkBp8C,KACjCu9C,CAAczvC,EAAK9N,KAAMmmB,EAASgH,EAC7C,CACHqwB,KAAK1vC,EAAKvK,EAAO8O,GACV,MAAMyqC,EAAW98C,KAAK88C,SAChBS,EAAgBnB,GAAkBp8C,MACxC,IAAIiH,EAAOjH,KAAKgH,MAChBzD,EAAQA,GAAS,EACjB8O,EAAQA,GAASrS,KAAK4f,OAAOzuB,OAASoS,EACtC,IAAK,MAAM4iB,KAAW22B,EAClB71C,GAAQs2C,EAAczvC,EAAK9N,KAAMmmB,EAAS,CACtC5iB,QACA8G,IAAK9G,EAAQ8O,EAAQ,IAG7B,QAASpL,CACb,CACH9C,KAAK2J,EAAKyH,EAAWhS,EAAO8O,GACrB,MAAMlJ,EAAUnJ,KAAKmJ,SAAW,CAAC,GAClBnJ,KAAK4f,QAAU,IACnBzuB,QAAUgY,EAAQqY,cACzB1T,EAAI62B,OAlIhB,SAAc72B,EAAK8X,EAAMriB,EAAO8O,GACxBgqC,KAAcz2B,EAAKzc,QAAQgd,QA5BnC,SAA6BrY,EAAK8X,EAAMriB,EAAO8O,GAC3C,IAAImrC,EAAO53B,EAAK62B,MACXe,IACDA,EAAO53B,EAAK62B,MAAQ,IAAIH,OACpB12B,EAAK43B,KAAKA,EAAMj6C,EAAO8O,IACvBmrC,EAAKjE,aAGbmB,GAAS5sC,EAAK8X,EAAKzc,SACnB2E,EAAIw3B,OAAOkY,EACf,CAmBQC,CAAoB3vC,EAAK8X,EAAMriB,EAAO8O,GAlB9C,SAA0BvE,EAAK8X,EAAMriB,EAAO8O,GACxC,MAAM,SAAEyqC,EAAS,QAAE3zC,GAAayc,EAC1B23B,EAAgBnB,GAAkBx2B,GACxC,IAAK,MAAMO,KAAW22B,EAClBpC,GAAS5sC,EAAK3E,EAASgd,EAAQnF,OAC/BlT,EAAIq3B,YACAoY,EAAczvC,EAAK8X,EAAMO,EAAS,CAClC5iB,QACA8G,IAAK9G,EAAQ8O,EAAQ,KAErBvE,EAAIyrC,YAERzrC,EAAIw3B,QAEZ,CAMQoY,CAAiB5vC,EAAK8X,EAAMriB,EAAO8O,EAE3C,CA6HYlO,CAAK2J,EAAK9N,KAAMuD,EAAO8O,GACvBvE,EAAI+2B,WAEJ7kC,KAAKomB,WACLpmB,KAAK48C,gBAAiB,EACtB58C,KAAKy8C,WAAQhrD,EAErB,EAGJ,SAASksD,GAAU3zB,EAAIyC,EAAKjgB,EAAMie,GAC9B,MAAMthB,EAAU6gB,EAAG7gB,SACX,CAACqD,GAAO1C,GAAWkgB,EAAG4B,SAAS,CACnCpf,GACDie,GACH,OAAOl7B,KAAKwqB,IAAI0S,EAAM3iB,GAASX,EAAQwW,OAASxW,EAAQy0C,SAC5D,CACA,MAAMC,WAAqBxnB,GACvBzoB,UAAY,QACZzB,OACA6T,KACAxa,KAGEoI,gBAAkB,CAChB4T,YAAa,EACbo8B,UAAW,EACXt4B,iBAAkB,EAClBw4B,YAAa,EACb/8B,WAAY,SACZpB,OAAQ,EACRU,SAAU,GAIZzS,qBAAuB,CACrBuT,gBAAiB,kBACjBE,YAAa,eAEjBxhB,YAAYsG,GACRqW,QACAxc,KAAKmJ,aAAU1X,EACfuO,KAAKmM,YAAS1a,EACduO,KAAKggB,UAAOvuB,EACZuO,KAAKwF,UAAO/T,EACR0U,GACA/H,OAAOqB,OAAOO,KAAMmG,EAE5B,CACA0kB,QAAQkzB,EAAQC,EAAQvzB,GACpB,MAAMthB,EAAUnJ,KAAKmJ,SACf,EAAE7V,EAAE,EAAEoc,GAAO1P,KAAK4rB,SAAS,CAC7B,IACA,KACDnB,GACH,OAAOl7B,KAAK2P,IAAI6+C,EAASzqD,EAAG,GAAK/D,KAAK2P,IAAI8+C,EAAStuC,EAAG,GAAKngB,KAAK2P,IAAIiK,EAAQy0C,UAAYz0C,EAAQwW,OAAQ,EAC5G,CACAs+B,SAASF,EAAQtzB,GACb,OAAOkzB,GAAU39C,KAAM+9C,EAAQ,IAAKtzB,EACxC,CACAyzB,SAASF,EAAQvzB,GACb,OAAOkzB,GAAU39C,KAAMg+C,EAAQ,IAAKvzB,EACxC,CACAgB,eAAehB,GACX,MAAM,EAAEn3B,EAAE,EAAEoc,GAAO1P,KAAK4rB,SAAS,CAC7B,IACA,KACDnB,GACH,MAAO,CACHn3B,IACAoc,IAER,CACA3F,KAAKZ,GAED,IAAIwW,GADJxW,EAAUA,GAAWnJ,KAAKmJ,SAAW,CAAC,GACjBwW,QAAU,EAG/B,OAFAA,EAASpwB,KAAKC,IAAImwB,EAAQA,GAAUxW,EAAQ20C,aAAe,GAE3B,GAAxBn+B,GADYA,GAAUxW,EAAQqY,aAAe,GAEzD,CACArd,KAAK2J,EAAKwH,GACN,MAAMnM,EAAUnJ,KAAKmJ,QACjBnJ,KAAKggB,MAAQ7W,EAAQwW,OAAS,KAAQvd,EAAgBwoB,eAAe5qB,KAAMsV,EAAMtV,KAAK+J,KAAKZ,GAAW,KAG1G2E,EAAIsT,YAAcjY,EAAQkY,YAC1BvT,EAAIyT,UAAYpY,EAAQqY,YACxB1T,EAAIoT,UAAY/X,EAAQgY,gBACxB/e,EAAgB+7C,UAAUrwC,EAAK3E,EAASnJ,KAAK1M,EAAG0M,KAAK0P,GACzD,CACAua,WACI,MAAM9gB,EAAUnJ,KAAKmJ,SAAW,CAAC,EAEjC,OAAOA,EAAQwW,OAASxW,EAAQy0C,SACpC,EAGJ,SAASQ,GAAaC,EAAK5zB,GACvB,MAAM,EAAEn3B,EAAE,EAAEoc,EAAE,KAAEwL,EAAK,MAAEoC,EAAM,OAAED,GAAaghC,EAAIzyB,SAAS,CACrD,IACA,IACA,OACA,QACA,UACDnB,GACH,IAAIzV,EAAMF,EAAOD,EAAKE,EAAQupC,EAc9B,OAbID,EAAIpjC,YACJqjC,EAAOjhC,EAAS,EAChBrI,EAAOzlB,KAAKE,IAAI6D,EAAG4nB,GACnBpG,EAAQvlB,KAAKC,IAAI8D,EAAG4nB,GACpBrG,EAAMnF,EAAI4uC,EACVvpC,EAASrF,EAAI4uC,IAEbA,EAAOhhC,EAAQ,EACftI,EAAO1hB,EAAIgrD,EACXxpC,EAAQxhB,EAAIgrD,EACZzpC,EAAMtlB,KAAKE,IAAIigB,EAAGwL,GAClBnG,EAASxlB,KAAKC,IAAIkgB,EAAGwL,IAElB,CACHlG,OACAH,MACAC,QACAC,SAER,CACA,SAASwpC,GAAYv+B,EAAMlW,EAAOra,EAAKD,GACnC,OAAOwwB,EAAO,EAAI5d,EAAgBm8B,YAAYz0B,EAAOra,EAAKD,EAC9D,CAwDA,SAASq7B,GAAQwzB,EAAK/qD,EAAGoc,EAAG+a,GACxB,MAAM+zB,EAAc,OAANlrD,EACRmrD,EAAc,OAAN/uC,EAERgvC,EAASL,KADEG,GAASC,IACSL,GAAaC,EAAK5zB,GACrD,OAAOi0B,IAAWF,GAASp8C,EAAgB43C,WAAW1mD,EAAGorD,EAAO1pC,KAAM0pC,EAAO5pC,UAAY2pC,GAASr8C,EAAgB43C,WAAWtqC,EAAGgvC,EAAO7pC,IAAK6pC,EAAO3pC,QACvJ,CAIC,SAAS4pC,GAAkB7wC,EAAK8wC,GAC7B9wC,EAAI8wC,KAAKA,EAAKtrD,EAAGsrD,EAAKlvC,EAAGkvC,EAAK3sD,EAAG2sD,EAAKtvD,EAC1C,CACA,SAASuvD,GAAYD,EAAME,EAAQC,EAAU,CAAC,GAC1C,MAAMzrD,EAAIsrD,EAAKtrD,IAAMyrD,EAAQzrD,GAAKwrD,EAAS,EACrCpvC,EAAIkvC,EAAKlvC,IAAMqvC,EAAQrvC,GAAKovC,EAAS,EACrC7sD,GAAK2sD,EAAKtrD,EAAIsrD,EAAK3sD,IAAM8sD,EAAQzrD,EAAIyrD,EAAQ9sD,EAAI6sD,EAAS,GAAKxrD,EAC/DhE,GAAKsvD,EAAKlvC,EAAIkvC,EAAKtvD,IAAMyvD,EAAQrvC,EAAIqvC,EAAQzvD,EAAIwvD,EAAS,GAAKpvC,EACrE,MAAO,CACHpc,EAAGsrD,EAAKtrD,EAAIA,EACZoc,EAAGkvC,EAAKlvC,EAAIA,EACZzd,EAAG2sD,EAAK3sD,EAAIA,EACZ3C,EAAGsvD,EAAKtvD,EAAIA,EACZqwB,OAAQi/B,EAAKj/B,OAErB,CACA,MAAMq/B,WAAmB3oB,GACrBzoB,UAAY,MACfA,gBAAkB,CACXoN,cAAe,QACfwG,YAAa,EACbu2B,aAAc,EACdp8B,cAAe,OACfoF,gBAAYtvB,GAEnBmc,qBAAuB,CAChBuT,gBAAiB,kBACjBE,YAAa,eAEjBxhB,YAAYsG,GACRqW,QACAxc,KAAKmJ,aAAU1X,EACfuO,KAAKib,gBAAaxpB,EAClBuO,KAAKkb,UAAOzpB,EACZuO,KAAKsd,WAAQ7rB,EACbuO,KAAKqd,YAAS5rB,EACduO,KAAK2b,mBAAgBlqB,EACjB0U,GACA/H,OAAOqB,OAAOO,KAAMmG,EAE5B,CACAhC,KAAK2J,GACD,MAAM,cAAE6N,EAAgBxS,SAAS,YAAEkY,EAAY,gBAAEF,IAAwBnhB,MACnE,MAAEs6C,EAAM,MAAE2E,GAjFxB,SAAuBZ,GACnB,MAAMK,EAASN,GAAaC,GACtB/gC,EAAQohC,EAAO5pC,MAAQ4pC,EAAO1pC,KAC9BqI,EAASqhC,EAAO3pC,OAAS2pC,EAAO7pC,IAChC8R,EA/BV,SAA0B03B,EAAKa,EAAMC,GACjC,MAAMr1C,EAAQu0C,EAAIl1C,QAAQqY,YACpBxB,EAAOq+B,EAAIrjC,cACX88B,EAAI11C,EAAgBg9C,OAAOt1C,GACjC,MAAO,CACHhJ,EAAGy9C,GAAYv+B,EAAKnL,IAAKijC,EAAEjjC,IAAK,EAAGsqC,GACnC/tD,EAAGmtD,GAAYv+B,EAAKlL,MAAOgjC,EAAEhjC,MAAO,EAAGoqC,GACvC5uD,EAAGiuD,GAAYv+B,EAAKjL,OAAQ+iC,EAAE/iC,OAAQ,EAAGoqC,GACzC9vD,EAAGkvD,GAAYv+B,EAAKhL,KAAM8iC,EAAE9iC,KAAM,EAAGkqC,GAE7C,CAqBmBG,CAAiBhB,EAAK/gC,EAAQ,EAAGD,EAAS,GACnDsC,EArBV,SAA2B0+B,EAAKa,EAAMC,GAClC,MAAM,mBAAE/jC,GAAwBijC,EAAIzyB,SAAS,CACzC,uBAEE9hB,EAAQu0C,EAAIl1C,QAAQ4uC,aACpBD,EAAI11C,EAAgBk9C,cAAcx1C,GAClCy1C,EAAOhwD,KAAKE,IAAIyvD,EAAMC,GACtBn/B,EAAOq+B,EAAIrjC,cACXwkC,EAAepkC,GAAsBhZ,EAAgBmG,SAASuB,GACpE,MAAO,CACH21C,QAASlB,IAAaiB,GAAgBx/B,EAAKnL,KAAOmL,EAAKhL,KAAM8iC,EAAE2H,QAAS,EAAGF,GAC3EG,SAAUnB,IAAaiB,GAAgBx/B,EAAKnL,KAAOmL,EAAKlL,MAAOgjC,EAAE4H,SAAU,EAAGH,GAC9EI,WAAYpB,IAAaiB,GAAgBx/B,EAAKjL,QAAUiL,EAAKhL,KAAM8iC,EAAE6H,WAAY,EAAGJ,GACpFK,YAAarB,IAAaiB,GAAgBx/B,EAAKjL,QAAUiL,EAAKlL,MAAOgjC,EAAE8H,YAAa,EAAGL,GAE/F,CAMmBM,CAAkBxB,EAAK/gC,EAAQ,EAAGD,EAAS,GAC1D,MAAO,CACH4hC,MAAO,CACH3rD,EAAGorD,EAAO1pC,KACVtF,EAAGgvC,EAAO7pC,IACV5iB,EAAGqrB,EACHhuB,EAAG+tB,EACHsC,UAEJ26B,MAAO,CACHhnD,EAAGorD,EAAO1pC,KAAO2R,EAAOt3B,EACxBqgB,EAAGgvC,EAAO7pC,IAAM8R,EAAO7lB,EACvB7O,EAAGqrB,EAAQqJ,EAAOt3B,EAAIs3B,EAAOv1B,EAC7B9B,EAAG+tB,EAASsJ,EAAO7lB,EAAI6lB,EAAOr2B,EAC9BqvB,OAAQ,CACJ8/B,QAASlwD,KAAKC,IAAI,EAAGmwB,EAAO8/B,QAAUlwD,KAAKC,IAAIm3B,EAAO7lB,EAAG6lB,EAAOt3B,IAChEqwD,SAAUnwD,KAAKC,IAAI,EAAGmwB,EAAO+/B,SAAWnwD,KAAKC,IAAIm3B,EAAO7lB,EAAG6lB,EAAOv1B,IAClEuuD,WAAYpwD,KAAKC,IAAI,EAAGmwB,EAAOggC,WAAapwD,KAAKC,IAAIm3B,EAAOr2B,EAAGq2B,EAAOt3B,IACtEuwD,YAAarwD,KAAKC,IAAI,EAAGmwB,EAAOigC,YAAcrwD,KAAKC,IAAIm3B,EAAOr2B,EAAGq2B,EAAOv1B,MAIxF,CAsDmC0uD,CAAc9/C,MACnC+/C,GA/CKpgC,EA+CmBs/B,EAAMt/B,QA9C1B8/B,SAAW9/B,EAAO+/B,UAAY//B,EAAOggC,YAAchgC,EAAOigC,YA8CtBx9C,EAAgB49C,mBAAqBrB,GA/C3F,IAAmBh/B,EAgDX7R,EAAI62B,OACAsa,EAAMhtD,IAAMqoD,EAAMroD,GAAKgtD,EAAM3vD,IAAMgrD,EAAMhrD,IACzCwe,EAAIq3B,YACJ4a,EAAYjyC,EAAK+wC,GAAYI,EAAOtjC,EAAe2+B,IACnDxsC,EAAIqH,OACJ4qC,EAAYjyC,EAAK+wC,GAAYvE,GAAQ3+B,EAAesjC,IACpDnxC,EAAIoT,UAAYG,EAChBvT,EAAIoB,KAAK,YAEbpB,EAAIq3B,YACJ4a,EAAYjyC,EAAK+wC,GAAYvE,EAAO3+B,IACpC7N,EAAIoT,UAAYC,EAChBrT,EAAIoB,OACJpB,EAAI+2B,SACR,CACAha,QAAQkzB,EAAQC,EAAQvzB,GACpB,OAAOI,GAAQ7qB,KAAM+9C,EAAQC,EAAQvzB,EACzC,CACAwzB,SAASF,EAAQtzB,GACb,OAAOI,GAAQ7qB,KAAM+9C,EAAQ,KAAMtzB,EACvC,CACAyzB,SAASF,EAAQvzB,GACb,OAAOI,GAAQ7qB,KAAM,KAAMg+C,EAAQvzB,EACvC,CACAgB,eAAehB,GACX,MAAM,EAAEn3B,EAAE,EAAEoc,EAAE,KAAEwL,EAAK,WAAED,GAAiBjb,KAAK4rB,SAAS,CAClD,IACA,IACA,OACA,cACDnB,GACH,MAAO,CACHn3B,EAAG2nB,GAAc3nB,EAAI4nB,GAAQ,EAAI5nB,EACjCoc,EAAGuL,EAAavL,GAAKA,EAAIwL,GAAQ,EAEzC,CACA+O,SAASzd,GACL,MAAgB,MAATA,EAAexM,KAAKsd,MAAQ,EAAItd,KAAKqd,OAAS,CACzD,EAGJ,IAAIhI,GAAwBjX,OAAOuD,OAAO,CAC1CC,UAAW,KACX43C,WAAYA,GACZwF,WAAYA,GACZzC,YAAaA,GACbsB,aAAcA,KAGd,MAAMoC,GAAgB,CAClB,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,sBAGEC,GAAoCD,GAAcxtD,KAAK6N,GAAQA,EAAM7B,QAAQ,OAAQ,SAASA,QAAQ,IAAK,YACjH,SAAS0hD,GAAehuD,GACpB,OAAO8tD,GAAc9tD,EAAI8tD,GAAc9uD,OAC3C,CACA,SAASivD,GAAmBjuD,GACxB,OAAO+tD,GAAkB/tD,EAAI+tD,GAAkB/uD,OACnD,CA2BA,SAASkvD,GAA0BnY,GAC/B,IAAIp2C,EACJ,IAAIA,KAAKo2C,EACL,GAAIA,EAAYp2C,GAAGuvB,aAAe6mB,EAAYp2C,GAAGqvB,gBAC7C,OAAO,EAGf,OAAO,CACX,CAIA,IAAIm/B,GAAgB,CAChB1zC,GAAI,SACJnE,SAAU,CACN0zB,SAAS,EACTokB,eAAe,GAEnBnwB,aAAcxtB,EAAO49C,EAAOr3C,GACxB,IAAKA,EAAQgzB,QACT,OAEJ,MAAQxrB,MAAM,SAAEC,GAAczH,QAASs3C,GAAkB79C,EAAMuF,QACzD,SAAEkN,GAAcorC,EACtB,IAAKt3C,EAAQo3C,gBAAkBF,GAA0BzvC,KAf/Bw5B,EAeqEqW,KAd7ErW,EAAW/oB,aAAe+oB,EAAWjpB,kBAcyD9L,GAAYgrC,GAA0BhrC,IAClJ,OAhBZ,IAAkC+0B,EAkB1B,MAAMsW,EAxCd,SAAsB99C,GAClB,IAAIzQ,EAAI,EACR,MAAO,CAACod,EAAStE,KACb,MAAMiB,EAAatJ,EAAMiO,eAAe5F,GAAciB,WAClDA,aAAsB+T,EACtB9tB,EAbZ,SAAiCod,EAASpd,GAEtC,OADAod,EAAQ4R,gBAAkB5R,EAAQoB,KAAKle,KAAI,IAAI0tD,GAAehuD,OACvDA,CACX,CAUgBwuD,CAAwBpxC,EAASpd,GAC9B+Z,aAAsB6a,EAC7B50B,EAXZ,SAAkCod,EAASpd,GAEvC,OADAod,EAAQ4R,gBAAkB5R,EAAQoB,KAAKle,KAAI,IAAI2tD,GAAmBjuD,OAC3DA,CACX,CAQgByuD,CAAyBrxC,EAASpd,GAC/B+Z,IACP/Z,EAtBZ,SAAgCod,EAASpd,GAGrC,OAFAod,EAAQ8R,YAAc8+B,GAAehuD,GACrCod,EAAQ4R,gBAAkBi/B,GAAmBjuD,KACpCA,CACb,CAkBgB0uD,CAAuBtxC,EAASpd,GACxC,CAER,CA4B0B2uD,CAAal+C,GAC/BgO,EAASzN,QAAQu9C,EACrB,GAmGJ,SAASK,GAAsBxxC,GAC3B,GAAIA,EAAQ2W,WAAY,CACpB,MAAMvV,EAAOpB,EAAQpB,aACdoB,EAAQ2W,kBACR3W,EAAQpB,MACf/P,OAAO4iD,eAAezxC,EAAS,OAAQ,CACnC0xC,cAAc,EACdC,YAAY,EACZC,UAAU,EACVr3C,MAAO6G,GAEf,CACJ,CACA,SAASywC,GAAmBx+C,GACxBA,EAAM+N,KAAKC,SAASzN,SAASoM,IACzBwxC,GAAsBxxC,EAAQ,GAEtC,CAoBA,IAAI8xC,GAAoB,CACpBz0C,GAAI,aACJnE,SAAU,CACN64C,UAAW,UACXnlB,SAAS,GAEbolB,qBAAsB,CAAC3+C,EAAO+V,EAAMxP,KAChC,IAAKA,EAAQgzB,QAET,YADAilB,GAAmBx+C,GAGvB,MAAM0sB,EAAiB1sB,EAAM0a,MAC7B1a,EAAM+N,KAAKC,SAASzN,SAAQ,CAACoM,EAAStE,KAClC,MAAM,MAAEkD,EAAM,UAAE+B,GAAeX,EACzBjE,EAAO1I,EAAMiO,eAAe5F,GAC5B0F,EAAOxC,GAASoB,EAAQoB,KAC9B,GAGO,MAHHvO,EAAgBmE,QAAQ,CACxB2J,EACAtN,EAAMuG,QAAQ+G,YAEd,OAEJ,IAAK5E,EAAKY,WAAWuC,mBACjB,OAEJ,MAAM+yC,EAAQ5+C,EAAMsK,OAAO5B,EAAKsE,SAChC,GAAmB,WAAf4xC,EAAM1hD,MAAoC,SAAf0hD,EAAM1hD,KACjC,OAEJ,GAAI8C,EAAMuG,QAAQgJ,QACd,OAEJ,IAoBIsvC,GApBA,MAAEl+C,EAAM,MAAE8O,GAnD1B,SAAmD/G,EAAMsU,GACrD,MAAM8hC,EAAa9hC,EAAOzuB,OAC1B,IACIkhB,EADA9O,EAAQ,EAEZ,MAAM,OAAE+I,GAAYhB,GACd,IAAE7b,EAAI,IAAED,EAAI,WAAE2kB,EAAW,WAAEC,GAAgB9H,EAAO+H,gBASxD,OARIF,IACA5Q,EAAQnB,EAAgBm8B,YAAYn8B,EAAgB2nB,aAAanK,EAAQtT,EAAOE,KAAM/c,GAAKy6B,GAAI,EAAGw3B,EAAa,IAG/GrvC,EADA+B,EACQhS,EAAgBm8B,YAAYn8B,EAAgB2nB,aAAanK,EAAQtT,EAAOE,KAAMhd,GAAK26B,GAAK,EAAG5mB,EAAOm+C,GAAcn+C,EAEhHm+C,EAAan+C,EAElB,CACHA,QACA8O,QAER,CAiCqCsvC,CAA0Cr2C,EAAMqF,GAEzE,GAAI0B,IADclJ,EAAQy4C,WAAa,EAAItyB,GAEvCyxB,GAAsBxxC,OAD1B,CAmBA,OAfInN,EAAgB2a,cAAc5O,KAC9BoB,EAAQpB,MAAQwC,SACTpB,EAAQoB,KACfvS,OAAO4iD,eAAezxC,EAAS,OAAQ,CACnC0xC,cAAc,EACdC,YAAY,EACZx8C,IAAK,WACD,OAAO1E,KAAKkmB,UAChB,EACArhB,IAAK,SAASrU,GACVwP,KAAKmO,MAAQ3d,CACjB,KAID2Y,EAAQm4C,WACX,IAAK,OACDG,EA5LpB,SAAwB9wC,EAAMpN,EAAO8O,EAAOid,EAAgBnmB,GAC3D,MAAM04C,EAAU14C,EAAQ04C,SAAWvyB,EAChC,GAAIuyB,GAAWxvC,EACX,OAAO1B,EAAK8hC,MAAMlvC,EAAOA,EAAQ8O,GAErC,MAAMovC,EAAY,GACZK,GAAezvC,EAAQ,IAAMwvC,EAAU,GAC7C,IAAIE,EAAe,EACnB,MAAMC,EAAWz+C,EAAQ8O,EAAQ,EACjC,IACIlgB,EAAG8vD,EAAcC,EAAS5sC,EAAM6sC,EADhC9xD,EAAIkT,EAGR,IADAk+C,EAAUM,KAAkBpxC,EAAKtgB,GAC7B8B,EAAI,EAAGA,EAAI0vD,EAAU,EAAG1vD,IAAI,CAC5B,IAEImM,EAFAy9C,EAAO,EACPqG,EAAO,EAEX,MAAMC,EAAgB9yD,KAAKuX,OAAO3U,EAAI,GAAK2vD,GAAe,EAAIv+C,EACxD++C,EAAc/yD,KAAKE,IAAIF,KAAKuX,OAAO3U,EAAI,GAAK2vD,GAAe,EAAGzvC,GAAS9O,EACvEg/C,EAAiBD,EAAcD,EACrC,IAAI/jD,EAAI+jD,EAAe/jD,EAAIgkD,EAAahkD,IACpCy9C,GAAQprC,EAAKrS,GAAGhL,EAChB8uD,GAAQzxC,EAAKrS,GAAGoR,EAEpBqsC,GAAQwG,EACRH,GAAQG,EACR,MAAMC,EAAYjzD,KAAKuX,MAAM3U,EAAI2vD,GAAe,EAAIv+C,EAC9Ck/C,EAAUlzD,KAAKE,IAAIF,KAAKuX,OAAO3U,EAAI,GAAK2vD,GAAe,EAAGzvC,GAAS9O,GACjEjQ,EAAGovD,EAAUhzC,EAAGizC,GAAahyC,EAAKtgB,GAE1C,IADA6xD,EAAU5sC,GAAQ,EACdhX,EAAIkkD,EAAWlkD,EAAImkD,EAASnkD,IAC5BgX,EAAO,GAAM/lB,KAAKwqB,KAAK2oC,EAAU3G,IAASprC,EAAKrS,GAAGoR,EAAIizC,IAAYD,EAAU/xC,EAAKrS,GAAGhL,IAAM8uD,EAAOO,IAC7FrtC,EAAO4sC,IACPA,EAAU5sC,EACV2sC,EAAetxC,EAAKrS,GACpB6jD,EAAQ7jD,GAGhBmjD,EAAUM,KAAkBE,EAC5B5xD,EAAI8xD,CACR,CAEA,OADAV,EAAUM,KAAkBpxC,EAAKqxC,GAC1BP,CACX,CAkJgCmB,CAAejyC,EAAMpN,EAAO8O,EAAOid,EAAgBnmB,GAC/D,MACJ,IAAK,UACDs4C,EApJpB,SAA0B9wC,EAAMpN,EAAO8O,EAAOid,GAC1C,IAEIn9B,EAAG0tB,EAAOvsB,EAAGoc,EAAGmsC,EAAOgH,EAAUC,EAAUC,EAAY9+B,EAAMJ,EAF7Dk4B,EAAO,EACPC,EAAS,EAEb,MAAMyF,EAAY,GACZO,EAAWz+C,EAAQ8O,EAAQ,EAC3B2wC,EAAOryC,EAAKpN,GAAOjQ,EAEnB2vD,EADOtyC,EAAKqxC,GAAU1uD,EACV0vD,EAClB,IAAI7wD,EAAIoR,EAAOpR,EAAIoR,EAAQ8O,IAASlgB,EAAE,CAClC0tB,EAAQlP,EAAKxe,GACbmB,GAAKusB,EAAMvsB,EAAI0vD,GAAQC,EAAK3zB,EAC5B5f,EAAImQ,EAAMnQ,EACV,MAAMysC,EAAa,EAAJ7oD,EACf,GAAI6oD,IAAWN,EACPnsC,EAAIuU,GACJA,EAAOvU,EACPmzC,EAAW1wD,GACJud,EAAImU,IACXA,EAAOnU,EACPozC,EAAW3wD,GAEf4pD,GAAQC,EAASD,EAAOl8B,EAAMvsB,KAAO0oD,MAClC,CACH,MAAMkH,EAAY/wD,EAAI,EACtB,IAAKiQ,EAAgB2a,cAAc8lC,KAAczgD,EAAgB2a,cAAc+lC,GAAW,CACtF,MAAMK,EAAqB5zD,KAAKE,IAAIozD,EAAUC,GACxCM,EAAqB7zD,KAAKC,IAAIqzD,EAAUC,GAC1CK,IAAuBJ,GAAcI,IAAuBD,GAC5DzB,EAAUx8C,KAAK,IACR0L,EAAKwyC,GACR7vD,EAAGyoD,IAGPqH,IAAuBL,GAAcK,IAAuBF,GAC5DzB,EAAUx8C,KAAK,IACR0L,EAAKyyC,GACR9vD,EAAGyoD,GAGf,CACI5pD,EAAI,GAAK+wD,IAAcH,GACvBtB,EAAUx8C,KAAK0L,EAAKuyC,IAExBzB,EAAUx8C,KAAK4a,GACfg8B,EAAQM,EACRH,EAAS,EACT/3B,EAAOJ,EAAOnU,EACdmzC,EAAWC,EAAWC,EAAa5wD,CACvC,CACJ,CACA,OAAOsvD,CACX,CAgGgC4B,CAAiB1yC,EAAMpN,EAAO8O,EAAOid,GACjD,MACJ,QACI,MAAM,IAAIzG,MAAM,qCAAqC1f,EAAQm4C,cAErE/xC,EAAQ2W,WAAau7B,CA1BrB,CA0B8B,GAChC,EAENtM,QAASvyC,GACLw+C,GAAmBx+C,EACvB,GAyCJ,SAAS0gD,GAAW/b,EAAUjL,EAAO9e,EAAMvW,GACvC,GAAIA,EACA,OAEJ,IAAI1D,EAAQ+4B,EAAMiL,GACdl9B,EAAMmT,EAAK+pB,GAKf,MAJiB,UAAbA,IACAhkC,EAAQnB,EAAgBmhD,gBAAgBhgD,GACxC8G,EAAMjI,EAAgBmhD,gBAAgBl5C,IAEnC,CACHk9B,WACAhkC,QACA8G,MAER,CA+BA,SAASm5C,GAAgBjgD,EAAO8G,EAAKuV,GACjC,KAAMvV,EAAM9G,EAAO8G,IAAM,CACrB,MAAMwV,EAAQD,EAAOvV,GACrB,IAAKqT,MAAMmC,EAAMvsB,KAAOoqB,MAAMmC,EAAMnQ,GAChC,KAER,CACA,OAAOrF,CACX,CACA,SAASo5C,GAASpzD,EAAGC,EAAG+V,EAAMjD,GAC1B,OAAI/S,GAAKC,EACE8S,EAAG/S,EAAEgW,GAAO/V,EAAE+V,IAElBhW,EAAIA,EAAEgW,GAAQ/V,EAAIA,EAAE+V,GAAQ,CACvC,CAEA,SAASq9C,GAAoBC,EAAU/9B,GACnC,IAAIhG,EAAS,GACT5Y,GAAQ,EAOZ,OANI5E,EAAgB5P,QAAQmxD,IACxB38C,GAAQ,EACR4Y,EAAS+jC,GAET/jC,EArDR,SAA6B+jC,EAAU/9B,GACnC,MAAM,EAAEtyB,EAAG,KAAK,EAAEoc,EAAG,MAAUi0C,GAAY,CAAC,EACtCC,EAAah+B,EAAKhG,OAClBA,EAAS,GAyBf,OAxBAgG,EAAKk3B,SAAS35C,SAAQ,EAAGI,QAAQ8G,UAC7BA,EAAMm5C,GAAgBjgD,EAAO8G,EAAKu5C,GAClC,MAAMtnB,EAAQsnB,EAAWrgD,GACnBia,EAAOomC,EAAWv5C,GACd,OAANqF,GACAkQ,EAAO3a,KAAK,CACR3R,EAAGgpC,EAAMhpC,EACToc,MAEJkQ,EAAO3a,KAAK,CACR3R,EAAGkqB,EAAKlqB,EACRoc,OAES,OAANpc,IACPssB,EAAO3a,KAAK,CACR3R,IACAoc,EAAG4sB,EAAM5sB,IAEbkQ,EAAO3a,KAAK,CACR3R,IACAoc,EAAG8N,EAAK9N,IAEhB,IAEGkQ,CACX,CAwBiBikC,CAAoBF,EAAU/9B,GAEpChG,EAAOzuB,OAAS,IAAIorD,GAAY,CACnC38B,SACAzW,QAAS,CACLqyC,QAAS,GAEbx0C,QACAohB,UAAWphB,IACV,IACT,CACA,SAAS88C,GAAiBpoB,GACtB,OAAOA,IAA0B,IAAhBA,EAAOxsB,IAC5B,CAEA,SAAS60C,GAAeC,EAASr5C,EAAOs5C,GAEpC,IAAI/0C,EADW80C,EAAQr5C,GACLuE,KAClB,MAAMg1C,EAAU,CACZv5C,GAEJ,IAAIvE,EACJ,IAAK69C,EACD,OAAO/0C,EAEX,MAAe,IAATA,IAA6C,IAA3Bg1C,EAAQvmC,QAAQzO,IAAa,CACjD,IAAK9M,EAAgB+I,eAAe+D,GAChC,OAAOA,EAGX,GADA9I,EAAS49C,EAAQ90C,IACZ9I,EACD,OAAO,EAEX,GAAIA,EAAO0sC,QACP,OAAO5jC,EAEXg1C,EAAQj/C,KAAKiK,GACbA,EAAO9I,EAAO8I,IAClB,CACA,OAAO,CACX,CACC,SAASi1C,GAAYv+B,EAAMjb,EAAO0H,GAC9B,MAAMnD,EAmDV,SAAyB0W,GACtB,MAAMzc,EAAUyc,EAAKzc,QACfi7C,EAAaj7C,EAAQ+F,KAC3B,IAAIA,EAAO9M,EAAgByN,eAAeu0C,GAAcA,EAAWh+C,OAAQg+C,GAI3E,YAHa3yD,IAATyd,IACAA,IAAS/F,EAAQgY,kBAER,IAATjS,GAA2B,OAATA,KAGT,IAATA,EACO,SAEJA,EACX,CAjEkBm1C,CAAgBz+B,GAC9B,GAAIxjB,EAAgBmG,SAAS2G,GACzB,OAAOwO,MAAMxO,EAAKpF,QAAiBoF,EAEvC,IAAI9I,EAASk+C,WAAWp1C,GACxB,OAAI9M,EAAgB+I,eAAe/E,IAAW7W,KAAKuX,MAAMV,KAAYA,EAWzE,SAA2Bm+C,EAAS55C,EAAOvE,EAAQiM,GAI/C,MAHgB,MAAZkyC,GAA+B,MAAZA,IACnBn+C,EAASuE,EAAQvE,KAEjBA,IAAWuE,GAASvE,EAAS,GAAKA,GAAUiM,IAGzCjM,CACX,CAlBeo+C,CAAkBt1C,EAAK,GAAIvE,EAAOvE,EAAQiM,GAE9C,CACH,SACA,QACA,MACA,QACA,SACFsL,QAAQzO,IAAS,GAAKA,CAC5B,CAuFC,SAASu1C,GAAe7kC,EAAQ8kC,EAAaC,GAC1C,MAAMC,EAAY,GAClB,IAAI,IAAItmD,EAAI,EAAGA,EAAIqmD,EAAWxzD,OAAQmN,IAAI,CACtC,MAAMsnB,EAAO++B,EAAWrmD,IAClB,MAAEg+B,EAAM,KAAE9e,EAAK,MAAEqC,GAAWglC,GAAUj/B,EAAM8+B,EAAa,KAC/D,MAAK7kC,GAASyc,GAAS9e,GAGvB,GAAI8e,EACAsoB,EAAUE,QAAQjlC,QAGlB,GADAD,EAAO3a,KAAK4a,IACPrC,EACD,KAGZ,CACAoC,EAAO3a,QAAQ2/C,EACnB,CACC,SAASC,GAAUj/B,EAAM8+B,EAAand,GACnC,MAAM1nB,EAAQ+F,EAAK/kB,YAAY6jD,EAAand,GAC5C,IAAK1nB,EACD,MAAO,CAAC,EAEZ,MAAMklC,EAAallC,EAAM0nB,GACnBuV,EAAWl3B,EAAKk3B,SAChB8G,EAAah+B,EAAKhG,OACxB,IAAI0c,GAAQ,EACR9e,GAAO,EACX,IAAI,IAAIrrB,EAAI,EAAGA,EAAI2qD,EAAS3rD,OAAQgB,IAAI,CACpC,MAAMg0B,EAAU22B,EAAS3qD,GACnB6yD,EAAapB,EAAWz9B,EAAQ5iB,OAAOgkC,GACvC0d,EAAYrB,EAAWz9B,EAAQ9b,KAAKk9B,GAC1C,GAAInlC,EAAgB43C,WAAW+K,EAAYC,EAAYC,GAAY,CAC/D3oB,EAAQyoB,IAAeC,EACvBxnC,EAAOunC,IAAeE,EACtB,KACJ,CACJ,CACA,MAAO,CACH3oB,QACA9e,OACAqC,QAER,CAEA,MAAMqlC,GACFrlD,YAAYsK,GACRnK,KAAK1M,EAAI6W,EAAK7W,EACd0M,KAAK0P,EAAIvF,EAAKuF,EACd1P,KAAK2f,OAASxV,EAAKwV,MACvB,CACAy7B,YAAYttC,EAAK4wC,EAAQv0C,GACrB,MAAM,EAAE7W,EAAE,EAAEoc,EAAE,OAAEiQ,GAAY3f,KAM5B,OALA0+C,EAASA,GAAU,CACfn7C,MAAO,EACP8G,IAAKjI,EAAgBigB,KAEzBvU,EAAImX,IAAI3xB,EAAGoc,EAAGiQ,EAAQ++B,EAAOr0C,IAAKq0C,EAAOn7C,OAAO,IACxC4G,EAAKu0C,MACjB,CACA79C,YAAYgf,GACR,MAAM,EAAEvsB,EAAE,EAAEoc,EAAE,OAAEiQ,GAAY3f,KACtByjB,EAAQ5D,EAAM4D,MACpB,MAAO,CACHnwB,EAAGA,EAAI/D,KAAK4zB,IAAIM,GAAS9D,EACzBjQ,EAAGA,EAAIngB,KAAK8zB,IAAII,GAAS9D,EACzB8D,QAER,EAiEJ,SAAS0hC,GAAUr3C,EAAK4tB,EAAQpmB,GAC5B,MAAMlP,EA/DV,SAAoBs1B,GAChB,MAAM,MAAE94B,EAAM,KAAEsM,EAAK,KAAE0W,GAAU8V,EACjC,GAAIt5B,EAAgB+I,eAAe+D,GAC/B,OAcP,SAAwBtM,EAAO+H,GAC5B,MAAMW,EAAO1I,EAAMiO,eAAelG,GAElC,OADgBW,GAAQ1I,EAAM0f,iBAAiB3X,GAC9BW,EAAKiE,QAAU,IACpC,CAlBe61C,CAAexiD,EAAOsM,GAEjC,GAAa,UAATA,EACA,OAjHR,SAAyBwsB,GACrB,MAAM,MAAEzxB,EAAM,MAAEU,EAAM,KAAEib,GAAU8V,EAC5B9b,EAAS,GACTk9B,EAAWl3B,EAAKk3B,SAChBuI,EAAez/B,EAAKhG,OACpB+kC,EAgBT,SAAuB16C,EAAOU,GAC3B,MAAM26C,EAAQ,GACRxrB,EAAQ7vB,EAAM+B,wBAAwB,QAC5C,IAAI,IAAI7Z,EAAI,EAAGA,EAAI2nC,EAAM3oC,OAAQgB,IAAI,CACjC,MAAMmZ,EAAOwuB,EAAM3nC,GACnB,GAAImZ,EAAKX,QAAUA,EACf,MAECW,EAAKsI,QACN0xC,EAAMR,QAAQx5C,EAAKiE,QAE3B,CACA,OAAO+1C,CACX,CA7BuBC,CAAct7C,EAAOU,GACxCg6C,EAAW1/C,KAAKy+C,GAAoB,CAChCpwD,EAAG,KACHoc,EAAGzF,EAAM8K,QACV6Q,IACH,IAAI,IAAIzzB,EAAI,EAAGA,EAAI2qD,EAAS3rD,OAAQgB,IAAI,CACpC,MAAMg0B,EAAU22B,EAAS3qD,GACzB,IAAI,IAAImM,EAAI6nB,EAAQ5iB,MAAOjF,GAAK6nB,EAAQ9b,IAAK/L,IACzCmmD,GAAe7kC,EAAQylC,EAAa/mD,GAAIqmD,EAEhD,CACA,OAAO,IAAIpI,GAAY,CACnB38B,SACAzW,QAAS,CAAC,GAElB,CA6Feq8C,CAAgB9pB,GAE3B,GAAa,UAATxsB,EACA,OAAO,EAEX,MAAMy0C,EAWV,SAAyBjoB,GAErB,OADcA,EAAOzxB,OAAS,CAAC,GACrBqe,yBAiBd,SAAiCoT,GAC7B,MAAM,MAAEzxB,EAAM,KAAEiF,GAAUwsB,EACpBvyB,EAAUc,EAAMd,QAChBhY,EAAS8Y,EAAM6I,YAAY3hB,OAC3BoS,EAAQ4F,EAAQiB,QAAUH,EAAMza,IAAMya,EAAMxa,IAC5Cqa,EAtLT,SAAyBoF,EAAMjF,EAAOoQ,GACnC,IAAIvQ,EAUJ,OARIA,EADS,UAAToF,EACQmL,EACQ,QAATnL,EACCjF,EAAMd,QAAQiB,QAAUH,EAAMxa,IAAMwa,EAAMza,IAC3C4S,EAAgBmG,SAAS2G,GACxBA,EAAKpF,MAELG,EAAMg3B,eAEXn3B,CACX,CA0KkB27C,CAAgBv2C,EAAMjF,EAAO1G,GACrC6C,EAAS,GACf,GAAI+C,EAAQgT,KAAK+K,SAAU,CACvB,MAAM9J,EAASnT,EAAMqe,yBAAyB,EAAG/kB,GACjD,OAAO,IAAI2hD,GAAU,CACjB5xD,EAAG8pB,EAAO9pB,EACVoc,EAAG0N,EAAO1N,EACViQ,OAAQ1V,EAAMge,8BAA8Bne,IAEpD,CACA,IAAI,IAAI3X,EAAI,EAAGA,EAAIhB,IAAUgB,EACzBiU,EAAOnB,KAAKgF,EAAMqe,yBAAyBn2B,EAAG2X,IAElD,OAAO1D,CACX,CAnCes/C,CAAwBhqB,GAIvC,SAA+BA,GAC3B,MAAM,MAAEzxB,EAAO,CAAC,EAAE,KAAEiF,GAAUwsB,EACxBkF,EApLT,SAAyB1xB,EAAMjF,GAC5B,IAAI22B,EAAQ,KAUZ,MATa,UAAT1xB,EACA0xB,EAAQ32B,EAAM8K,OACE,QAAT7F,EACP0xB,EAAQ32B,EAAM4K,IACPzS,EAAgBmG,SAAS2G,GAChC0xB,EAAQ32B,EAAM+P,iBAAiB9K,EAAKpF,OAC7BG,EAAMyS,eACbkkB,EAAQ32B,EAAMyS,gBAEXkkB,CACX,CAwKkB+kB,CAAgBz2C,EAAMjF,GACpC,GAAI7H,EAAgB+I,eAAey1B,GAAQ,CACvC,MAAM3lB,EAAahR,EAAM0S,eACzB,MAAO,CACHrpB,EAAG2nB,EAAa2lB,EAAQ,KACxBlxB,EAAGuL,EAAa,KAAO2lB,EAE/B,CACA,OAAO,IACX,CAbWglB,CAAsBlqB,EACjC,CAjBqBmqB,CAAgBnqB,GACjC,OAAIioB,aAAoBuB,GACbvB,EAEJD,GAAoBC,EAAU/9B,EACzC,CA+CmBkgC,CAAWpqB,IACpB,KAAE9V,EAAK,MAAE3b,EAAM,KAAEuC,GAAUkvB,EAC3BqqB,EAAWngC,EAAKzc,QAChBi7C,EAAa2B,EAAS72C,KACtB5O,EAAQylD,EAAS5kC,iBACjB,MAAE6kC,EAAO1lD,EAAM,MAAEglD,EAAOhlD,GAAW8jD,GAAc,CAAC,EACpDh+C,GAAUwf,EAAKhG,OAAOzuB,SACtBiR,EAAgBujC,SAAS73B,EAAKwH,GAatC,SAAgBxH,EAAK3H,GACjB,MAAM,KAAEyf,EAAK,OAAExf,EAAO,MAAE4/C,EAAM,MAAEV,EAAM,KAAEhwC,EAAK,MAAErL,GAAW9D,EACpDohC,EAAW3hB,EAAK5e,MAAQ,QAAUb,EAAIqG,KAC5CsB,EAAI62B,OACa,MAAb4C,GAAoB+d,IAAUU,IAC9BC,GAAan4C,EAAK1H,EAAQkP,EAAKT,KAC/B3F,GAAKpB,EAAK,CACN8X,OACAxf,SACA9F,MAAO0lD,EACP/7C,QACAs9B,aAEJz5B,EAAI+2B,UACJ/2B,EAAI62B,OACJshB,GAAan4C,EAAK1H,EAAQkP,EAAKP,SAEnC7F,GAAKpB,EAAK,CACN8X,OACAxf,SACA9F,MAAOglD,EACPr7C,QACAs9B,aAEJz5B,EAAI+2B,SACR,CArCQqhB,CAAOp4C,EAAK,CACR8X,OACAxf,SACA4/C,QACAV,QACAhwC,OACArL,QACAuC,SAEJpK,EAAgB0jC,WAAWh4B,GAEnC,CA2BA,SAASm4C,GAAan4C,EAAK1H,EAAQ+/C,GAC/B,MAAM,SAAErJ,EAAS,OAAEl9B,GAAYxZ,EAC/B,IAAIk2B,GAAQ,EACR8pB,GAAW,EACft4C,EAAIq3B,YACJ,IAAK,MAAMhf,KAAW22B,EAAS,CAC3B,MAAM,MAAEv5C,EAAM,IAAE8G,GAAS8b,EACnBS,EAAahH,EAAOrc,GACpBsjB,EAAYjH,EAAO4jC,GAAgBjgD,EAAO8G,EAAKuV,IACjD0c,GACAxuB,EAAIs3B,OAAOxe,EAAWtzB,EAAGszB,EAAWlX,GACpC4sB,GAAQ,IAERxuB,EAAIu3B,OAAOze,EAAWtzB,EAAG6yD,GACzBr4C,EAAIu3B,OAAOze,EAAWtzB,EAAGszB,EAAWlX,IAExC02C,IAAahgD,EAAOg1C,YAAYttC,EAAKqY,EAAS,CAC1C9N,KAAM+tC,IAENA,EACAt4C,EAAIyrC,YAEJzrC,EAAIu3B,OAAOxe,EAAUvzB,EAAG6yD,EAEhC,CACAr4C,EAAIu3B,OAAOj/B,EAAOk2B,QAAQhpC,EAAG6yD,GAC7Br4C,EAAIyrC,YACJzrC,EAAIqH,MACR,CACA,SAASjG,GAAKpB,EAAK3H,GACf,MAAM,KAAEyf,EAAK,OAAExf,EAAO,SAAEmhC,EAAS,MAAEjnC,EAAM,MAAE2J,GAAW9D,EAChD22C,EA/cV,SAAmBl3B,EAAMxf,EAAQmhC,GAC7B,MAAMuV,EAAWl3B,EAAKk3B,SAChBl9B,EAASgG,EAAKhG,OACdymC,EAAUjgD,EAAOwZ,OACjBioB,EAAQ,GACd,IAAK,MAAM1hB,KAAW22B,EAAS,CAC3B,IAAI,MAAEv5C,EAAM,IAAE8G,GAAS8b,EACvB9b,EAAMm5C,GAAgBjgD,EAAO8G,EAAKuV,GAClC,MAAM8+B,EAAS4E,GAAW/b,EAAU3nB,EAAOrc,GAAQqc,EAAOvV,GAAM8b,EAAQlf,MACxE,IAAKb,EAAO02C,SAAU,CAClBjV,EAAM5iC,KAAK,CACPy2B,OAAQvV,EACR/f,OAAQs4C,EACRn7C,MAAOqc,EAAOrc,GACd8G,IAAKuV,EAAOvV,KAEhB,QACJ,CACA,MAAMi8C,EAAiBlkD,EAAgB46C,eAAe52C,EAAQs4C,GAC9D,IAAK,MAAM6H,KAAOD,EAAe,CAC7B,MAAME,EAAYlD,GAAW/b,EAAU8e,EAAQE,EAAIhjD,OAAQ8iD,EAAQE,EAAIl8C,KAAMk8C,EAAIt/C,MAC3Ew/C,EAAcrkD,EAAgBskD,cAAcvgC,EAASvG,EAAQ4mC,GACnE,IAAK,MAAMG,KAAcF,EACrB5e,EAAM5iC,KAAK,CACPy2B,OAAQirB,EACRvgD,OAAQmgD,EACRhjD,MAAO,CACH,CAACgkC,GAAWkc,GAAS/E,EAAQ8H,EAAW,QAASj3D,KAAKC,MAE1D6a,IAAK,CACD,CAACk9B,GAAWkc,GAAS/E,EAAQ8H,EAAW,MAAOj3D,KAAKE,OAIpE,CACJ,CACA,OAAOo4C,CACX,CA0aqB8U,CAAU/2B,EAAMxf,EAAQmhC,GACzC,IAAK,MAAQ7L,OAAQkrB,EAAMxgD,OAAQmgD,EAAI,MAAEhjD,EAAM,IAAE8G,KAAUyyC,EAAS,CAChE,MAAQ97B,OAAO,gBAAEG,EAAiB7gB,GAAW,CAAC,GAAOsmD,EAC/CC,GAAsB,IAAXzgD,EACjB0H,EAAI62B,OACJ72B,EAAIoT,UAAYC,EAChB2lC,GAAWh5C,EAAK7D,EAAO48C,GAAYvD,GAAW/b,EAAUhkC,EAAO8G,IAC/DyD,EAAIq3B,YACJ,MAAMihB,IAAaxgC,EAAKw1B,YAAYttC,EAAK84C,GACzC,IAAI3/C,EACJ,GAAI4/C,EAAU,CACNT,EACAt4C,EAAIyrC,YAEJwN,GAAmBj5C,EAAK1H,EAAQiE,EAAKk9B,GAEzC,MAAMyf,IAAe5gD,EAAOg1C,YAAYttC,EAAKy4C,EAAK,CAC9CluC,KAAM+tC,EACNh8C,SAAS,IAEbnD,EAAOm/C,GAAYY,EACd//C,GACD8/C,GAAmBj5C,EAAK1H,EAAQ7C,EAAOgkC,EAE/C,CACAz5B,EAAIyrC,YACJzrC,EAAIoB,KAAKjI,EAAO,UAAY,WAC5B6G,EAAI+2B,SACR,CACJ,CACA,SAASiiB,GAAWh5C,EAAK7D,EAAOy0C,GAC5B,MAAM,IAAE7pC,EAAI,OAAEE,GAAY9K,EAAMrH,MAAM2S,WAChC,SAAEgyB,EAAS,MAAEhkC,EAAM,IAAE8G,GAASq0C,GAAU,CAAC,EAC9B,MAAbnX,IACAz5B,EAAIq3B,YACJr3B,EAAI8wC,KAAKr7C,EAAOsR,EAAKxK,EAAM9G,EAAOwR,EAASF,GAC3C/G,EAAIqH,OAEZ,CACA,SAAS4xC,GAAmBj5C,EAAK1H,EAAQyZ,EAAO0nB,GAC5C,MAAM0f,EAAoB7gD,EAAOvF,YAAYgf,EAAO0nB,GAChD0f,GACAn5C,EAAIu3B,OAAO4hB,EAAkB3zD,EAAG2zD,EAAkBv3C,EAE1D,CAEA,IAAI/E,GAAQ,CACRiC,GAAI,SACJs6C,oBAAqBtkD,EAAO49C,EAAOr3C,GAC/B,MAAMkJ,GAASzP,EAAM+N,KAAKC,UAAY,IAAIzf,OACpC6yD,EAAU,GAChB,IAAI14C,EAAMnZ,EAAGyzB,EAAM8V,EACnB,IAAIvpC,EAAI,EAAGA,EAAIkgB,IAASlgB,EACpBmZ,EAAO1I,EAAMiO,eAAe1e,GAC5ByzB,EAAOta,EAAKiE,QACZmsB,EAAS,KACL9V,GAAQA,EAAKzc,SAAWyc,aAAgB22B,KACxC7gB,EAAS,CACLoX,QAASlwC,EAAM0f,iBAAiBnwB,GAChCwY,MAAOxY,EACP+c,KAAMi1C,GAAYv+B,EAAMzzB,EAAGkgB,GAC3BzP,QACA4J,KAAMlB,EAAKY,WAAW/C,QAAQ+G,UAC9BjG,MAAOqB,EAAKQ,OACZ8Z,SAGRta,EAAK67C,QAAUzrB,EACfsoB,EAAQ/+C,KAAKy2B,GAEjB,IAAIvpC,EAAI,EAAGA,EAAIkgB,IAASlgB,EACpBupC,EAASsoB,EAAQ7xD,GACZupC,IAA0B,IAAhBA,EAAOxsB,OAGtBwsB,EAAOxsB,KAAO60C,GAAeC,EAAS7xD,EAAGgX,EAAQ86C,WAEzD,EACAmD,WAAYxkD,EAAO49C,EAAOr3C,GACtB,MAAMhF,EAA4B,eAArBgF,EAAQk+C,SACf78C,EAAW5H,EAAM2nB,+BACjBjV,EAAO1S,EAAM2S,UACnB,IAAI,IAAIpjB,EAAIqY,EAASrZ,OAAS,EAAGgB,GAAK,IAAKA,EAAE,CACzC,MAAMupC,EAASlxB,EAASrY,GAAGg1D,QACtBzrB,IAGLA,EAAO9V,KAAKkB,oBAAoBxR,EAAMomB,EAAOlvB,MACzCrI,GAAQu3B,EAAOxsB,MACfi2C,GAAUviD,EAAMkL,IAAK4tB,EAAQpmB,GAErC,CACJ,EACAgyC,mBAAoB1kD,EAAO49C,EAAOr3C,GAC9B,GAAyB,uBAArBA,EAAQk+C,SACR,OAEJ,MAAM78C,EAAW5H,EAAM2nB,+BACvB,IAAI,IAAIp4B,EAAIqY,EAASrZ,OAAS,EAAGgB,GAAK,IAAKA,EAAE,CACzC,MAAMupC,EAASlxB,EAASrY,GAAGg1D,QACvBrD,GAAiBpoB,IACjBypB,GAAUviD,EAAMkL,IAAK4tB,EAAQ94B,EAAM2S,UAE3C,CACJ,EACAgyC,kBAAmB3kD,EAAO+V,EAAMxP,GAC5B,MAAMuyB,EAAS/iB,EAAKrN,KAAK67C,QACpBrD,GAAiBpoB,IAAgC,sBAArBvyB,EAAQk+C,UAGzClC,GAAUviD,EAAMkL,IAAK4tB,EAAQ94B,EAAM2S,UACvC,EACA9M,SAAU,CACNw7C,WAAW,EACXoD,SAAU,sBAIlB,MAAMG,GAAa,CAACC,EAAWhhB,KAC3B,IAAI,UAAEihB,EAAWjhB,EAAS,SAAEkhB,EAAUlhB,GAAcghB,EAKpD,OAJIA,EAAUG,gBACVF,EAAYn4D,KAAKE,IAAIi4D,EAAWjhB,GAChCkhB,EAAWF,EAAUI,iBAAmBt4D,KAAKE,IAAIk4D,EAAUlhB,IAExD,CACHkhB,WACAD,YACAI,WAAYv4D,KAAKC,IAAIi3C,EAAUihB,GAClC,EAGL,MAAMK,WAAe1xB,GACpBx2B,YAAYsI,GACLqU,QACAxc,KAAKgoD,QAAS,EACdhoD,KAAKioD,eAAiB,GAC7BjoD,KAAKkoD,aAAe,KACbloD,KAAKmoD,cAAe,EACpBnoD,KAAK4C,MAAQuF,EAAOvF,MACpB5C,KAAKmJ,QAAUhB,EAAOgB,QACtBnJ,KAAK8N,IAAM3F,EAAO2F,IAClB9N,KAAKooD,iBAAc32D,EACnBuO,KAAKqoD,iBAAc52D,EACnBuO,KAAKsoD,gBAAa72D,EAClBuO,KAAKokB,eAAY3yB,EACjBuO,KAAKmkB,cAAW1yB,EAChBuO,KAAK6U,SAAMpjB,EACXuO,KAAK+U,YAAStjB,EACduO,KAAKgV,UAAOvjB,EACZuO,KAAK8U,WAAQrjB,EACbuO,KAAKqd,YAAS5rB,EACduO,KAAKsd,WAAQ7rB,EACbuO,KAAKu4B,cAAW9mC,EAChBuO,KAAKqqB,cAAW54B,EAChBuO,KAAKO,YAAS9O,EACduO,KAAKuuB,cAAW98B,CACpB,CACA+V,OAAO2c,EAAUC,EAAWkW,GACxBt6B,KAAKmkB,SAAWA,EAChBnkB,KAAKokB,UAAYA,EACjBpkB,KAAKu4B,SAAW+B,EAChBt6B,KAAK26B,gBACL36B,KAAKuoD,cACLvoD,KAAKg9B,KACT,CACArC,gBACQ36B,KAAK2c,gBACL3c,KAAKsd,MAAQtd,KAAKmkB,SAClBnkB,KAAKgV,KAAOhV,KAAKu4B,SAASvjB,KAC1BhV,KAAK8U,MAAQ9U,KAAKsd,QAElBtd,KAAKqd,OAASrd,KAAKokB,UACnBpkB,KAAK6U,IAAM7U,KAAKu4B,SAAS1jB,IACzB7U,KAAK+U,OAAS/U,KAAKqd,OAE3B,CACAkrC,cACI,MAAMd,EAAYznD,KAAKmJ,QAAQ0J,QAAU,CAAC,EAC1C,IAAIu1C,EAAchmD,EAAgBi4B,SAASotB,EAAU3mC,eAAgB,CACjE9gB,KAAK4C,OACN5C,OAAS,GACRynD,EAAUt6C,SACVi7C,EAAcA,EAAYj7C,QAAQjJ,GAAOujD,EAAUt6C,OAAOjJ,EAAMlE,KAAK4C,MAAM+N,SAE3E82C,EAAU/tC,OACV0uC,EAAcA,EAAY1uC,MAAK,CAACrpB,EAAGC,IAAIm3D,EAAU/tC,KAAKrpB,EAAGC,EAAG0P,KAAK4C,MAAM+N,SAEvE3Q,KAAKmJ,QAAQiB,SACbg+C,EAAYh+C,UAEhBpK,KAAKooD,YAAcA,CACvB,CACAprB,MACI,MAAM,QAAE7zB,EAAQ,IAAE2E,GAAS9N,KAC3B,IAAKmJ,EAAQ8d,QAET,YADAjnB,KAAKsd,MAAQtd,KAAKqd,OAAS,GAG/B,MAAMoqC,EAAYt+C,EAAQ0J,OACpB21C,EAAYpmD,EAAgB41B,OAAOyvB,EAAU1vB,MAC7C0O,EAAW+hB,EAAUz+C,KACrB80B,EAAc7+B,KAAKyoD,uBACnB,SAAEd,EAAS,WAAEG,GAAgBN,GAAWC,EAAWhhB,GACzD,IAAInpB,EAAOD,EACXvP,EAAIiqB,KAAOywB,EAAUnoB,OACjBrgC,KAAK2c,gBACLW,EAAQtd,KAAKmkB,SACb9G,EAASrd,KAAK0oD,SAAS7pB,EAAa4H,EAAUkhB,EAAUG,GAAc,KAEtEzqC,EAASrd,KAAKokB,UACd9G,EAAQtd,KAAK2oD,SAAS9pB,EAAa2pB,EAAWb,EAAUG,GAAc,IAE1E9nD,KAAKsd,MAAQ/tB,KAAKE,IAAI6tB,EAAOnU,EAAQgb,UAAYnkB,KAAKmkB,UACtDnkB,KAAKqd,OAAS9tB,KAAKE,IAAI4tB,EAAQlU,EAAQib,WAAapkB,KAAKokB,UAC7D,CACHskC,SAAS7pB,EAAa4H,EAAUkhB,EAAUG,GACnC,MAAM,IAAEh6C,EAAI,SAAEqW,EAAWhb,SAAW0J,QAAQ,QAAE8b,KAAmB3uB,KAC3D4oD,EAAW5oD,KAAKioD,eAAiB,GACjCK,EAAatoD,KAAKsoD,WAAa,CACjC,GAEErwB,EAAa6vB,EAAan5B,EAChC,IAAIk6B,EAAchqB,EAClB/wB,EAAIw1B,UAAY,OAChBx1B,EAAI21B,aAAe,SACnB,IAAIqlB,GAAO,EACPj0C,GAAOojB,EAkBX,OAjBAj4B,KAAKooD,YAAYjlD,SAAQ,CAACue,EAAYvvB,KAClC,MAAM42D,EAAYpB,EAAWlhB,EAAW,EAAI34B,EAAIk7C,YAAYtnC,EAAWT,MAAM3D,OACnE,IAANnrB,GAAWm2D,EAAWA,EAAWn3D,OAAS,GAAK43D,EAAY,EAAIp6B,EAAUxK,KACzE0kC,GAAe5wB,EACfqwB,EAAWA,EAAWn3D,QAAUgB,EAAI,EAAI,EAAI,IAAM,EAClD0iB,GAAOojB,EACP6wB,KAEJF,EAASz2D,GAAK,CACV6iB,KAAM,EACNH,MACAi0C,MACAxrC,MAAOyrC,EACP1rC,OAAQyqC,GAEZQ,EAAWA,EAAWn3D,OAAS,IAAM43D,EAAYp6B,CAAO,IAErDk6B,CACX,CACAF,SAAS9pB,EAAa2pB,EAAWb,EAAUsB,GACvC,MAAM,IAAEn7C,EAAI,UAAEsW,EAAYjb,SAAW0J,QAAQ,QAAE8b,KAAmB3uB,KAC5D4oD,EAAW5oD,KAAKioD,eAAiB,GACjCI,EAAcroD,KAAKqoD,YAAc,GACjCa,EAAc9kC,EAAYya,EAChC,IAAIsqB,EAAax6B,EACby6B,EAAkB,EAClBC,EAAmB,EACnBr0C,EAAO,EACPs0C,EAAM,EA4BV,OA3BAtpD,KAAKooD,YAAYjlD,SAAQ,CAACue,EAAYvvB,KAClC,MAAM,UAAE42D,EAAU,WAAEjB,GAqRhC,SAA2BH,EAAUa,EAAW16C,EAAK4T,EAAYunC,GAC7D,MAAMF,EAOV,SAA4BrnC,EAAYimC,EAAUa,EAAW16C,GACzD,IAAIy7C,EAAiB7nC,EAAWT,KAIhC,OAHIsoC,GAA4C,iBAAnBA,IACzBA,EAAiBA,EAAenkD,QAAO,CAAC/U,EAAGC,IAAID,EAAEc,OAASb,EAAEa,OAASd,EAAIC,KAEtEq3D,EAAWa,EAAUz+C,KAAO,EAAI+D,EAAIk7C,YAAYO,GAAgBjsC,KAC3E,CAbsBksC,CAAmB9nC,EAAYimC,EAAUa,EAAW16C,GAChEg6C,EAaV,SAA6BmB,EAAavnC,EAAY+nC,GAClD,IAAI3B,EAAamB,EAIjB,MAH+B,iBAApBvnC,EAAWT,OAClB6mC,EAAa4B,GAA0BhoC,EAAY+nC,IAEhD3B,CACX,CAnBuB6B,CAAoBV,EAAavnC,EAAY8mC,EAAUvwB,YAC1E,MAAO,CACH8wB,YACAjB,aAER,CA5RgD8B,CAAkBjC,EAAUa,EAAW16C,EAAK4T,EAAYunC,GACxF92D,EAAI,GAAKk3D,EAAmBvB,EAAa,EAAIn5B,EAAUu6B,IACvDC,GAAcC,EAAkBz6B,EAChC05B,EAAYpjD,KAAK,CACbqY,MAAO8rC,EACP/rC,OAAQgsC,IAEZr0C,GAAQo0C,EAAkBz6B,EAC1B26B,IACAF,EAAkBC,EAAmB,GAEzCT,EAASz2D,GAAK,CACV6iB,OACAH,IAAKw0C,EACLC,MACAhsC,MAAOyrC,EACP1rC,OAAQyqC,GAEZsB,EAAkB75D,KAAKC,IAAI45D,EAAiBL,GAC5CM,GAAoBvB,EAAan5B,CAAO,IAE5Cw6B,GAAcC,EACdf,EAAYpjD,KAAK,CACbqY,MAAO8rC,EACP/rC,OAAQgsC,IAELF,CACX,CACAU,iBACI,IAAK7pD,KAAKmJ,QAAQ8d,QACd,OAEJ,MAAM4X,EAAc7+B,KAAKyoD,uBACjBR,eAAgBW,EAAWz/C,SAAS,MAAEgvB,EAAQtlB,QAAQ,QAAE8b,GAAW,IAAEm7B,IAAY9pD,KACnF+pD,EAAY3nD,EAAgB4nD,cAAcF,EAAK9pD,KAAKgV,KAAMhV,KAAKsd,OACrE,GAAItd,KAAK2c,eAAgB,CACrB,IAAImsC,EAAM,EACN9zC,EAAO5S,EAAgB8jC,eAAe/N,EAAOn4B,KAAKgV,KAAO2Z,EAAS3uB,KAAK8U,MAAQ9U,KAAKsoD,WAAWQ,IACnG,IAAK,MAAMmB,KAAUrB,EACbE,IAAQmB,EAAOnB,MACfA,EAAMmB,EAAOnB,IACb9zC,EAAO5S,EAAgB8jC,eAAe/N,EAAOn4B,KAAKgV,KAAO2Z,EAAS3uB,KAAK8U,MAAQ9U,KAAKsoD,WAAWQ,KAEnGmB,EAAOp1C,KAAO7U,KAAK6U,IAAMgqB,EAAclQ,EACvCs7B,EAAOj1C,KAAO+0C,EAAUG,WAAWH,EAAUz2D,EAAE0hB,GAAOi1C,EAAO3sC,OAC7DtI,GAAQi1C,EAAO3sC,MAAQqR,CAE/B,KAAO,CACH,IAAI26B,EAAM,EACNz0C,EAAMzS,EAAgB8jC,eAAe/N,EAAOn4B,KAAK6U,IAAMgqB,EAAclQ,EAAS3uB,KAAK+U,OAAS/U,KAAKqoD,YAAYiB,GAAKjsC,QACtH,IAAK,MAAM4sC,KAAUrB,EACbqB,EAAOX,MAAQA,IACfA,EAAMW,EAAOX,IACbz0C,EAAMzS,EAAgB8jC,eAAe/N,EAAOn4B,KAAK6U,IAAMgqB,EAAclQ,EAAS3uB,KAAK+U,OAAS/U,KAAKqoD,YAAYiB,GAAKjsC,SAEtH4sC,EAAOp1C,IAAMA,EACbo1C,EAAOj1C,MAAQhV,KAAKgV,KAAO2Z,EAC3Bs7B,EAAOj1C,KAAO+0C,EAAUG,WAAWH,EAAUz2D,EAAE22D,EAAOj1C,MAAOi1C,EAAO3sC,OACpEzI,GAAOo1C,EAAO5sC,OAASsR,CAE/B,CACJ,CACAhS,eACI,MAAiC,QAA1B3c,KAAKmJ,QAAQkhB,UAAgD,WAA1BrqB,KAAKmJ,QAAQkhB,QAC3D,CACAlmB,OACI,GAAInE,KAAKmJ,QAAQ8d,QAAS,CACtB,MAAMnZ,EAAM9N,KAAK8N,IACjB1L,EAAgBujC,SAAS73B,EAAK9N,MAC9BA,KAAKmqD,QACL/nD,EAAgB0jC,WAAWh4B,EAC/B,CACJ,CACHq8C,QACO,MAAQhhD,QAASgB,EAAK,YAAEk+C,EAAY,WAAEC,EAAW,IAAEx6C,GAAS9N,MACtD,MAAEm4B,EAAQtlB,OAAQ40C,GAAet9C,EACjCigD,EAAehoD,EAAgBqG,SAASnI,MACxCypD,EAAY3nD,EAAgB4nD,cAAc7/C,EAAK2/C,IAAK9pD,KAAKgV,KAAMhV,KAAKsd,OACpEkrC,EAAYpmD,EAAgB41B,OAAOyvB,EAAU1vB,OAC7C,QAAEpJ,GAAa84B,EACfhhB,EAAW+hB,EAAUz+C,KACrBsgD,EAAe5jB,EAAW,EAChC,IAAI6jB,EACJtqD,KAAK+lC,YACLj4B,EAAIw1B,UAAYymB,EAAUzmB,UAAU,QACpCx1B,EAAI21B,aAAe,SACnB31B,EAAIyT,UAAY,GAChBzT,EAAIiqB,KAAOywB,EAAUnoB,OACrB,MAAM,SAAEsnB,EAAS,UAAED,EAAU,WAAEI,GAAgBN,GAAWC,EAAWhhB,GAqD/D9pB,EAAe3c,KAAK2c,eACpBkiB,EAAc7+B,KAAKyoD,sBAErB6B,EADA3tC,EACS,CACLrpB,EAAG8O,EAAgB8jC,eAAe/N,EAAOn4B,KAAKgV,KAAO2Z,EAAS3uB,KAAK8U,MAAQwzC,EAAW,IACtF54C,EAAG1P,KAAK6U,IAAM8Z,EAAUkQ,EACxBjZ,KAAM,GAGD,CACLtyB,EAAG0M,KAAKgV,KAAO2Z,EACfjf,EAAGtN,EAAgB8jC,eAAe/N,EAAOn4B,KAAK6U,IAAMgqB,EAAclQ,EAAS3uB,KAAK+U,OAASszC,EAAY,GAAGhrC,QACxGuI,KAAM,GAGdxjB,EAAgBmoD,sBAAsBvqD,KAAK8N,IAAK3D,EAAKqgD,eACrD,MAAMvyB,EAAa6vB,EAAan5B,EAChC3uB,KAAKooD,YAAYjlD,SAAQ,CAACue,EAAYvvB,KAClC2b,EAAIsT,YAAcM,EAAWJ,UAC7BxT,EAAIoT,UAAYQ,EAAWJ,UAC3B,MAAMmpC,EAAY38C,EAAIk7C,YAAYtnC,EAAWT,MAAM3D,MAC7CgmB,EAAYymB,EAAUzmB,UAAU5hB,EAAW4hB,YAAc5hB,EAAW4hB,UAAYmkB,EAAUnkB,YAC1FhmB,EAAQqqC,EAAW0C,EAAeI,EACxC,IAAIn3D,EAAIg3D,EAAOh3D,EACXoc,EAAI46C,EAAO56C,EAiBf,GAhBAq6C,EAAUW,SAAS1qD,KAAKsd,OACpBX,EACIxqB,EAAI,GAAKmB,EAAIgqB,EAAQqR,EAAU3uB,KAAK8U,QACpCpF,EAAI46C,EAAO56C,GAAKuoB,EAChBqyB,EAAO1kC,OACPtyB,EAAIg3D,EAAOh3D,EAAI8O,EAAgB8jC,eAAe/N,EAAOn4B,KAAKgV,KAAO2Z,EAAS3uB,KAAK8U,MAAQwzC,EAAWgC,EAAO1kC,QAEtGzzB,EAAI,GAAKud,EAAIuoB,EAAaj4B,KAAK+U,SACtCzhB,EAAIg3D,EAAOh3D,EAAIA,EAAI+0D,EAAYiC,EAAO1kC,MAAMtI,MAAQqR,EACpD27B,EAAO1kC,OACPlW,EAAI46C,EAAO56C,EAAItN,EAAgB8jC,eAAe/N,EAAOn4B,KAAK6U,IAAMgqB,EAAclQ,EAAS3uB,KAAK+U,OAASszC,EAAYiC,EAAO1kC,MAAMvI,SAvFhH,SAAS/pB,EAAGoc,EAAGgS,GACjC,GAAIhE,MAAMiqC,IAAaA,GAAY,GAAKjqC,MAAMgqC,IAAcA,EAAY,EACpE,OAEJ55C,EAAI62B,OACJ,MAAMpjB,EAAYnf,EAAgByN,eAAe6R,EAAWH,UAAW,GAQvE,GAPAzT,EAAIoT,UAAY9e,EAAgByN,eAAe6R,EAAWR,UAAWkpC,GACrEt8C,EAAI6sC,QAAUv4C,EAAgByN,eAAe6R,EAAWi5B,QAAS,QACjE7sC,EAAIo3B,eAAiB9iC,EAAgByN,eAAe6R,EAAWwjB,eAAgB,GAC/Ep3B,EAAIysC,SAAWn4C,EAAgByN,eAAe6R,EAAW64B,SAAU,SACnEzsC,EAAIyT,UAAYA,EAChBzT,EAAIsT,YAAchf,EAAgByN,eAAe6R,EAAWN,YAAagpC,GACzEt8C,EAAIm3B,YAAY7iC,EAAgByN,eAAe6R,EAAWipC,SAAU,KAChElD,EAAUG,cAAe,CACzB,MAAMgD,EAAc,CAChBjrC,OAAQ+nC,EAAYn4D,KAAKs7D,MAAQ,EACjC9pC,WAAYW,EAAWX,WACvBV,SAAUqB,EAAWrB,SACrBmB,YAAaD,GAEXwD,EAAUglC,EAAUe,MAAMx3D,EAAGq0D,EAAW,GACxC3iC,EAAUtV,EAAI26C,EACpBjoD,EAAgB2oD,gBAAgBj9C,EAAK88C,EAAa7lC,EAASC,EAASyiC,EAAUI,iBAAmBF,EACrG,KAAO,CACH,MAAMqD,EAAUt7C,EAAIngB,KAAKC,KAAKi3C,EAAWihB,GAAa,EAAG,GACnDuD,EAAWlB,EAAUG,WAAW52D,EAAGq0D,GACnC5P,EAAe31C,EAAgBk9C,cAAc59B,EAAWq2B,cAC9DjqC,EAAIq3B,YACA/mC,OAAO6K,OAAO8uC,GAAc9M,MAAM97C,GAAU,IAANA,IACtCiT,EAAgB49C,mBAAmBlyC,EAAK,CACpCxa,EAAG23D,EACHv7C,EAAGs7C,EACH/4D,EAAG01D,EACHr4D,EAAGo4D,EACH/nC,OAAQo4B,IAGZjqC,EAAI8wC,KAAKqM,EAAUD,EAASrD,EAAUD,GAE1C55C,EAAIoB,OACc,IAAdqS,GACAzT,EAAIw3B,QAEZ,CACAx3B,EAAI+2B,SACR,CA6CIqmB,CADcnB,EAAUz2D,EAAEA,GACLoc,EAAGgS,GACxBpuB,EAAI8O,EAAgB+oD,OAAO7nB,EAAWhwC,EAAIq0D,EAAW0C,EAAc1tC,EAAerpB,EAAIgqB,EAAQtd,KAAK8U,MAAO3K,EAAK2/C,KA7ClG,SAASx2D,EAAGoc,EAAGgS,GAC5Btf,EAAgByjC,WAAW/3B,EAAK4T,EAAWT,KAAM3tB,EAAGoc,EAAIo4C,EAAa,EAAGU,EAAW,CAC/E4C,cAAe1pC,EAAW9N,OAC1B0vB,UAAWymB,EAAUzmB,UAAU5hB,EAAW4hB,YAElD,CAyCI+nB,CAAStB,EAAUz2D,EAAEA,GAAIoc,EAAGgS,GACxB/E,EACA2tC,EAAOh3D,GAAKgqB,EAAQqR,OACjB,GAA+B,iBAApBjN,EAAWT,KAAmB,CAC5C,MAAMwoC,EAAiBjB,EAAUvwB,WACjCqyB,EAAO56C,GAAKg6C,GAA0BhoC,EAAY+nC,EACtD,MACIa,EAAO56C,GAAKuoB,CAChB,IAEJ71B,EAAgBkpD,qBAAqBtrD,KAAK8N,IAAK3D,EAAKqgD,cACxD,CACHzkB,YACO,MAAM57B,EAAOnK,KAAKmJ,QACZw1B,EAAYx0B,EAAKq0B,MACjB+sB,EAAYnpD,EAAgB41B,OAAO2G,EAAU5G,MAC7CyzB,EAAeppD,EAAgBitB,UAAUsP,EAAUhQ,SACzD,IAAKgQ,EAAU1X,QACX,OAEJ,MAAM8iC,EAAY3nD,EAAgB4nD,cAAc7/C,EAAK2/C,IAAK9pD,KAAKgV,KAAMhV,KAAKsd,OACpExP,EAAM9N,KAAK8N,IACXuc,EAAWsU,EAAUtU,SACrBggC,EAAekB,EAAUxhD,KAAO,EAChC0hD,EAA6BD,EAAa32C,IAAMw1C,EACtD,IAAI36C,EACAsF,EAAOhV,KAAKgV,KACZmP,EAAWnkB,KAAKsd,MACpB,GAAItd,KAAK2c,eACLwH,EAAW50B,KAAKC,OAAOwQ,KAAKsoD,YAC5B54C,EAAI1P,KAAK6U,IAAM42C,EACfz2C,EAAO5S,EAAgB8jC,eAAe/7B,EAAKguB,MAAOnjB,EAAMhV,KAAK8U,MAAQqP,OAClE,CACH,MAAMC,EAAYpkB,KAAKqoD,YAAYjjD,QAAO,CAACC,EAAK0E,IAAOxa,KAAKC,IAAI6V,EAAK0E,EAAKsT,SAAS,GACnF3N,EAAI+7C,EAA6BrpD,EAAgB8jC,eAAe/7B,EAAKguB,MAAOn4B,KAAK6U,IAAK7U,KAAK+U,OAASqP,EAAYja,EAAK0I,OAAO8b,QAAU3uB,KAAKyoD,sBAC/I,CACA,MAAMn1D,EAAI8O,EAAgB8jC,eAAe7b,EAAUrV,EAAMA,EAAOmP,GAChErW,EAAIw1B,UAAYymB,EAAUzmB,UAAUlhC,EAAgBg2B,mBAAmB/N,IACvEvc,EAAI21B,aAAe,SACnB31B,EAAIsT,YAAcud,EAAUr+B,MAC5BwN,EAAIoT,UAAYyd,EAAUr+B,MAC1BwN,EAAIiqB,KAAOwzB,EAAUlrB,OACrBj+B,EAAgByjC,WAAW/3B,EAAK6wB,EAAU1d,KAAM3tB,EAAGoc,EAAG67C,EAC1D,CACH9C,sBACO,MAAM9pB,EAAY3+B,KAAKmJ,QAAQq1B,MACzB+sB,EAAYnpD,EAAgB41B,OAAO2G,EAAU5G,MAC7CyzB,EAAeppD,EAAgBitB,UAAUsP,EAAUhQ,SACzD,OAAOgQ,EAAU1X,QAAUskC,EAAUtzB,WAAauzB,EAAanuC,OAAS,CAC5E,CACHquC,iBAAiBp4D,EAAGoc,GACb,IAAIvd,EAAGw5D,EAAQC,EACf,GAAIxpD,EAAgB43C,WAAW1mD,EAAG0M,KAAKgV,KAAMhV,KAAK8U,QAAU1S,EAAgB43C,WAAWtqC,EAAG1P,KAAK6U,IAAK7U,KAAK+U,QAErG,IADA62C,EAAK5rD,KAAKioD,eACN91D,EAAI,EAAGA,EAAIy5D,EAAGz6D,SAAUgB,EAExB,GADAw5D,EAASC,EAAGz5D,GACRiQ,EAAgB43C,WAAW1mD,EAAGq4D,EAAO32C,KAAM22C,EAAO32C,KAAO22C,EAAOruC,QAAUlb,EAAgB43C,WAAWtqC,EAAGi8C,EAAO92C,IAAK82C,EAAO92C,IAAM82C,EAAOtuC,QACxI,OAAOrd,KAAKooD,YAAYj2D,GAIpC,OAAO,IACX,CACH05D,YAAYp7D,GACL,MAAM0Z,EAAOnK,KAAKmJ,QAClB,IAyDR,SAAoBrJ,EAAMqK,GACtB,QAAc,cAATrK,GAAiC,aAATA,IAAyBqK,EAAK6sC,UAAW7sC,EAAK2hD,aAGvE3hD,EAAKsX,SAAqB,UAAT3hB,GAA6B,YAATA,EAI7C,CAjEaisD,CAAWt7D,EAAEqP,KAAMqK,GACpB,OAEJ,MAAM6hD,EAAchsD,KAAK0rD,iBAAiBj7D,EAAE6C,EAAG7C,EAAEif,GACjD,GAAe,cAAXjf,EAAEqP,MAAmC,aAAXrP,EAAEqP,KAAqB,CACjD,MAAM+6C,EAAW76C,KAAKkoD,aAChB+D,GA3XK37D,EA2X2B07D,EA3XjB,QAAb37D,EA2XoBwqD,IA3XO,OAANvqD,GAAcD,EAAE4a,eAAiB3a,EAAE2a,cAAgB5a,EAAEsa,QAAUra,EAAEqa,OA4X1FkwC,IAAaoR,GACb7pD,EAAgBi4B,SAASlwB,EAAK2hD,QAAS,CACnCr7D,EACAoqD,EACA76C,MACDA,MAEPA,KAAKkoD,aAAe8D,EAChBA,IAAgBC,GAChB7pD,EAAgBi4B,SAASlwB,EAAK6sC,QAAS,CACnCvmD,EACAu7D,EACAhsD,MACDA,KAEX,MAAWgsD,GACP5pD,EAAgBi4B,SAASlwB,EAAKsX,QAAS,CACnChxB,EACAu7D,EACAhsD,MACDA,MAhZI,IAAC3P,EAAGC,CAkZnB,EAwBJ,SAASo5D,GAA0BhoC,EAAY+nC,GAE3C,OAAOA,GADa/nC,EAAWT,KAAOS,EAAWT,KAAK9vB,OAAS,GAAM,EAEzE,CAUA,IAAI+6D,GAAgB,CAChBt/C,GAAI,SACPu/C,SAAUpE,GACPxkD,MAAOX,EAAO49C,EAAOr3C,GACjB,MAAM0X,EAASje,EAAMie,OAAS,IAAIknC,GAAO,CACrCj6C,IAAKlL,EAAMkL,IACX3E,UACAvG,UAEJksB,GAAQxmB,UAAU1F,EAAOie,EAAQ1X,GACjC2lB,GAAQC,OAAOnsB,EAAOie,EAC1B,EACArb,KAAM5C,GACFksB,GAAQI,UAAUtsB,EAAOA,EAAMie,eACxBje,EAAMie,MACjB,EACAuZ,aAAcx3B,EAAO49C,EAAOr3C,GACxB,MAAM0X,EAASje,EAAMie,OACrBiO,GAAQxmB,UAAU1F,EAAOie,EAAQ1X,GACjC0X,EAAO1X,QAAUA,CACrB,EACA+zB,YAAat6B,GACT,MAAMie,EAASje,EAAMie,OACrBA,EAAO0nC,cACP1nC,EAAOgpC,gBACX,EACAuC,WAAYxpD,EAAO+V,GACVA,EAAKw9B,QACNvzC,EAAMie,OAAOgrC,YAAYlzC,EAAK5T,MAEtC,EACA0D,SAAU,CACNwe,SAAS,EACToD,SAAU,MACV8N,MAAO,SACP5J,UAAU,EACVnkB,SAAS,EACT7J,OAAQ,IACRkhB,QAAShxB,EAAGixB,EAAYb,GACpB,MAAMlW,EAAQ+W,EAAWzW,aACnBohD,EAAKxrC,EAAOje,MACdypD,EAAG/pC,iBAAiB3X,IACpB0hD,EAAGrX,KAAKrqC,GACR+W,EAAW9N,QAAS,IAEpBy4C,EAAGpX,KAAKtqC,GACR+W,EAAW9N,QAAS,EAE5B,EACAojC,QAAS,KACT8U,QAAS,KACTj5C,OAAQ,CACJvS,MAAQwN,GAAMA,EAAIlL,MAAMuG,QAAQ7I,MAChCqnD,SAAU,GACVh5B,QAAS,GACT7N,eAAgBle,GACZ,MAAMgO,EAAWhO,EAAM+N,KAAKC,UACpBiC,QAAQ,cAAE+0C,EAAc,WAAE7mC,EAAW,UAAEuiB,EAAU,MAAEhjC,EAAM,gBAAEgsD,EAAgB,aAAEvU,IAAqBn1C,EAAMie,OAAO1X,QACvH,OAAOvG,EAAM6H,yBAAyBhY,KAAK6Y,IACvC,MAAM0V,EAAQ1V,EAAKY,WAAWwJ,SAASkyC,EAAgB,OAAIn2D,GACrD+vB,EAAcpf,EAAgBitB,UAAUrO,EAAMQ,aACpD,MAAO,CACHP,KAAMrQ,EAAStF,EAAKX,OAAO+J,MAC3BwM,UAAWF,EAAMG,gBACjBG,UAAWhhB,EACXsT,QAAStI,EAAKwnC,QACd6H,QAAS35B,EAAM45B,eACf+P,SAAU3pC,EAAM4hB,WAChBsC,eAAgBlkB,EAAM8hB,iBACtByX,SAAUv5B,EAAMy4B,gBAChBl4B,WAAYC,EAAYlE,MAAQkE,EAAYnE,QAAU,EACtD+D,YAAaJ,EAAMK,YACnBN,WAAYA,GAAcC,EAAMD,WAChCV,SAAUW,EAAMX,SAChBijB,UAAWA,GAAatiB,EAAMsiB,UAC9ByU,aAAcuU,IAAoBvU,GAAgB/2B,EAAM+2B,cACxD9sC,aAAcK,EAAKX,MACtB,GACF3K,KACP,GAEJw+B,MAAO,CACHl+B,MAAQwN,GAAMA,EAAIlL,MAAMuG,QAAQ7I,MAChC2mB,SAAS,EACToD,SAAU,SACVpJ,KAAM,KAGdinB,YAAa,CACT1nB,YAAc1C,IAAQA,EAAK4C,WAAW,MACtC7N,OAAQ,CACJ2N,YAAc1C,IAAQ,CACd,iBACA,SACA,QACF0S,SAAS1S,MAK3B,MAAMyuC,WAAcl2B,GACnBx2B,YAAYsI,GACLqU,QACAxc,KAAK4C,MAAQuF,EAAOvF,MACpB5C,KAAKmJ,QAAUhB,EAAOgB,QACtBnJ,KAAK8N,IAAM3F,EAAO2F,IAClB9N,KAAKwsD,cAAW/6D,EAChBuO,KAAK6U,SAAMpjB,EACXuO,KAAK+U,YAAStjB,EACduO,KAAKgV,UAAOvjB,EACZuO,KAAK8U,WAAQrjB,EACbuO,KAAKsd,WAAQ7rB,EACbuO,KAAKqd,YAAS5rB,EACduO,KAAKqqB,cAAW54B,EAChBuO,KAAKO,YAAS9O,EACduO,KAAKuuB,cAAW98B,CACpB,CACA+V,OAAO2c,EAAUC,GACb,MAAMja,EAAOnK,KAAKmJ,QAGlB,GAFAnJ,KAAKgV,KAAO,EACZhV,KAAK6U,IAAM,GACN1K,EAAK8c,QAEN,YADAjnB,KAAKsd,MAAQtd,KAAKqd,OAASrd,KAAK8U,MAAQ9U,KAAK+U,OAAS,GAG1D/U,KAAKsd,MAAQtd,KAAK8U,MAAQqP,EAC1BnkB,KAAKqd,OAASrd,KAAK+U,OAASqP,EAC5B,MAAMmf,EAAYnhC,EAAgB5P,QAAQ2X,EAAK8W,MAAQ9W,EAAK8W,KAAK9vB,OAAS,EAC1E6O,KAAKwsD,SAAWpqD,EAAgBitB,UAAUllB,EAAKwkB,SAC/C,MAAM89B,EAAWlpB,EAAYnhC,EAAgB41B,OAAO7tB,EAAK4tB,MAAME,WAAaj4B,KAAKwsD,SAASnvC,OACtFrd,KAAK2c,eACL3c,KAAKqd,OAASovC,EAEdzsD,KAAKsd,MAAQmvC,CAErB,CACA9vC,eACI,MAAM8P,EAAMzsB,KAAKmJ,QAAQkhB,SACzB,MAAe,QAARoC,GAAyB,WAARA,CAC5B,CACAigC,UAAUxwC,GACN,MAAM,IAAErH,EAAI,KAAEG,EAAK,OAAED,EAAO,MAAED,EAAM,QAAE3L,GAAanJ,KAC7Cm4B,EAAQhvB,EAAQgvB,MACtB,IACIhU,EAAU6hB,EAAQC,EADlB5lB,EAAW,EAkBf,OAhBIrgB,KAAK2c,gBACLqpB,EAAS5jC,EAAgB8jC,eAAe/N,EAAOnjB,EAAMF,GACrDmxB,EAASpxB,EAAMqH,EACfiI,EAAWrP,EAAQE,IAEM,SAArB7L,EAAQkhB,UACR2b,EAAShxB,EAAOkH,EAChB+pB,EAAS7jC,EAAgB8jC,eAAe/N,EAAOpjB,EAAQF,GACvDwL,GAAiC,GAAtBje,EAAgB4hB,KAE3BgiB,EAASlxB,EAAQoH,EACjB+pB,EAAS7jC,EAAgB8jC,eAAe/N,EAAOtjB,EAAKE,GACpDsL,EAAgC,GAArBje,EAAgB4hB,IAE/BG,EAAWpP,EAASF,GAEjB,CACHmxB,SACAC,SACA9hB,WACA9D,WAER,CACAlc,OACI,MAAM2J,EAAM9N,KAAK8N,IACX3D,EAAOnK,KAAKmJ,QAClB,IAAKgB,EAAK8c,QACN,OAEJ,MAAM0lC,EAAWvqD,EAAgB41B,OAAO7tB,EAAK4tB,MAEvC7b,EADaywC,EAAS10B,WACA,EAAIj4B,KAAKwsD,SAAS33C,KACxC,OAAEmxB,EAAO,OAAEC,EAAO,SAAE9hB,EAAS,SAAE9D,GAAcrgB,KAAK0sD,UAAUxwC,GAClE9Z,EAAgByjC,WAAW/3B,EAAK3D,EAAK8W,KAAM,EAAG,EAAG0rC,EAAU,CACvDrsD,MAAO6J,EAAK7J,MACZ6jB,WACA9D,WACAijB,UAAWlhC,EAAgBg2B,mBAAmBjuB,EAAKguB,OACnDsL,aAAc,SACde,YAAa,CACTwB,EACAC,IAGZ,EAYJ,IAAI2mB,GAAe,CACfhgD,GAAI,QACPu/C,SAAUI,GACPhpD,MAAOX,EAAO49C,EAAOr3C,IAbzB,SAAqBvG,EAAO+7B,GACxB,MAAMH,EAAQ,IAAI+tB,GAAM,CACpBz+C,IAAKlL,EAAMkL,IACX3E,QAASw1B,EACT/7B,UAEJksB,GAAQxmB,UAAU1F,EAAO47B,EAAOG,GAChC7P,GAAQC,OAAOnsB,EAAO47B,GACtB57B,EAAMiqD,WAAaruB,CACvB,CAKQsuB,CAAYlqD,EAAOuG,EACvB,EACA3D,KAAM5C,GACF,MAAMiqD,EAAajqD,EAAMiqD,WACzB/9B,GAAQI,UAAUtsB,EAAOiqD,UAClBjqD,EAAMiqD,UACjB,EACAzyB,aAAcx3B,EAAO49C,EAAOr3C,GACxB,MAAMq1B,EAAQ57B,EAAMiqD,WACpB/9B,GAAQxmB,UAAU1F,EAAO47B,EAAOr1B,GAChCq1B,EAAMr1B,QAAUA,CACpB,EACAV,SAAU,CACN0vB,MAAO,SACPlR,SAAS,EACT8Q,KAAM,CACFx3B,OAAQ,QAEZguB,UAAU,EACVI,QAAS,GACTtE,SAAU,MACVpJ,KAAM,GACN1gB,OAAQ,KAEZ8mC,cAAe,CACX/mC,MAAO,SAEX4nC,YAAa,CACT1nB,aAAa,EACbC,YAAY,IAIpB,MAAMhuB,GAAM,IAAIs6D,QAChB,IAAIC,GAAkB,CAClBpgD,GAAI,WACJrJ,MAAOX,EAAO49C,EAAOr3C,GACjB,MAAMq1B,EAAQ,IAAI+tB,GAAM,CACpBz+C,IAAKlL,EAAMkL,IACX3E,UACAvG,UAEJksB,GAAQxmB,UAAU1F,EAAO47B,EAAOr1B,GAChC2lB,GAAQC,OAAOnsB,EAAO47B,GACtB/rC,GAAIoS,IAAIjC,EAAO47B,EACnB,EACAh5B,KAAM5C,GACFksB,GAAQI,UAAUtsB,EAAOnQ,GAAIiS,IAAI9B,IACjCnQ,GAAIkT,OAAO/C,EACf,EACAw3B,aAAcx3B,EAAO49C,EAAOr3C,GACxB,MAAMq1B,EAAQ/rC,GAAIiS,IAAI9B,GACtBksB,GAAQxmB,UAAU1F,EAAO47B,EAAOr1B,GAChCq1B,EAAMr1B,QAAUA,CACpB,EACAV,SAAU,CACN0vB,MAAO,SACPlR,SAAS,EACT8Q,KAAM,CACFx3B,OAAQ,UAEZguB,UAAU,EACVI,QAAS,EACTtE,SAAU,MACVpJ,KAAM,GACN1gB,OAAQ,MAEZ8mC,cAAe,CACX/mC,MAAO,SAEX4nC,YAAa,CACT1nB,aAAa,EACbC,YAAY,IAIpB,MAAMwsC,GAAc,CACnBC,QAASjpD,GACF,IAAKA,EAAM9S,OACP,OAAO,EAEX,IAAIgB,EAAGjB,EACHoC,EAAI,EACJoc,EAAI,EACJ2C,EAAQ,EACZ,IAAIlgB,EAAI,EAAGjB,EAAM+S,EAAM9S,OAAQgB,EAAIjB,IAAOiB,EAAE,CACxC,MAAM63B,EAAK/lB,EAAM9R,GAAGsjB,QACpB,GAAIuU,GAAMA,EAAGuM,WAAY,CACrB,MAAM9J,EAAMzC,EAAGsM,kBACfhjC,GAAKm5B,EAAIn5B,EACToc,GAAK+c,EAAI/c,IACP2C,CACN,CACJ,CACA,MAAO,CACH/e,EAAGA,EAAI+e,EACP3C,EAAGA,EAAI2C,EAEf,EACHga,QAASpoB,EAAOkpD,GACT,IAAKlpD,EAAM9S,OACP,OAAO,EAEX,IAGIgB,EAAGjB,EAAKk8D,EAHR95D,EAAI65D,EAAc75D,EAClBoc,EAAIy9C,EAAcz9C,EAClB8b,EAAc1X,OAAOC,kBAEzB,IAAI5hB,EAAI,EAAGjB,EAAM+S,EAAM9S,OAAQgB,EAAIjB,IAAOiB,EAAE,CACxC,MAAM63B,EAAK/lB,EAAM9R,GAAGsjB,QACpB,GAAIuU,GAAMA,EAAGuM,WAAY,CACrB,MAAMnZ,EAAS4M,EAAGyB,iBACZj7B,EAAI4R,EAAgBirD,sBAAsBF,EAAe/vC,GAC3D5sB,EAAIg7B,IACJA,EAAch7B,EACd48D,EAAiBpjC,EAEzB,CACJ,CACA,GAAIojC,EAAgB,CAChB,MAAME,EAAKF,EAAe92B,kBAC1BhjC,EAAIg6D,EAAGh6D,EACPoc,EAAI49C,EAAG59C,CACX,CACA,MAAO,CACHpc,IACAoc,IAER,GAEJ,SAAS69C,GAAaryC,EAAMsyC,GAQxB,OAPIA,IACIprD,EAAgB5P,QAAQg7D,GACxBj7D,MAAMy2B,UAAU/jB,KAAKwoD,MAAMvyC,EAAMsyC,GAEjCtyC,EAAKjW,KAAKuoD,IAGXtyC,CACX,CACC,SAASwyC,GAAc18D,GACpB,OAAoB,iBAARA,GAAoBA,aAAe28D,SAAW38D,EAAI2sB,QAAQ,OAAS,EACpE3sB,EAAIy2C,MAAM,MAEdz2C,CACX,CACC,SAAS48D,GAAkBhrD,EAAOsB,GAC/B,MAAM,QAAEuR,EAAQ,aAAExK,EAAa,MAAEN,GAAWzG,EACtCgI,EAAatJ,EAAMiO,eAAe5F,GAAciB,YAChD,MAAEwI,EAAM,MAAE5K,GAAWoC,EAAWuI,iBAAiB9J,GACvD,MAAO,CACH/H,QACA8R,QACAvI,OAAQD,EAAWiH,UAAUxI,GAC7BsL,IAAKrT,EAAM+N,KAAKC,SAAS3F,GAAc0F,KAAKhG,GAC5CkjD,eAAgB/jD,EAChByF,QAASrD,EAAWsD,aACpBwG,UAAWrL,EACXM,eACAwK,UAER,CACC,SAASq4C,GAAeC,EAAS5kD,GAC9B,MAAM2E,EAAMigD,EAAQnrD,MAAMkL,KACpB,KAAEkgD,EAAK,OAAEC,EAAO,MAAEzvB,GAAWuvB,GAC7B,SAAEpG,EAAS,UAAED,GAAev+C,EAC5B+kD,EAAW9rD,EAAgB41B,OAAO7uB,EAAQ+kD,UAC1C3C,EAAYnpD,EAAgB41B,OAAO7uB,EAAQoiD,WAC3C4C,EAAa/rD,EAAgB41B,OAAO7uB,EAAQglD,YAC5CC,EAAiB5vB,EAAMrtC,OACvBk9D,EAAkBJ,EAAO98D,OACzBm9D,EAAoBN,EAAK78D,OACzBw9B,EAAUvsB,EAAgBitB,UAAUlmB,EAAQwlB,SAClD,IAAItR,EAASsR,EAAQtR,OACjBC,EAAQ,EACRixC,EAAqBP,EAAK5oD,QAAO,CAACiN,EAAOm8C,IAAWn8C,EAAQm8C,EAASC,OAAOt9D,OAASq9D,EAASE,MAAMv9D,OAASq9D,EAASG,MAAMx9D,QAAQ,GACxIo9D,GAAsBR,EAAQa,WAAWz9D,OAAS48D,EAAQc,UAAU19D,OAChEi9D,IACA/wC,GAAU+wC,EAAiB7C,EAAUtzB,YAAcm2B,EAAiB,GAAKjlD,EAAQ2lD,aAAe3lD,EAAQ4lD,mBAExGR,IAEAlxC,GAAUixC,GADanlD,EAAQ6lD,cAAgBz/D,KAAKC,IAAIk4D,EAAWwG,EAASj2B,YAAci2B,EAASj2B,aACnDs2B,EAAqBD,GAAqBJ,EAASj2B,YAAcs2B,EAAqB,GAAKplD,EAAQ8lD,aAEnJZ,IACAhxC,GAAUlU,EAAQ+lD,gBAAkBb,EAAkBF,EAAWl2B,YAAco2B,EAAkB,GAAKllD,EAAQgmD,eAElH,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAASzpC,GAC1BtI,EAAQ/tB,KAAKC,IAAI8tB,EAAOxP,EAAIk7C,YAAYpjC,GAAMtI,MAAQ8xC,EAC1D,EAiBA,OAhBAthD,EAAI62B,OACJ72B,EAAIiqB,KAAOwzB,EAAUlrB,OACrBj+B,EAAgB+tB,KAAK49B,EAAQvvB,MAAO6wB,GACpCvhD,EAAIiqB,KAAOm2B,EAAS7tB,OACpBj+B,EAAgB+tB,KAAK49B,EAAQa,WAAWp1C,OAAOu0C,EAAQc,WAAYQ,GACnED,EAAejmD,EAAQ6lD,cAAgBrH,EAAW,EAAIx+C,EAAQ8jB,WAAa,EAC3E7qB,EAAgB+tB,KAAK69B,GAAOQ,IACxBpsD,EAAgB+tB,KAAKq+B,EAASC,OAAQY,GACtCjtD,EAAgB+tB,KAAKq+B,EAASE,MAAOW,GACrCjtD,EAAgB+tB,KAAKq+B,EAASG,MAAOU,EAAa,IAEtDD,EAAe,EACfthD,EAAIiqB,KAAOo2B,EAAW9tB,OACtBj+B,EAAgB+tB,KAAK49B,EAAQE,OAAQoB,GACrCvhD,EAAI+2B,UACJvnB,GAASqR,EAAQrR,MACV,CACHA,QACAD,SAER,CAoBA,SAASiyC,GAAgB1sD,EAAOuG,EAASY,EAAMwlD,GAC3C,MAAM,EAAEj8D,EAAE,MAAEgqB,GAAWvT,GACfuT,MAAOkyC,EAAaj6C,WAAW,KAAEP,EAAK,MAAEF,IAAclS,EAC9D,IAAI6sD,EAAS,SAWb,MAVe,WAAXF,EACAE,EAASn8D,IAAM0hB,EAAOF,GAAS,EAAI,OAAS,QACrCxhB,GAAKgqB,EAAQ,EACpBmyC,EAAS,OACFn8D,GAAKk8D,EAAalyC,EAAQ,IACjCmyC,EAAS,SAnBjB,SAA6BA,EAAQ7sD,EAAOuG,EAASY,GACjD,MAAM,EAAEzW,EAAE,MAAEgqB,GAAWvT,EACjB2lD,EAAQvmD,EAAQwmD,UAAYxmD,EAAQymD,aAC1C,MAAe,SAAXH,GAAqBn8D,EAAIgqB,EAAQoyC,EAAQ9sD,EAAM0a,OAGpC,UAAXmyC,GAAsBn8D,EAAIgqB,EAAQoyC,EAAQ,QAA9C,CAGJ,CAYQG,CAAoBJ,EAAQ7sD,EAAOuG,EAASY,KAC5C0lD,EAAS,UAENA,CACX,CACC,SAASK,GAAmBltD,EAAOuG,EAASY,GACzC,MAAMwlD,EAASxlD,EAAKwlD,QAAUpmD,EAAQomD,QApC1C,SAAyB3sD,EAAOmH,GAC5B,MAAM,EAAE2F,EAAE,OAAE2N,GAAYtT,EACxB,OAAI2F,EAAI2N,EAAS,EACN,MACA3N,EAAI9M,EAAMya,OAASA,EAAS,EAC5B,SAEJ,QACX,CA4BoD0yC,CAAgBntD,EAAOmH,GACvE,MAAO,CACH0lD,OAAQ1lD,EAAK0lD,QAAUtmD,EAAQsmD,QAAUH,GAAgB1sD,EAAOuG,EAASY,EAAMwlD,GAC/EA,SAER,CAqBC,SAASS,GAAmB7mD,EAASY,EAAMkmD,EAAWrtD,GACnD,MAAM,UAAE+sD,EAAU,aAAEC,EAAa,aAAEM,GAAkB/mD,GAC/C,OAAEsmD,EAAO,OAAEF,GAAYU,EACvBE,EAAiBR,EAAYC,GAC7B,QAAEnQ,EAAQ,SAAEC,EAAS,WAAEC,EAAW,YAAEC,GAAiBx9C,EAAgBk9C,cAAc4Q,GACzF,IAAI58D,EAzBR,SAAgByW,EAAM0lD,GAClB,IAAI,EAAEn8D,EAAE,MAAEgqB,GAAWvT,EAMrB,MALe,UAAX0lD,EACAn8D,GAAKgqB,EACa,WAAXmyC,IACPn8D,GAAKgqB,EAAQ,GAEVhqB,CACX,CAiBY88D,CAAOrmD,EAAM0lD,GACrB,MAAM//C,EAjBV,SAAgB3F,EAAMwlD,EAAQY,GAC1B,IAAI,EAAEzgD,EAAE,OAAE2N,GAAYtT,EAQtB,MAPe,QAAXwlD,EACA7/C,GAAKygD,EAELzgD,GADkB,WAAX6/C,EACFlyC,EAAS8yC,EAET9yC,EAAS,EAEX3N,CACX,CAOc2gD,CAAOtmD,EAAMwlD,EAAQY,GAY/B,MAXe,WAAXZ,EACe,SAAXE,EACAn8D,GAAK68D,EACa,UAAXV,IACPn8D,GAAK68D,GAES,SAAXV,EACPn8D,GAAK/D,KAAKC,IAAIiwD,EAASE,GAAcgQ,EACnB,UAAXF,IACPn8D,GAAK/D,KAAKC,IAAIkwD,EAAUE,GAAe+P,GAEpC,CACHr8D,EAAG8O,EAAgBm8B,YAAYjrC,EAAG,EAAGsP,EAAM0a,MAAQvT,EAAKuT,OACxD5N,EAAGtN,EAAgBm8B,YAAY7uB,EAAG,EAAG9M,EAAMya,OAAStT,EAAKsT,QAEjE,CACA,SAASizC,GAAYvC,EAAS51B,EAAOhvB,GACjC,MAAMwlB,EAAUvsB,EAAgBitB,UAAUlmB,EAAQwlB,SAClD,MAAiB,WAAVwJ,EAAqB41B,EAAQz6D,EAAIy6D,EAAQzwC,MAAQ,EAAc,UAAV6a,EAAoB41B,EAAQz6D,EAAIy6D,EAAQzwC,MAAQqR,EAAQ7Z,MAAQi5C,EAAQz6D,EAAIq7B,EAAQ3Z,IACpJ,CACC,SAASu7C,GAAwBl2B,GAC9B,OAAOkzB,GAAa,GAAIG,GAAcrzB,GAC1C,CAQA,SAASm2B,GAAkBztD,EAAW8S,GAClC,MAAM+wB,EAAW/wB,GAAWA,EAAQtG,SAAWsG,EAAQtG,QAAQw+C,SAAWl4C,EAAQtG,QAAQw+C,QAAQhrD,UAClG,OAAO6jC,EAAW7jC,EAAU6jC,SAASA,GAAY7jC,CACrD,CACA,MAAM0tD,GAAmB,CACrBC,YAAatuD,EAAgBuuD,KAC7BnyB,MAAOoyB,GACH,GAAIA,EAAaz/D,OAAS,EAAG,CACzB,MAAM+S,EAAO0sD,EAAa,GACpB/9C,EAAS3O,EAAKtB,MAAM+N,KAAKkC,OACzBg+C,EAAah+C,EAASA,EAAO1hB,OAAS,EAC5C,GAAI6O,MAAQA,KAAKmJ,SAAiC,YAAtBnJ,KAAKmJ,QAAQ6B,KACrC,OAAO9G,EAAKqL,QAAQmF,OAAS,GAC1B,GAAIxQ,EAAKwQ,MACZ,OAAOxQ,EAAKwQ,MACT,GAAIm8C,EAAa,GAAK3sD,EAAK8R,UAAY66C,EAC1C,OAAOh+C,EAAO3O,EAAK8R,UAE3B,CACA,MAAO,EACX,EACA86C,WAAY1uD,EAAgBuuD,KAC5B/B,WAAYxsD,EAAgBuuD,KAC5BI,YAAa3uD,EAAgBuuD,KAC7Bj8C,MAAOs8C,GACH,GAAIhxD,MAAQA,KAAKmJ,SAAiC,YAAtBnJ,KAAKmJ,QAAQ6B,KACrC,OAAOgmD,EAAYt8C,MAAQ,KAAOs8C,EAAYnD,gBAAkBmD,EAAYnD,eAEhF,IAAIn5C,EAAQs8C,EAAYzhD,QAAQmF,OAAS,GACrCA,IACAA,GAAS,MAEb,MAAM5K,EAAQknD,EAAYnD,eAI1B,OAHKzrD,EAAgB2a,cAAcjT,KAC/B4K,GAAS5K,GAEN4K,CACX,EACAu8C,WAAYD,GACR,MACM7nD,EADO6nD,EAAYpuD,MAAMiO,eAAemgD,EAAY/lD,cACrCiB,WAAWwJ,SAASs7C,EAAYh7C,WACrD,MAAO,CACHqL,YAAalY,EAAQkY,YACrBF,gBAAiBhY,EAAQgY,gBACzBK,YAAarY,EAAQqY,YACrBohB,WAAYz5B,EAAQy5B,WACpBE,iBAAkB35B,EAAQ25B,iBAC1BiV,aAAc,EAEtB,EACAmZ,iBACI,OAAOlxD,KAAKmJ,QAAQgoD,SACxB,EACAC,gBAAiBJ,GACb,MACM7nD,EADO6nD,EAAYpuD,MAAMiO,eAAemgD,EAAY/lD,cACrCiB,WAAWwJ,SAASs7C,EAAYh7C,WACrD,MAAO,CACH+K,WAAY5X,EAAQ4X,WACpBV,SAAUlX,EAAQkX,SAE1B,EACAgxC,WAAYjvD,EAAgBuuD,KAC5B9B,UAAWzsD,EAAgBuuD,KAC3BW,aAAclvD,EAAgBuuD,KAC9B1C,OAAQ7rD,EAAgBuuD,KACxBY,YAAanvD,EAAgBuuD,MAEhC,SAASa,GAA2BzuD,EAAW+a,EAAMhQ,EAAKw7B,GACvD,MAAMnS,EAASp0B,EAAU+a,GAAMpa,KAAKoK,EAAKw7B,GACzC,YAAsB,IAAXnS,EACAs5B,GAAiB3yC,GAAMpa,KAAKoK,EAAKw7B,GAErCnS,CACX,CACA,MAAMs6B,WAAgBp7B,GACrBzoB,mBAAqBq/C,GAClBptD,YAAYsI,GACRqU,QACAxc,KAAK0xD,QAAU,EACf1xD,KAAKoE,QAAU,GACfpE,KAAK2xD,oBAAiBlgE,EACtBuO,KAAK4xD,WAAQngE,EACbuO,KAAK6xD,uBAAoBpgE,EACzBuO,KAAK8xD,cAAgB,GACrB9xD,KAAKqJ,iBAAc5X,EACnBuO,KAAK0O,cAAWjd,EAChBuO,KAAK4C,MAAQuF,EAAOvF,MACpB5C,KAAKmJ,QAAUhB,EAAOgB,QACtBnJ,KAAK+xD,gBAAatgE,EAClBuO,KAAKw+B,WAAQ/sC,EACbuO,KAAK4uD,gBAAan9D,EAClBuO,KAAKguD,UAAOv8D,EACZuO,KAAK6uD,eAAYp9D,EACjBuO,KAAKiuD,YAASx8D,EACduO,KAAKyvD,YAASh+D,EACduO,KAAKuvD,YAAS99D,EACduO,KAAK1M,OAAI7B,EACTuO,KAAK0P,OAAIje,EACTuO,KAAKqd,YAAS5rB,EACduO,KAAKsd,WAAQ7rB,EACbuO,KAAKgyD,YAASvgE,EACduO,KAAKiyD,YAASxgE,EACduO,KAAKkyD,iBAAczgE,EACnBuO,KAAKmyD,sBAAmB1gE,EACxBuO,KAAKoyD,qBAAkB3gE,CAC3B,CACAqd,WAAW3F,GACPnJ,KAAKmJ,QAAUA,EACfnJ,KAAK6xD,uBAAoBpgE,EACzBuO,KAAK0O,cAAWjd,CACpB,CACHolB,qBACO,MAAMpJ,EAASzN,KAAK6xD,kBACpB,GAAIpkD,EACA,OAAOA,EAEX,MAAM7K,EAAQ5C,KAAK4C,MACbuG,EAAUnJ,KAAKmJ,QAAQuwB,WAAW15B,KAAKkS,cACvC/H,EAAOhB,EAAQgzB,SAAWv5B,EAAMuG,QAAQT,WAAaS,EAAQI,WAC7DA,EAAa,IAAIrB,EAAWlI,KAAK4C,MAAOuH,GAI9C,OAHIA,EAAK6M,aACLhX,KAAK6xD,kBAAoBzzD,OAAOuD,OAAO4H,IAEpCA,CACX,CACH2I,aACO,OAAOlS,KAAK0O,WAAa1O,KAAK0O,UArIRoH,EAqIwC9V,KAAK4C,MAAMsP,aAAclS,KArIhD4wD,EAqIsD5wD,KAAK8xD,cApI/F1vD,EAAgB2T,cAAcD,EAAQ,CACzCi4C,QAmIuF/tD,KAlIvF4wD,eACA9wD,KAAM,cAJd,IAA8BgW,EAAiB86C,CAsI3C,CACAyB,SAASx8C,EAAS1M,GACd,MAAM,UAAEpG,GAAeoG,EACjBunD,EAAcc,GAA2BzuD,EAAW,cAAe/C,KAAM6V,GACzE2oB,EAAQgzB,GAA2BzuD,EAAW,QAAS/C,KAAM6V,GAC7Di7C,EAAaU,GAA2BzuD,EAAW,aAAc/C,KAAM6V,GAC7E,IAAI64C,EAAQ,GAIZ,OAHAA,EAAQnB,GAAamB,EAAOhB,GAAcgD,IAC1ChC,EAAQnB,GAAamB,EAAOhB,GAAclvB,IAC1CkwB,EAAQnB,GAAamB,EAAOhB,GAAcoD,IACnCpC,CACX,CACA4D,cAAc1B,EAAcznD,GACxB,OAAOonD,GAAwBiB,GAA2BroD,EAAQpG,UAAW,aAAc/C,KAAM4wD,GACrG,CACA2B,QAAQ3B,EAAcznD,GAClB,MAAM,UAAEpG,GAAeoG,EACjBqpD,EAAY,GAalB,OAZApwD,EAAgB+tB,KAAKygC,GAAe/6C,IAChC,MAAM24C,EAAW,CACbC,OAAQ,GACRC,MAAO,GACPC,MAAO,IAEL8D,EAASjC,GAAkBztD,EAAW8S,GAC5C03C,GAAaiB,EAASC,OAAQf,GAAc8D,GAA2BiB,EAAQ,cAAezyD,KAAM6V,KACpG03C,GAAaiB,EAASE,MAAO8C,GAA2BiB,EAAQ,QAASzyD,KAAM6V,IAC/E03C,GAAaiB,EAASG,MAAOjB,GAAc8D,GAA2BiB,EAAQ,aAAczyD,KAAM6V,KAClG28C,EAAUvtD,KAAKupD,EAAS,IAErBgE,CACX,CACAE,aAAa9B,EAAcznD,GACvB,OAAOonD,GAAwBiB,GAA2BroD,EAAQpG,UAAW,YAAa/C,KAAM4wD,GACpG,CACA+B,UAAU/B,EAAcznD,GACpB,MAAM,UAAEpG,GAAeoG,EACjBmoD,EAAeE,GAA2BzuD,EAAW,eAAgB/C,KAAM4wD,GAC3E3C,EAASuD,GAA2BzuD,EAAW,SAAU/C,KAAM4wD,GAC/DW,EAAcC,GAA2BzuD,EAAW,cAAe/C,KAAM4wD,GAC/E,IAAIlC,EAAQ,GAIZ,OAHAA,EAAQnB,GAAamB,EAAOhB,GAAc4D,IAC1C5C,EAAQnB,GAAamB,EAAOhB,GAAcO,IAC1CS,EAAQnB,GAAamB,EAAOhB,GAAc6D,IACnC7C,CACX,CACHkE,aAAazpD,GACN,MAAM5B,EAASvH,KAAKoE,QACduM,EAAO3Q,KAAK4C,MAAM+N,KAClBuhD,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACIjgE,EAAGjB,EADH0/D,EAAe,GAEnB,IAAIz+D,EAAI,EAAGjB,EAAMqW,EAAOpW,OAAQgB,EAAIjB,IAAOiB,EACvCy+D,EAAa3rD,KAAK2oD,GAAkB5tD,KAAK4C,MAAO2E,EAAOpV,KAkB3D,OAhBIgX,EAAQgE,SACRyjD,EAAeA,EAAazjD,QAAO,CAACsI,EAAS9K,EAAO6hB,IAAQrjB,EAAQgE,OAAOsI,EAAS9K,EAAO6hB,EAAO7b,MAElGxH,EAAQ0pD,WACRjC,EAAeA,EAAal3C,MAAK,CAACrpB,EAAGC,IAAI6Y,EAAQ0pD,SAASxiE,EAAGC,EAAGqgB,MAEpEvO,EAAgB+tB,KAAKygC,GAAe/6C,IAChC,MAAM48C,EAASjC,GAAkBrnD,EAAQpG,UAAW8S,GACpDq8C,EAAYjtD,KAAKusD,GAA2BiB,EAAQ,aAAczyD,KAAM6V,IACxEs8C,EAAiBltD,KAAKusD,GAA2BiB,EAAQ,kBAAmBzyD,KAAM6V,IAClFu8C,EAAgBntD,KAAKusD,GAA2BiB,EAAQ,iBAAkBzyD,KAAM6V,GAAS,IAE7F7V,KAAKkyD,YAAcA,EACnBlyD,KAAKmyD,iBAAmBA,EACxBnyD,KAAKoyD,gBAAkBA,EACvBpyD,KAAK+xD,WAAanB,EACXA,CACX,CACAppD,OAAO8mB,EAAS6nB,GACZ,MAAMhtC,EAAUnJ,KAAKmJ,QAAQuwB,WAAW15B,KAAKkS,cACvC3K,EAASvH,KAAKoE,QACpB,IAAI2E,EACA6nD,EAAe,GACnB,GAAKrpD,EAAOpW,OAML,CACH,MAAMk5B,EAAW4iC,GAAY9jD,EAAQkhB,UAAU3mB,KAAK1D,KAAMuH,EAAQvH,KAAK2xD,gBACvEf,EAAe5wD,KAAK4yD,aAAazpD,GACjCnJ,KAAKw+B,MAAQx+B,KAAKqyD,SAASzB,EAAcznD,GACzCnJ,KAAK4uD,WAAa5uD,KAAKsyD,cAAc1B,EAAcznD,GACnDnJ,KAAKguD,KAAOhuD,KAAKuyD,QAAQ3B,EAAcznD,GACvCnJ,KAAK6uD,UAAY7uD,KAAK0yD,aAAa9B,EAAcznD,GACjDnJ,KAAKiuD,OAASjuD,KAAK2yD,UAAU/B,EAAcznD,GAC3C,MAAMY,EAAO/J,KAAK4xD,MAAQ9D,GAAe9tD,KAAMmJ,GACzC2pD,EAAkB10D,OAAOqB,OAAO,CAAC,EAAG4qB,EAAUtgB,GAC9CkmD,EAAYH,GAAmB9vD,KAAK4C,MAAOuG,EAAS2pD,GACpDC,EAAkB/C,GAAmB7mD,EAAS2pD,EAAiB7C,EAAWjwD,KAAK4C,OACrF5C,KAAKyvD,OAASQ,EAAUR,OACxBzvD,KAAKuvD,OAASU,EAAUV,OACxBxmD,EAAa,CACT2oD,QAAS,EACTp+D,EAAGy/D,EAAgBz/D,EACnBoc,EAAGqjD,EAAgBrjD,EACnB4N,MAAOvT,EAAKuT,MACZD,OAAQtT,EAAKsT,OACb20C,OAAQ3nC,EAAS/2B,EACjB2+D,OAAQ5nC,EAAS3a,EAEzB,MA5ByB,IAAjB1P,KAAK0xD,UACL3oD,EAAa,CACT2oD,QAAS,IA2BrB1xD,KAAK8xD,cAAgBlB,EACrB5wD,KAAK0O,cAAWjd,EACZsX,GACA/I,KAAK6W,qBAAqBrP,OAAOxH,KAAM+I,GAEvCulB,GAAWnlB,EAAQ6pD,UACnB7pD,EAAQ6pD,SAAStvD,KAAK1D,KAAM,CACxB4C,MAAO5C,KAAK4C,MACZmrD,QAAS/tD,KACTm2C,UAGZ,CACA8c,UAAUC,EAAcplD,EAAK/D,EAAMZ,GAC/B,MAAMgqD,EAAgBnzD,KAAKozD,iBAAiBF,EAAcnpD,EAAMZ,GAChE2E,EAAIu3B,OAAO8tB,EAAcjxB,GAAIixB,EAAchxB,IAC3Cr0B,EAAIu3B,OAAO8tB,EAAc/wB,GAAI+wB,EAAc9wB,IAC3Cv0B,EAAIu3B,OAAO8tB,EAAcE,GAAIF,EAAcG,GAC/C,CACAF,iBAAiBF,EAAcnpD,EAAMZ,GACjC,MAAM,OAAEsmD,EAAO,OAAEF,GAAYvvD,MACvB,UAAE2vD,EAAU,aAAEO,GAAkB/mD,GAChC,QAAEs2C,EAAQ,SAAEC,EAAS,WAAEC,EAAW,YAAEC,GAAiBx9C,EAAgBk9C,cAAc4Q,IACjF58D,EAAGigE,EAAM7jD,EAAG8jD,GAASN,GACvB,MAAE51C,EAAM,OAAED,GAAYtT,EAC5B,IAAIm4B,EAAIE,EAAIixB,EAAIlxB,EAAIE,EAAIixB,EAoCxB,MAnCe,WAAX/D,GACAltB,EAAKmxB,EAAMn2C,EAAS,EACL,SAAXoyC,GACAvtB,EAAKqxB,EACLnxB,EAAKF,EAAKytB,EACVxtB,EAAKE,EAAKstB,EACV2D,EAAKjxB,EAAKstB,IAEVztB,EAAKqxB,EAAMj2C,EACX8kB,EAAKF,EAAKytB,EACVxtB,EAAKE,EAAKstB,EACV2D,EAAKjxB,EAAKstB,GAEd0D,EAAKnxB,IAGDE,EADW,SAAXqtB,EACK8D,EAAMhkE,KAAKC,IAAIiwD,EAASE,GAAcgQ,EACzB,UAAXF,EACF8D,EAAMj2C,EAAQ/tB,KAAKC,IAAIkwD,EAAUE,GAAe+P,EAEhD3vD,KAAKgyD,OAEC,QAAXzC,GACAptB,EAAKqxB,EACLnxB,EAAKF,EAAKwtB,EACVztB,EAAKE,EAAKutB,EACV0D,EAAKjxB,EAAKutB,IAEVxtB,EAAKqxB,EAAMn2C,EACXglB,EAAKF,EAAKwtB,EACVztB,EAAKE,EAAKutB,EACV0D,EAAKjxB,EAAKutB,GAEd2D,EAAKnxB,GAEF,CACHD,KACAE,KACAixB,KACAlxB,KACAE,KACAixB,KAER,CACAvtB,UAAU0tB,EAAI3lD,EAAK3E,GACf,MAAMq1B,EAAQx+B,KAAKw+B,MACbrtC,EAASqtC,EAAMrtC,OACrB,IAAIo6D,EAAWuD,EAAc38D,EAC7B,GAAIhB,EAAQ,CACR,MAAM44D,EAAY3nD,EAAgB4nD,cAAc7gD,EAAQ2gD,IAAK9pD,KAAK1M,EAAG0M,KAAKsd,OAQ1E,IAPAm2C,EAAGngE,EAAIg9D,GAAYtwD,KAAMmJ,EAAQ+uB,WAAY/uB,GAC7C2E,EAAIw1B,UAAYymB,EAAUzmB,UAAUn6B,EAAQ+uB,YAC5CpqB,EAAI21B,aAAe,SACnB8nB,EAAYnpD,EAAgB41B,OAAO7uB,EAAQoiD,WAC3CuD,EAAe3lD,EAAQ2lD,aACvBhhD,EAAIoT,UAAY/X,EAAQuqD,WACxB5lD,EAAIiqB,KAAOwzB,EAAUlrB,OACjBluC,EAAI,EAAGA,EAAIhB,IAAUgB,EACrB2b,EAAIu9C,SAAS7sB,EAAMrsC,GAAI43D,EAAUz2D,EAAEmgE,EAAGngE,GAAImgE,EAAG/jD,EAAI67C,EAAUtzB,WAAa,GACxEw7B,EAAG/jD,GAAK67C,EAAUtzB,WAAa62B,EAC3B38D,EAAI,IAAMhB,IACVsiE,EAAG/jD,GAAKvG,EAAQ4lD,kBAAoBD,EAGhD,CACJ,CACH6E,cAAc7lD,EAAK2lD,EAAIthE,EAAG43D,EAAW5gD,GAC9B,MAAM8nD,EAAajxD,KAAKkyD,YAAY//D,GAC9Bi/D,EAAkBpxD,KAAKmyD,iBAAiBhgE,IACxC,UAAEu1D,EAAU,SAAEC,GAAcx+C,EAC5B+kD,EAAW9rD,EAAgB41B,OAAO7uB,EAAQ+kD,UAC1C0F,EAAStD,GAAYtwD,KAAM,OAAQmJ,GACnC0qD,EAAY9J,EAAUz2D,EAAEsgE,GACxBE,EAAUpM,EAAYwG,EAASj2B,YAAci2B,EAASj2B,WAAayvB,GAAa,EAAI,EACpFqM,EAASN,EAAG/jD,EAAIokD,EACtB,GAAI3qD,EAAQy+C,cAAe,CACvB,MAAMgD,EAAc,CAChBjrC,OAAQpwB,KAAKE,IAAIk4D,EAAUD,GAAa,EACxC3mC,WAAYqwC,EAAgBrwC,WAC5BV,SAAU+wC,EAAgB/wC,SAC1BmB,YAAa,GAEXuD,EAAUglC,EAAUG,WAAW2J,EAAWlM,GAAYA,EAAW,EACjE3iC,EAAU+uC,EAASrM,EAAY,EACrC55C,EAAIsT,YAAcjY,EAAQ6qD,mBAC1BlmD,EAAIoT,UAAY/X,EAAQ6qD,mBACxB5xD,EAAgB+7C,UAAUrwC,EAAK88C,EAAa7lC,EAASC,GACrDlX,EAAIsT,YAAc6vC,EAAW5vC,YAC7BvT,EAAIoT,UAAY+vC,EAAW9vC,gBAC3B/e,EAAgB+7C,UAAUrwC,EAAK88C,EAAa7lC,EAASC,EACzD,KAAO,CACHlX,EAAIyT,UAAYnf,EAAgBmG,SAAS0oD,EAAWzvC,aAAejyB,KAAKC,OAAO4O,OAAO6K,OAAOgoD,EAAWzvC,cAAgByvC,EAAWzvC,aAAe,EAClJ1T,EAAIsT,YAAc6vC,EAAW5vC,YAC7BvT,EAAIm3B,YAAYgsB,EAAWruB,YAAc,IACzC90B,EAAIo3B,eAAiB+rB,EAAWnuB,kBAAoB,EACpD,MAAMmxB,EAASlK,EAAUG,WAAW2J,EAAWlM,GACzCuM,EAASnK,EAAUG,WAAWH,EAAUe,MAAM+I,EAAW,GAAIlM,EAAW,GACxE5P,EAAe31C,EAAgBk9C,cAAc2R,EAAWlZ,cAC1D35C,OAAO6K,OAAO8uC,GAAc9M,MAAM97C,GAAU,IAANA,KACtC2e,EAAIq3B,YACJr3B,EAAIoT,UAAY/X,EAAQ6qD,mBACxB5xD,EAAgB49C,mBAAmBlyC,EAAK,CACpCxa,EAAG2gE,EACHvkD,EAAGqkD,EACH9hE,EAAG01D,EACHr4D,EAAGo4D,EACH/nC,OAAQo4B,IAEZjqC,EAAIoB,OACJpB,EAAIw3B,SACJx3B,EAAIoT,UAAY+vC,EAAW9vC,gBAC3BrT,EAAIq3B,YACJ/iC,EAAgB49C,mBAAmBlyC,EAAK,CACpCxa,EAAG4gE,EACHxkD,EAAGqkD,EAAS,EACZ9hE,EAAG01D,EAAW,EACdr4D,EAAGo4D,EAAY,EACf/nC,OAAQo4B,IAEZjqC,EAAIoB,SAEJpB,EAAIoT,UAAY/X,EAAQ6qD,mBACxBlmD,EAAI82B,SAASqvB,EAAQF,EAAQpM,EAAUD,GACvC55C,EAAIqmD,WAAWF,EAAQF,EAAQpM,EAAUD,GACzC55C,EAAIoT,UAAY+vC,EAAW9vC,gBAC3BrT,EAAI82B,SAASsvB,EAAQH,EAAS,EAAGpM,EAAW,EAAGD,EAAY,GAEnE,CACA55C,EAAIoT,UAAYlhB,KAAKoyD,gBAAgBjgE,EACzC,CACAiiE,SAASX,EAAI3lD,EAAK3E,GACd,MAAM,KAAE6kD,GAAUhuD,MACZ,YAAEivD,EAAY,UAAEoF,EAAU,cAAErF,EAAc,UAAEtH,EAAU,SAAEC,EAAS,WAAE16B,GAAgB9jB,EACnF+kD,EAAW9rD,EAAgB41B,OAAO7uB,EAAQ+kD,UAChD,IAAIoG,EAAiBpG,EAASj2B,WAC1Bs8B,EAAe,EACnB,MAAMxK,EAAY3nD,EAAgB4nD,cAAc7gD,EAAQ2gD,IAAK9pD,KAAK1M,EAAG0M,KAAKsd,OACpEk3C,EAAiB,SAAS5uC,GAC5B9X,EAAIu9C,SAASzlC,EAAMmkC,EAAUz2D,EAAEmgE,EAAGngE,EAAIihE,GAAed,EAAG/jD,EAAI4kD,EAAiB,GAC7Eb,EAAG/jD,GAAK4kD,EAAiBrF,CAC7B,EACMwF,EAA0B1K,EAAUzmB,UAAU+wB,GACpD,IAAI7F,EAAUkG,EAAWhG,EAAOv8D,EAAGmM,EAAGoM,EAAMo1B,EAQ5C,IAPAhyB,EAAIw1B,UAAY+wB,EAChBvmD,EAAI21B,aAAe,SACnB31B,EAAIiqB,KAAOm2B,EAAS7tB,OACpBozB,EAAGngE,EAAIg9D,GAAYtwD,KAAMy0D,EAAyBtrD,GAClD2E,EAAIoT,UAAY/X,EAAQgoD,UACxB/uD,EAAgB+tB,KAAKnwB,KAAK4uD,WAAY4F,GACtCD,EAAevF,GAA6C,UAA5ByF,EAAoD,WAAdJ,EAAyB1M,EAAW,EAAI16B,EAAa06B,EAAW,EAAI16B,EAAa,EACnJ96B,EAAI,EAAGuY,EAAOsjD,EAAK78D,OAAQgB,EAAIuY,IAAQvY,EAAE,CAUzC,IATAq8D,EAAWR,EAAK77D,GAChBuiE,EAAY10D,KAAKoyD,gBAAgBjgE,GACjC2b,EAAIoT,UAAYwzC,EAChBtyD,EAAgB+tB,KAAKq+B,EAASC,OAAQ+F,GACtC9F,EAAQF,EAASE,MACbM,GAAiBN,EAAMv9D,SACvB6O,KAAK2zD,cAAc7lD,EAAK2lD,EAAIthE,EAAG43D,EAAW5gD,GAC1CmrD,EAAiB/kE,KAAKC,IAAI0+D,EAASj2B,WAAYyvB,IAE/CppD,EAAI,EAAGwhC,EAAO4uB,EAAMv9D,OAAQmN,EAAIwhC,IAAQxhC,EACxCk2D,EAAe9F,EAAMpwD,IACrBg2D,EAAiBpG,EAASj2B,WAE9B71B,EAAgB+tB,KAAKq+B,EAASG,MAAO6F,EACzC,CACAD,EAAe,EACfD,EAAiBpG,EAASj2B,WAC1B71B,EAAgB+tB,KAAKnwB,KAAK6uD,UAAW2F,GACrCf,EAAG/jD,GAAKu/C,CACZ,CACA0F,WAAWlB,EAAI3lD,EAAK3E,GAChB,MAAM8kD,EAASjuD,KAAKiuD,OACd98D,EAAS88D,EAAO98D,OACtB,IAAIg9D,EAAYh8D,EAChB,GAAIhB,EAAQ,CACR,MAAM44D,EAAY3nD,EAAgB4nD,cAAc7gD,EAAQ2gD,IAAK9pD,KAAK1M,EAAG0M,KAAKsd,OAQ1E,IAPAm2C,EAAGngE,EAAIg9D,GAAYtwD,KAAMmJ,EAAQyrD,YAAazrD,GAC9CsqD,EAAG/jD,GAAKvG,EAAQ+lD,gBAChBphD,EAAIw1B,UAAYymB,EAAUzmB,UAAUn6B,EAAQyrD,aAC5C9mD,EAAI21B,aAAe,SACnB0qB,EAAa/rD,EAAgB41B,OAAO7uB,EAAQglD,YAC5CrgD,EAAIoT,UAAY/X,EAAQ0rD,YACxB/mD,EAAIiqB,KAAOo2B,EAAW9tB,OAClBluC,EAAI,EAAGA,EAAIhB,IAAUgB,EACrB2b,EAAIu9C,SAAS4C,EAAO97D,GAAI43D,EAAUz2D,EAAEmgE,EAAGngE,GAAImgE,EAAG/jD,EAAIy+C,EAAWl2B,WAAa,GAC1Ew7B,EAAG/jD,GAAKy+C,EAAWl2B,WAAa9uB,EAAQgmD,aAEhD,CACJ,CACAzqB,eAAe+uB,EAAI3lD,EAAKgnD,EAAa3rD,GACjC,MAAM,OAAEsmD,EAAO,OAAEF,GAAYvvD,MACvB,EAAE1M,EAAE,EAAEoc,GAAO+jD,GACb,MAAEn2C,EAAM,OAAED,GAAYy3C,GACtB,QAAErV,EAAQ,SAAEC,EAAS,WAAEC,EAAW,YAAEC,GAAiBx9C,EAAgBk9C,cAAcn2C,EAAQ+mD,cACjGpiD,EAAIoT,UAAY/X,EAAQgY,gBACxBrT,EAAIsT,YAAcjY,EAAQkY,YAC1BvT,EAAIyT,UAAYpY,EAAQqY,YACxB1T,EAAIq3B,YACJr3B,EAAIs3B,OAAO9xC,EAAImsD,EAAS/vC,GACT,QAAX6/C,GACAvvD,KAAKizD,UAAUQ,EAAI3lD,EAAKgnD,EAAa3rD,GAEzC2E,EAAIu3B,OAAO/xC,EAAIgqB,EAAQoiC,EAAUhwC,GACjC5B,EAAIinD,iBAAiBzhE,EAAIgqB,EAAO5N,EAAGpc,EAAIgqB,EAAO5N,EAAIgwC,GACnC,WAAX6P,GAAkC,UAAXE,GACvBzvD,KAAKizD,UAAUQ,EAAI3lD,EAAKgnD,EAAa3rD,GAEzC2E,EAAIu3B,OAAO/xC,EAAIgqB,EAAO5N,EAAI2N,EAASuiC,GACnC9xC,EAAIinD,iBAAiBzhE,EAAIgqB,EAAO5N,EAAI2N,EAAQ/pB,EAAIgqB,EAAQsiC,EAAalwC,EAAI2N,GAC1D,WAAXkyC,GACAvvD,KAAKizD,UAAUQ,EAAI3lD,EAAKgnD,EAAa3rD,GAEzC2E,EAAIu3B,OAAO/xC,EAAIqsD,EAAYjwC,EAAI2N,GAC/BvP,EAAIinD,iBAAiBzhE,EAAGoc,EAAI2N,EAAQ/pB,EAAGoc,EAAI2N,EAASsiC,GACrC,WAAX4P,GAAkC,SAAXE,GACvBzvD,KAAKizD,UAAUQ,EAAI3lD,EAAKgnD,EAAa3rD,GAEzC2E,EAAIu3B,OAAO/xC,EAAGoc,EAAI+vC,GAClB3xC,EAAIinD,iBAAiBzhE,EAAGoc,EAAGpc,EAAImsD,EAAS/vC,GACxC5B,EAAIyrC,YACJzrC,EAAIoB,OACA/F,EAAQqY,YAAc,GACtB1T,EAAIw3B,QAEZ,CACH0vB,uBAAuB7rD,GAChB,MAAMvG,EAAQ5C,KAAK4C,MACbC,EAAQ7C,KAAKqJ,YACb4rD,EAAQpyD,GAASA,EAAMvP,EACvB4hE,EAAQryD,GAASA,EAAM6M,EAC7B,GAAIulD,GAASC,EAAO,CAChB,MAAM7qC,EAAW4iC,GAAY9jD,EAAQkhB,UAAU3mB,KAAK1D,KAAMA,KAAKoE,QAASpE,KAAK2xD,gBAC7E,IAAKtnC,EACD,OAEJ,MAAMtgB,EAAO/J,KAAK4xD,MAAQ9D,GAAe9tD,KAAMmJ,GACzC2pD,EAAkB10D,OAAOqB,OAAO,CAAC,EAAG4qB,EAAUrqB,KAAK4xD,OACnD3B,EAAYH,GAAmBltD,EAAOuG,EAAS2pD,GAC/CjzC,EAAQmwC,GAAmB7mD,EAAS2pD,EAAiB7C,EAAWrtD,GAClEqyD,EAAM5tD,MAAQwY,EAAMvsB,GAAK4hE,EAAM7tD,MAAQwY,EAAMnQ,IAC7C1P,KAAKyvD,OAASQ,EAAUR,OACxBzvD,KAAKuvD,OAASU,EAAUV,OACxBvvD,KAAKsd,MAAQvT,EAAKuT,MAClBtd,KAAKqd,OAAStT,EAAKsT,OACnBrd,KAAKgyD,OAAS3nC,EAAS/2B,EACvB0M,KAAKiyD,OAAS5nC,EAAS3a,EACvB1P,KAAK6W,qBAAqBrP,OAAOxH,KAAM6f,GAE/C,CACJ,CACHs1C,cACO,QAASn1D,KAAK0xD,OAClB,CACAvtD,KAAK2J,GACD,MAAM3E,EAAUnJ,KAAKmJ,QAAQuwB,WAAW15B,KAAKkS,cAC7C,IAAIw/C,EAAU1xD,KAAK0xD,QACnB,IAAKA,EACD,OAEJ1xD,KAAKg1D,uBAAuB7rD,GAC5B,MAAM2rD,EAAc,CAChBx3C,MAAOtd,KAAKsd,MACZD,OAAQrd,KAAKqd,QAEXo2C,EAAK,CACPngE,EAAG0M,KAAK1M,EACRoc,EAAG1P,KAAK0P,GAEZgiD,EAAUniE,KAAKwqB,IAAI23C,GAAW,KAAO,EAAIA,EACzC,MAAM/iC,EAAUvsB,EAAgBitB,UAAUlmB,EAAQwlB,SAC5CymC,EAAoBp1D,KAAKw+B,MAAMrtC,QAAU6O,KAAK4uD,WAAWz9D,QAAU6O,KAAKguD,KAAK78D,QAAU6O,KAAK6uD,UAAU19D,QAAU6O,KAAKiuD,OAAO98D,OAC9HgY,EAAQgzB,SAAWi5B,IACnBtnD,EAAI62B,OACJ72B,EAAIunD,YAAc3D,EAClB1xD,KAAK0kC,eAAe+uB,EAAI3lD,EAAKgnD,EAAa3rD,GAC1C/G,EAAgBmoD,sBAAsBz8C,EAAK3E,EAAQqhD,eACnDiJ,EAAG/jD,GAAKif,EAAQ9Z,IAChB7U,KAAK+lC,UAAU0tB,EAAI3lD,EAAK3E,GACxBnJ,KAAKo0D,SAASX,EAAI3lD,EAAK3E,GACvBnJ,KAAK20D,WAAWlB,EAAI3lD,EAAK3E,GACzB/G,EAAgBkpD,qBAAqBx9C,EAAK3E,EAAQqhD,eAClD18C,EAAI+2B,UAEZ,CACHgR,oBACO,OAAO71C,KAAKoE,SAAW,EAC3B,CACH0xC,kBAAkBC,EAAgBoX,GAC3B,MAAMnX,EAAah2C,KAAKoE,QAClBmD,EAASwuC,EAAetjD,KAAI,EAAGwY,eAAeN,YAChD,MAAMW,EAAOtL,KAAK4C,MAAMiO,eAAe5F,GACvC,IAAKK,EACD,MAAM,IAAIud,MAAM,kCAAoC5d,GAExD,MAAO,CACHA,eACAwK,QAASnK,EAAKqF,KAAKhG,GACnBA,QACH,IAEC2jB,GAAWlsB,EAAgB6zC,eAAeD,EAAYzuC,GACtD+tD,EAAkBt1D,KAAKu1D,iBAAiBhuD,EAAQ4lD,IAClD7+B,GAAWgnC,KACXt1D,KAAKoE,QAAUmD,EACfvH,KAAK2xD,eAAiBxE,EACtBntD,KAAKw1D,qBAAsB,EAC3Bx1D,KAAKwH,QAAO,GAEpB,CACHqkD,YAAYp7D,EAAG0lD,EAAQK,GAAc,GAC9B,GAAIL,GAAUn2C,KAAKw1D,oBACf,OAAO,EAEXx1D,KAAKw1D,qBAAsB,EAC3B,MAAMrsD,EAAUnJ,KAAKmJ,QACf6sC,EAAah2C,KAAKoE,SAAW,GAC7BmD,EAASvH,KAAK22C,mBAAmBlmD,EAAGulD,EAAYG,EAAQK,GACxD8e,EAAkBt1D,KAAKu1D,iBAAiBhuD,EAAQ9W,GAChD69B,EAAU6nB,IAAW/zC,EAAgB6zC,eAAe1uC,EAAQyuC,IAAesf,EAWjF,OAVIhnC,IACAtuB,KAAKoE,QAAUmD,GACX4B,EAAQgzB,SAAWhzB,EAAQ6pD,YAC3BhzD,KAAK2xD,eAAiB,CAClBr+D,EAAG7C,EAAE6C,EACLoc,EAAGjf,EAAEif,GAET1P,KAAKwH,QAAO,EAAM2uC,KAGnB7nB,CACX,CACHqoB,mBAAmBlmD,EAAGulD,EAAYG,EAAQK,GACnC,MAAMrtC,EAAUnJ,KAAKmJ,QACrB,GAAe,aAAX1Y,EAAEqP,KACF,MAAO,GAEX,IAAK02C,EACD,OAAOR,EAEX,MAAMzuC,EAASvH,KAAK4C,MAAMiyC,0BAA0BpkD,EAAG0Y,EAAQ6B,KAAM7B,EAASgtC,GAI9E,OAHIhtC,EAAQiB,SACR7C,EAAO6C,UAEJ7C,CACX,CACHguD,iBAAiBhuD,EAAQ9W,GAClB,MAAM,OAAEuhE,EAAO,OAAEC,EAAO,QAAE9oD,GAAanJ,KACjCqqB,EAAW4iC,GAAY9jD,EAAQkhB,UAAU3mB,KAAK1D,KAAMuH,EAAQ9W,GAClE,OAAoB,IAAb45B,IAAuB2nC,IAAW3nC,EAAS/2B,GAAK2+D,IAAW5nC,EAAS3a,EAC/E,EAEJ,IAAI+lD,GAAiB,CACjB7oD,GAAI,UACJu/C,SAAUsF,GACVxE,eACAyI,UAAW9yD,EAAO49C,EAAOr3C,GACjBA,IACAvG,EAAMmrD,QAAU,IAAI0D,GAAQ,CACxB7uD,QACAuG,YAGZ,EACAixB,aAAcx3B,EAAO49C,EAAOr3C,GACpBvG,EAAMmrD,SACNnrD,EAAMmrD,QAAQj/C,WAAW3F,EAEjC,EACA6H,MAAOpO,EAAO49C,EAAOr3C,GACbvG,EAAMmrD,SACNnrD,EAAMmrD,QAAQj/C,WAAW3F,EAEjC,EACAwsD,UAAW/yD,GACP,MAAMmrD,EAAUnrD,EAAMmrD,QACtB,GAAIA,GAAWA,EAAQoH,cAAe,CAClC,MAAMx8C,EAAO,CACTo1C,WAEJ,IAGO,IAHHnrD,EAAM26B,cAAc,oBAAqB,IACtC5kB,EACH2xB,YAAY,IAEZ,OAEJyjB,EAAQ5pD,KAAKvB,EAAMkL,KACnBlL,EAAM26B,cAAc,mBAAoB5kB,EAC5C,CACJ,EACAyzC,WAAYxpD,EAAO+V,GACf,GAAI/V,EAAMmrD,QAAS,CACf,MAAMtjC,EAAmB9R,EAAKw9B,OAC1BvzC,EAAMmrD,QAAQlC,YAAYlzC,EAAK5T,MAAO0lB,EAAkB9R,EAAK69B,eAC7D79B,EAAK2V,SAAU,EAEvB,CACJ,EACA7lB,SAAU,CACN0zB,SAAS,EACT62B,SAAU,KACV3oC,SAAU,UACVlJ,gBAAiB,kBACjBuyC,WAAY,OACZnI,UAAW,CACPhrD,OAAQ,QAEZuuD,aAAc,EACdC,kBAAmB,EACnB72B,WAAY,OACZi5B,UAAW,OACXlC,YAAa,EACbf,SAAU,CAAC,EACXmG,UAAW,OACXQ,YAAa,OACb1F,cAAe,EACfD,gBAAiB,EACjBf,WAAY,CACR5tD,OAAQ,QAEZq0D,YAAa,OACbjmC,QAAS,EACTihC,aAAc,EACdD,UAAW,EACXO,aAAc,EACdxI,UAAW,CAAC55C,EAAK3D,IAAOA,EAAK+jD,SAASnkD,KACtC49C,SAAU,CAAC75C,EAAK3D,IAAOA,EAAK+jD,SAASnkD,KACrCiqD,mBAAoB,OACpBhF,eAAe,EACf/hC,WAAY,EACZ5L,YAAa,gBACbG,YAAa,EACb9Y,UAAW,CACPxF,SAAU,IACVyD,OAAQ,gBAEZ4C,WAAY,CACRyS,QAAS,CACLlc,KAAM,SACNiJ,WAAY,CACR,IACA,IACA,QACA,SACA,SACA,WAGR2oD,QAAS,CACL/qD,OAAQ,SACRzD,SAAU,MAGlBH,UAAW0tD,IAEfppB,cAAe,CACX6mB,SAAU,OACVC,WAAY,OACZ5C,UAAW,QAEfrjB,YAAa,CACT1nB,YAAc1C,GAAgB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACjE2C,YAAY,EACZ1d,UAAW,CACPyd,aAAa,EACbC,YAAY,GAEhB/X,UAAW,CACPktD,WAAW,GAEfrsD,WAAY,CACRqsD,UAAW,cAGnBhoB,uBAAwB,CACpB,gBAIJhtB,GAAuBxiB,OAAOuD,OAAO,CACzCC,UAAW,KACXi0D,OAAQvV,GACRwV,WAAYzU,GACZ0U,OAAQprD,GACRo9C,OAAQmE,GACR8J,SAAUhJ,GACVT,MAAOK,GACP6E,QAASgE,KAwBT,SAASQ,GAAkBnsD,GACvB,MAAM+I,EAAS7S,KAAK8S,YACpB,OAAIhJ,GAAS,GAAKA,EAAQ+I,EAAO1hB,OACtB0hB,EAAO/I,GAEXA,CACX,CACA,MAAMosD,WAAsB59B,GACxB1qB,UAAY,WACfA,gBAAkB,CACXqM,MAAO,CACHogB,SAAU47B,KAGlBp2D,YAAYsG,GACRqW,MAAMrW,GACLnG,KAAKm2D,iBAAc1kE,EACpBuO,KAAKo2D,YAAc,EACnBp2D,KAAKq2D,aAAe,EACxB,CACAptC,KAAKyiB,GACD,MAAM4qB,EAAQt2D,KAAKq2D,aACnB,GAAIC,EAAMnlE,OAAQ,CACd,MAAM0hB,EAAS7S,KAAK8S,YACpB,IAAK,MAAM,MAAEnI,EAAM,MAAE+J,KAAY4hD,EACzBzjD,EAAOlI,KAAW+J,GAClB7B,EAAO4F,OAAO9N,EAAO,GAG7B3K,KAAKq2D,aAAe,EACxB,CACA75C,MAAMyM,KAAKyiB,EACf,CACAt5B,MAAM6D,EAAKtL,GACP,GAAIvI,EAAgB2a,cAAc9G,GAC9B,OAAO,KAEX,MAAMpD,EAAS7S,KAAK8S,YAEpB,MAxCW,EAACnI,EAAOnb,IAAgB,OAAVmb,EAAiB,KAAOvI,EAAgBm8B,YAAYhvC,KAAKL,MAAMyb,GAAQ,EAAGnb,GAwC5F+nC,CADP5sB,EAAQ4rD,SAAS5rD,IAAUkI,EAAOlI,KAAWsL,EAAMtL,EA/C3D,SAAwBkI,EAAQoD,EAAKtL,EAAO6rD,GACxC,MAAMl6B,EAAQzpB,EAAO8K,QAAQ1H,GAC7B,OAAe,IAAXqmB,EAdY,EAACzpB,EAAQoD,EAAKtL,EAAO6rD,KAClB,iBAARvgD,GACPtL,EAAQkI,EAAO5N,KAAKgR,GAAO,EAC3BugD,EAAY1R,QAAQ,CAChBn6C,QACA+J,MAAOuB,KAEJyH,MAAMzH,KACbtL,EAAQ,MAELA,GAKI8rD,CAAY5jD,EAAQoD,EAAKtL,EAAO6rD,GAGpCl6B,IADMzpB,EAAO6jD,YAAYzgD,GACRtL,EAAQ2xB,CACpC,CAwCmEq6B,CAAe9jD,EAAQoD,EAAK7T,EAAgByN,eAAelF,EAAOsL,GAAMjW,KAAKq2D,cAC/GxjD,EAAO1hB,OAAS,EAC7C,CACA2pC,sBACI,MAAM,WAAE3mB,EAAW,WAAEC,GAAgBpU,KAAKqU,gBAC1C,IAAI,IAAE5kB,EAAI,IAAED,GAASwQ,KAAKyT,WAAU,GACR,UAAxBzT,KAAKmJ,QAAQu1C,SACRvqC,IACD1kB,EAAM,GAEL2kB,IACD5kB,EAAMwQ,KAAK8S,YAAY3hB,OAAS,IAGxC6O,KAAKvQ,IAAMA,EACXuQ,KAAKxQ,IAAMA,CACf,CACA0rC,aACI,MAAMzrC,EAAMuQ,KAAKvQ,IACXD,EAAMwQ,KAAKxQ,IACX0sB,EAASlc,KAAKmJ,QAAQ+S,OACtBjC,EAAQ,GACd,IAAIpH,EAAS7S,KAAK8S,YAClBD,EAAiB,IAARpjB,GAAaD,IAAQqjB,EAAO1hB,OAAS,EAAI0hB,EAASA,EAAO4/B,MAAMhjD,EAAKD,EAAM,GACnFwQ,KAAKo2D,YAAc7mE,KAAKC,IAAIqjB,EAAO1hB,QAAU+qB,EAAS,EAAI,GAAI,GAC9Dlc,KAAKm2D,YAAcn2D,KAAKvQ,KAAOysB,EAAS,GAAM,GAC9C,IAAI,IAAIpS,EAAQra,EAAKqa,GAASta,EAAKsa,IAC/BmQ,EAAMhV,KAAK,CACP6E,UAGR,OAAOmQ,CACX,CACAtF,iBAAiB7K,GACb,OAAOmsD,GAAkBvyD,KAAK1D,KAAM8J,EACxC,CACHxB,YACOkU,MAAMlU,YACDtI,KAAK2c,iBACN3c,KAAK6pB,gBAAkB7pB,KAAK6pB,eAEpC,CACA7P,iBAAiBlQ,GAIb,MAHqB,iBAAVA,IACPA,EAAQ9J,KAAKoS,MAAMtI,IAEN,OAAVA,EAAiB0J,IAAMxT,KAAK2e,oBAAoB7U,EAAQ9J,KAAKm2D,aAAen2D,KAAKo2D,YAC5F,CACAl8C,gBAAgBvP,GACZ,MAAMsP,EAAQja,KAAKia,MACnB,OAAItP,EAAQ,GAAKA,EAAQsP,EAAM9oB,OAAS,EAC7B,KAEJ6O,KAAKga,iBAAiBC,EAAMtP,GAAOb,MAC9C,CACA+U,iBAAiB+hB,GACb,OAAOrxC,KAAKL,MAAM8Q,KAAKm2D,YAAcn2D,KAAKghC,mBAAmBJ,GAAS5gC,KAAKo2D,YAC/E,CACA15C,eACI,OAAO1c,KAAK+U,MAChB,EAuGJ,SAAS6hD,GAAkB9sD,EAAO+sD,GAAY,WAAE57C,EAAW,YAAE2iB,IACzD,MAAMk5B,EAAM10D,EAAgB8f,UAAU0b,GAChCv+B,GAAS4b,EAAa1rB,KAAK8zB,IAAIyzC,GAAOvnE,KAAK4zB,IAAI2zC,KAAS,KACxD3lE,EAAS,IAAO0lE,GAAc,GAAK/sD,GAAO3Y,OAChD,OAAO5B,KAAKE,IAAIonE,EAAax3D,EAAOlO,EACxC,CACA,MAAM4lE,WAAwBz+B,GAC1Bz4B,YAAYsG,GACRqW,MAAMrW,GACLnG,KAAKuD,WAAQ9R,EACbuO,KAAKqK,SAAM5Y,EACXuO,KAAKm2D,iBAAc1kE,EACnBuO,KAAKg3D,eAAYvlE,EAClBuO,KAAKo2D,YAAc,CACvB,CACAhkD,MAAM6D,EAAKtL,GACP,OAAIvI,EAAgB2a,cAAc9G,KAGd,iBAARA,GAAoBA,aAAenC,UAAYyiD,UAAUtgD,GAF1D,MAKHA,CACZ,CACAghD,yBACI,MAAM,YAAE56C,GAAiBrc,KAAKmJ,SACxB,WAAEgL,EAAW,WAAEC,GAAgBpU,KAAKqU,gBAC1C,IAAI,IAAE5kB,EAAI,IAAED,GAASwQ,KACrB,MAAMk3D,EAAU/nE,GAAIM,EAAM0kB,EAAa1kB,EAAMN,EACvCgoE,EAAUhoE,GAAIK,EAAM4kB,EAAa5kB,EAAML,EAC7C,GAAIktB,EAAa,CACb,MAAM+6C,EAAUh1D,EAAgBgJ,KAAK3b,GAC/B4nE,EAAUj1D,EAAgBgJ,KAAK5b,GACjC4nE,EAAU,GAAKC,EAAU,EACzBF,EAAO,GACAC,EAAU,GAAKC,EAAU,GAChCH,EAAO,EAEf,CACA,GAAIznE,IAAQD,EAAK,CACb,IAAI0sB,EAAiB,IAAR1sB,EAAY,EAAID,KAAKwqB,IAAU,IAANvqB,GACtC2nE,EAAO3nE,EAAM0sB,GACRG,GACD66C,EAAOznE,EAAMysB,EAErB,CACAlc,KAAKvQ,IAAMA,EACXuQ,KAAKxQ,IAAMA,CACf,CACA8nE,eACI,MAAM98B,EAAWx6B,KAAKmJ,QAAQ8Q,MAC9B,IACIs9C,GADA,cAAEvgC,EAAc,SAAEwgC,GAAch9B,EAepC,OAbIg9B,GACAD,EAAWhoE,KAAKqnC,KAAK52B,KAAKxQ,IAAMgoE,GAAYjoE,KAAKuX,MAAM9G,KAAKvQ,IAAM+nE,GAAY,EAC1ED,EAAW,MACXnoD,QAAQC,KAAK,UAAUrP,KAAK4M,sBAAsB4qD,mCAA0CD,8BAC5FA,EAAW,OAGfA,EAAWv3D,KAAKy3D,mBAChBzgC,EAAgBA,GAAiB,IAEjCA,IACAugC,EAAWhoE,KAAKE,IAAIunC,EAAeugC,IAEhCA,CACX,CACHE,mBACO,OAAO3jD,OAAOC,iBAClB,CACAmnB,aACI,MAAM/wB,EAAOnK,KAAKmJ,QACZqxB,EAAWrwB,EAAK8P,MACtB,IAAIs9C,EAAWv3D,KAAKs3D,eACpBC,EAAWhoE,KAAKC,IAAI,EAAG+nE,GACvB,MAcMt9C,EA9Ld,SAAyBy9C,EAAmBC,GACxC,MAAM19C,EAAQ,IAER,OAAEykC,EAAO,KAAElc,EAAK,IAAE/yC,EAAI,IAAED,EAAI,UAAEooE,EAAU,MAAEvlD,EAAM,SAAEklD,EAAS,UAAEM,EAAU,cAAEC,GAAmBJ,EAC5FK,EAAOv1B,GAAQ,EACfw1B,EAAYT,EAAW,GACrB9nE,IAAKwoE,EAAOzoE,IAAK0oE,GAAUP,EAC7BxjD,GAAc/R,EAAgB2a,cAActtB,GAC5C2kB,GAAchS,EAAgB2a,cAAcvtB,GAC5C2oE,GAAgB/1D,EAAgB2a,cAAc1K,GAC9CwkD,GAAcqB,EAAOD,IAASJ,EAAY,GAChD,IACI9xD,EAAQqyD,EAASC,EAASC,EAD1B/3C,EAAUne,EAAgBm2D,SAASL,EAAOD,GAAQD,EAAYD,GAAQA,EAE1E,GAAIx3C,EAXgB,QAWUpM,IAAeC,EACzC,MAAO,CACH,CACItK,MAAOmuD,GAEX,CACInuD,MAAOouD,IAInBI,EAAY/oE,KAAKqnC,KAAKshC,EAAO33C,GAAWhxB,KAAKuX,MAAMmxD,EAAO13C,GACtD+3C,EAAYN,IACZz3C,EAAUne,EAAgBm2D,QAAQD,EAAY/3C,EAAUy3C,EAAYD,GAAQA,GAE3E31D,EAAgB2a,cAAc66C,KAC/B7xD,EAASxW,KAAK2P,IAAI,GAAI04D,GACtBr3C,EAAUhxB,KAAKqnC,KAAKrW,EAAUxa,GAAUA,GAE7B,UAAX24C,GACA0Z,EAAU7oE,KAAKuX,MAAMmxD,EAAO13C,GAAWA,EACvC83C,EAAU9oE,KAAKqnC,KAAKshC,EAAO33C,GAAWA,IAEtC63C,EAAUH,EACVI,EAAUH,GAEV/jD,GAAcC,GAAcouB,GAAQpgC,EAAgBo2D,aAAahpE,EAAMC,GAAO+yC,EAAMjiB,EAAU,MAC9F+3C,EAAY/oE,KAAKL,MAAMK,KAAKE,KAAKD,EAAMC,GAAO8wB,EAASg3C,IACvDh3C,GAAW/wB,EAAMC,GAAO6oE,EACxBF,EAAU3oE,EACV4oE,EAAU7oE,GACH2oE,GACPC,EAAUjkD,EAAa1kB,EAAM2oE,EAC7BC,EAAUjkD,EAAa5kB,EAAM6oE,EAC7BC,EAAYjmD,EAAQ,EACpBkO,GAAW83C,EAAUD,GAAWE,IAEhCA,GAAaD,EAAUD,GAAW73C,EAE9B+3C,EADAl2D,EAAgBq2D,aAAaH,EAAW/oE,KAAKL,MAAMopE,GAAY/3C,EAAU,KAC7DhxB,KAAKL,MAAMopE,GAEX/oE,KAAKqnC,KAAK0hC,IAG9B,MAAMI,EAAgBnpE,KAAKC,IAAI4S,EAAgBu2D,eAAep4C,GAAUne,EAAgBu2D,eAAeP,IACvGryD,EAASxW,KAAK2P,IAAI,GAAIkD,EAAgB2a,cAAc66C,GAAac,EAAgBd,GACjFQ,EAAU7oE,KAAKL,MAAMkpE,EAAUryD,GAAUA,EACzCsyD,EAAU9oE,KAAKL,MAAMmpE,EAAUtyD,GAAUA,EACzC,IAAIzH,EAAI,EAgBR,IAfI6V,IACI2jD,GAAiBM,IAAY3oE,GAC7BwqB,EAAMhV,KAAK,CACP6E,MAAOra,IAEP2oE,EAAU3oE,GACV6O,IAEA8D,EAAgBq2D,aAAalpE,KAAKL,OAAOkpE,EAAU95D,EAAIiiB,GAAWxa,GAAUA,EAAQtW,EAAKmnE,GAAkBnnE,EAAKonE,EAAYa,KAC5Hp5D,KAEG85D,EAAU3oE,GACjB6O,KAGFA,EAAIg6D,IAAah6D,EAAE,CACrB,MAAMs6D,EAAYrpE,KAAKL,OAAOkpE,EAAU95D,EAAIiiB,GAAWxa,GAAUA,EACjE,GAAIqO,GAAcwkD,EAAYppE,EAC1B,MAEJyqB,EAAMhV,KAAK,CACP6E,MAAO8uD,GAEf,CAcA,OAbIxkD,GAAc0jD,GAAiBO,IAAY7oE,EACvCyqB,EAAM9oB,QAAUiR,EAAgBq2D,aAAax+C,EAAMA,EAAM9oB,OAAS,GAAG2Y,MAAOta,EAAKonE,GAAkBpnE,EAAKqnE,EAAYa,IACpHz9C,EAAMA,EAAM9oB,OAAS,GAAG2Y,MAAQta,EAEhCyqB,EAAMhV,KAAK,CACP6E,MAAOta,IAGP4kB,GAAcikD,IAAY7oE,GAClCyqB,EAAMhV,KAAK,CACP6E,MAAOuuD,IAGRp+C,CACX,CA2FsB4+C,CAdkB,CAC5BtB,WACA7Y,OAAQv0C,EAAKu0C,OACbjvD,IAAK0a,EAAK1a,IACVD,IAAK2a,EAAK3a,IACVooE,UAAWp9B,EAASo9B,UACpBp1B,KAAMhI,EAASg9B,SACfnlD,MAAOmoB,EAASnoB,MAChBwlD,UAAW73D,KAAKwmC,aAChBvrB,WAAYjb,KAAK2c,eACjBihB,YAAapD,EAASoD,aAAe,EACrCk6B,eAA0C,IAA3Bt9B,EAASs9B,eAEV93D,KAAK64B,QAAU74B,MAajC,MAXoB,UAAhBmK,EAAKu0C,QACLt8C,EAAgB02D,mBAAmB7+C,EAAOja,KAAM,SAEhDmK,EAAKC,SACL6P,EAAM7P,UACNpK,KAAKuD,MAAQvD,KAAKxQ,IAClBwQ,KAAKqK,IAAMrK,KAAKvQ,MAEhBuQ,KAAKuD,MAAQvD,KAAKvQ,IAClBuQ,KAAKqK,IAAMrK,KAAKxQ,KAEbyqB,CACX,CACH3R,YACO,MAAM2R,EAAQja,KAAKia,MACnB,IAAI1W,EAAQvD,KAAKvQ,IACb4a,EAAMrK,KAAKxQ,IAEf,GADAgtB,MAAMlU,YACFtI,KAAKmJ,QAAQ+S,QAAUjC,EAAM9oB,OAAQ,CACrC,MAAM+qB,GAAU7R,EAAM9G,GAAShU,KAAKC,IAAIyqB,EAAM9oB,OAAS,EAAG,GAAK,EAC/DoS,GAAS2Y,EACT7R,GAAO6R,CACX,CACAlc,KAAKm2D,YAAc5yD,EACnBvD,KAAKg3D,UAAY3sD,EACjBrK,KAAKo2D,YAAc/rD,EAAM9G,CAC7B,CACAoR,iBAAiB7K,GACb,OAAO1H,EAAgB+iB,aAAarb,EAAO9J,KAAK4C,MAAMuG,QAAQic,OAAQplB,KAAKmJ,QAAQ8Q,MAAMkP,OAC7F,EAGJ,MAAM4vC,WAAoBhC,GACtBnpD,UAAY,SACfA,gBAAkB,CACXqM,MAAO,CACHogB,SAAUj4B,EAAgB42D,MAAMC,WAAWC,UAGnDp+B,sBACI,MAAM,IAAErrC,EAAI,IAAED,GAASwQ,KAAKyT,WAAU,GACtCzT,KAAKvQ,IAAM2S,EAAgB+I,eAAe1b,GAAOA,EAAM,EACvDuQ,KAAKxQ,IAAM4S,EAAgB+I,eAAe3b,GAAOA,EAAM,EACvDwQ,KAAKi3D,wBACT,CACHQ,mBACO,MAAMx8C,EAAajb,KAAK2c,eAClBxrB,EAAS8pB,EAAajb,KAAKsd,MAAQtd,KAAKqd,OACxCugB,EAAcx7B,EAAgB8f,UAAUliB,KAAKmJ,QAAQ8Q,MAAM2jB,aAC3Dv+B,GAAS4b,EAAa1rB,KAAK8zB,IAAIua,GAAeruC,KAAK4zB,IAAIya,KAAiB,KACxEmC,EAAW//B,KAAKogC,wBAAwB,GAC9C,OAAO7wC,KAAKqnC,KAAKzlC,EAAS5B,KAAKE,IAAI,GAAIswC,EAAS9H,WAAa54B,GACjE,CACA2a,iBAAiBlQ,GACb,OAAiB,OAAVA,EAAiB0J,IAAMxT,KAAK2e,oBAAoB7U,EAAQ9J,KAAKm2D,aAAen2D,KAAKo2D,YAC5F,CACAv3C,iBAAiB+hB,GACb,OAAO5gC,KAAKm2D,YAAcn2D,KAAKghC,mBAAmBJ,GAAS5gC,KAAKo2D,WACpE,EAGJ,MAAM+C,GAAchqE,GAAII,KAAKuX,MAAM1E,EAAgBg3D,MAAMjqE,IACnDkqE,GAAiB,CAAClqE,EAAG4D,IAAIxD,KAAK2P,IAAI,GAAIi6D,GAAWhqE,GAAK4D,GAC5D,SAASumE,GAAQC,GAEb,OAAkB,GADHA,EAAUhqE,KAAK2P,IAAI,GAAIi6D,GAAWI,GAErD,CACA,SAASC,GAAM/pE,EAAKD,EAAKiqE,GACrB,MAAMC,EAAYnqE,KAAK2P,IAAI,GAAIu6D,GACzBl2D,EAAQhU,KAAKuX,MAAMrX,EAAMiqE,GAE/B,OADYnqE,KAAKqnC,KAAKpnC,EAAMkqE,GACfn2D,CACjB,CAkDA,MAAMo2D,WAAyBrhC,GAC3B1qB,UAAY,cACfA,gBAAkB,CACXqM,MAAO,CACHogB,SAAUj4B,EAAgB42D,MAAMC,WAAWW,YAC3C19B,MAAO,CACHC,SAAS,KAIrBt8B,YAAYsG,GACRqW,MAAMrW,GACLnG,KAAKuD,WAAQ9R,EACbuO,KAAKqK,SAAM5Y,EACXuO,KAAKm2D,iBAAc1kE,EACpBuO,KAAKo2D,YAAc,CACvB,CACAhkD,MAAM6D,EAAKtL,GACP,MAAMb,EAAQitD,GAAgB/tC,UAAU5W,MAAMq7C,MAAMztD,KAAM,CACtDiW,EACAtL,IAEJ,GAAc,IAAVb,EAIJ,OAAO1H,EAAgB+I,eAAerB,IAAUA,EAAQ,EAAIA,EAAQ,KAHhE9J,KAAK65D,OAAQ,CAIrB,CACA/+B,sBACI,MAAM,IAAErrC,EAAI,IAAED,GAASwQ,KAAKyT,WAAU,GACtCzT,KAAKvQ,IAAM2S,EAAgB+I,eAAe1b,GAAOF,KAAKC,IAAI,EAAGC,GAAO,KACpEuQ,KAAKxQ,IAAM4S,EAAgB+I,eAAe3b,GAAOD,KAAKC,IAAI,EAAGA,GAAO,KAChEwQ,KAAKmJ,QAAQkT,cACbrc,KAAK65D,OAAQ,GAEb75D,KAAK65D,OAAS75D,KAAKvQ,MAAQuQ,KAAKs5B,gBAAkBl3B,EAAgB+I,eAAenL,KAAKo5B,YACtFp5B,KAAKvQ,IAAMA,IAAQ4pE,GAAer5D,KAAKvQ,IAAK,GAAK4pE,GAAer5D,KAAKvQ,KAAM,GAAK4pE,GAAer5D,KAAKvQ,IAAK,IAE7GuQ,KAAKi3D,wBACT,CACAA,yBACI,MAAM,WAAE9iD,EAAW,WAAEC,GAAgBpU,KAAKqU,gBAC1C,IAAI5kB,EAAMuQ,KAAKvQ,IACXD,EAAMwQ,KAAKxQ,IACf,MAAM0nE,EAAU/nE,GAAIM,EAAM0kB,EAAa1kB,EAAMN,EACvCgoE,EAAUhoE,GAAIK,EAAM4kB,EAAa5kB,EAAML,EACzCM,IAAQD,IACJC,GAAO,GACPynE,EAAO,GACPC,EAAO,MAEPD,EAAOmC,GAAe5pE,GAAM,IAC5B0nE,EAAOkC,GAAe7pE,EAAK,MAG/BC,GAAO,GACPynE,EAAOmC,GAAe7pE,GAAM,IAE5BA,GAAO,GACP2nE,EAAOkC,GAAe5pE,EAAK,IAE/BuQ,KAAKvQ,IAAMA,EACXuQ,KAAKxQ,IAAMA,CACf,CACA0rC,aACI,MAAM/wB,EAAOnK,KAAKmJ,QAKZ8Q,EA5Gb,SAAuBy9C,GAAmB,IAAEjoE,EAAI,IAAED,IAC/CC,EAAM2S,EAAgBy3B,gBAAgB69B,EAAkBjoE,IAAKA,GAC7D,MAAMwqB,EAAQ,GACR6/C,EAASX,GAAW1pE,GAC1B,IAAIsqE,EAfR,SAAkBtqE,EAAKD,GAEnB,IAAIiqE,EAAWN,GADD3pE,EAAMC,GAEpB,KAAM+pE,GAAM/pE,EAAKD,EAAKiqE,GAAY,IAC9BA,IAEJ,KAAMD,GAAM/pE,EAAKD,EAAKiqE,GAAY,IAC9BA,IAEJ,OAAOlqE,KAAKE,IAAIgqE,EAAUN,GAAW1pE,GACzC,CAKcuqE,CAASvqE,EAAKD,GACpBooE,EAAYmC,EAAM,EAAIxqE,KAAK2P,IAAI,GAAI3P,KAAKwqB,IAAIggD,IAAQ,EACxD,MAAMvC,EAAWjoE,KAAK2P,IAAI,GAAI66D,GACxB7+C,EAAO4+C,EAASC,EAAMxqE,KAAK2P,IAAI,GAAI46D,GAAU,EAC7Cv2D,EAAQhU,KAAKL,OAAOO,EAAMyrB,GAAQ08C,GAAaA,EAC/C17C,EAAS3sB,KAAKuX,OAAOrX,EAAMyrB,GAAQs8C,EAAW,IAAMA,EAAW,GACrE,IAAIyC,EAAc1qE,KAAKuX,OAAOvD,EAAQ2Y,GAAU3sB,KAAK2P,IAAI,GAAI66D,IACzDjwD,EAAQ1H,EAAgBy3B,gBAAgB69B,EAAkBjoE,IAAKF,KAAKL,OAAOgsB,EAAOgB,EAAS+9C,EAAc1qE,KAAK2P,IAAI,GAAI66D,IAAQnC,GAAaA,GAC/I,KAAM9tD,EAAQta,GACVyqB,EAAMhV,KAAK,CACP6E,QACAoyB,MAAOo9B,GAAQxvD,GACfmwD,gBAEAA,GAAe,GACfA,EAAcA,EAAc,GAAK,GAAK,GAEtCA,IAEAA,GAAe,KACfF,IACAE,EAAc,EACdrC,EAAYmC,GAAO,EAAI,EAAInC,GAE/B9tD,EAAQva,KAAKL,OAAOgsB,EAAOgB,EAAS+9C,EAAc1qE,KAAK2P,IAAI,GAAI66D,IAAQnC,GAAaA,EAExF,MAAMsC,EAAW93D,EAAgBy3B,gBAAgB69B,EAAkBloE,IAAKsa,GAMxE,OALAmQ,EAAMhV,KAAK,CACP6E,MAAOowD,EACPh+B,MAAOo9B,GAAQY,GACfD,gBAEGhgD,CACX,CAuEsBkgD,CAJY,CACtB1qE,IAAKuQ,KAAKo5B,SACV5pC,IAAKwQ,KAAKm5B,UAEiCn5B,MAY/C,MAXoB,UAAhBmK,EAAKu0C,QACLt8C,EAAgB02D,mBAAmB7+C,EAAOja,KAAM,SAEhDmK,EAAKC,SACL6P,EAAM7P,UACNpK,KAAKuD,MAAQvD,KAAKxQ,IAClBwQ,KAAKqK,IAAMrK,KAAKvQ,MAEhBuQ,KAAKuD,MAAQvD,KAAKvQ,IAClBuQ,KAAKqK,IAAMrK,KAAKxQ,KAEbyqB,CACX,CACHtF,iBAAiB7K,GACV,YAAiBrY,IAAVqY,EAAsB,IAAM1H,EAAgB+iB,aAAarb,EAAO9J,KAAK4C,MAAMuG,QAAQic,OAAQplB,KAAKmJ,QAAQ8Q,MAAMkP,OACzH,CACH7gB,YACO,MAAM/E,EAAQvD,KAAKvQ,IACnB+sB,MAAMlU,YACNtI,KAAKm2D,YAAc/zD,EAAgBg3D,MAAM71D,GACzCvD,KAAKo2D,YAAch0D,EAAgBg3D,MAAMp5D,KAAKxQ,KAAO4S,EAAgBg3D,MAAM71D,EAC/E,CACAyW,iBAAiBlQ,GAIb,YAHcrY,IAAVqY,GAAiC,IAAVA,IACvBA,EAAQ9J,KAAKvQ,KAEH,OAAVqa,GAAkB4T,MAAM5T,GACjB0J,IAEJxT,KAAK2e,mBAAmB7U,IAAU9J,KAAKvQ,IAAM,GAAK2S,EAAgBg3D,MAAMtvD,GAAS9J,KAAKm2D,aAAen2D,KAAKo2D,YACrH,CACAv3C,iBAAiB+hB,GACb,MAAMC,EAAU7gC,KAAKghC,mBAAmBJ,GACxC,OAAOrxC,KAAK2P,IAAI,GAAIc,KAAKm2D,YAAct1B,EAAU7gC,KAAKo2D,YAC1D,EAGJ,SAASgE,GAAsBjwD,GAC3B,MAAMqwB,EAAWrwB,EAAK8P,MACtB,GAAIugB,EAASvT,SAAW9c,EAAK8c,QAAS,CAClC,MAAM0H,EAAUvsB,EAAgBitB,UAAUmL,EAAS8J,iBACnD,OAAOliC,EAAgByN,eAAe2qB,EAASzC,MAAQyC,EAASzC,KAAKhuB,KAAM3H,EAAgBqG,SAASsvB,KAAKhuB,MAAQ4kB,EAAQtR,MAC7H,CACA,OAAO,CACX,CAUA,SAASg9C,GAAgB52C,EAAOgJ,EAAK1iB,EAAMta,EAAKD,GAC5C,OAAIi0B,IAAUh0B,GAAOg0B,IAAUj0B,EACpB,CACH+T,MAAOkpB,EAAM1iB,EAAO,EACpBM,IAAKoiB,EAAM1iB,EAAO,GAEf0Z,EAAQh0B,GAAOg0B,EAAQj0B,EACvB,CACH+T,MAAOkpB,EAAM1iB,EACbM,IAAKoiB,GAGN,CACHlpB,MAAOkpB,EACPpiB,IAAKoiB,EAAM1iB,EAEnB,CA8BA,SAASuwD,GAAaC,EAAQj/C,EAAMmI,EAAO+2C,EAASC,GAChD,MAAMp3C,EAAM9zB,KAAKwqB,IAAIxqB,KAAK8zB,IAAII,IACxBN,EAAM5zB,KAAKwqB,IAAIxqB,KAAK4zB,IAAIM,IAC9B,IAAInwB,EAAI,EACJoc,EAAI,EACJ8qD,EAAQj3D,MAAQ+X,EAAKjsB,GACrBiE,GAAKgoB,EAAKjsB,EAAImrE,EAAQj3D,OAAS8f,EAC/Bk3C,EAAOlrE,EAAIE,KAAKE,IAAI8qE,EAAOlrE,EAAGisB,EAAKjsB,EAAIiE,IAChCknE,EAAQnwD,IAAMiR,EAAKlqB,IAC1BkC,GAAKknE,EAAQnwD,IAAMiR,EAAKlqB,GAAKiyB,EAC7Bk3C,EAAOnpE,EAAI7B,KAAKC,IAAI+qE,EAAOnpE,EAAGkqB,EAAKlqB,EAAIkC,IAEvCmnE,EAAQl3D,MAAQ+X,EAAKxa,GACrB4O,GAAK4L,EAAKxa,EAAI25D,EAAQl3D,OAAS4f,EAC/Bo3C,EAAOz5D,EAAIvR,KAAKE,IAAI8qE,EAAOz5D,EAAGwa,EAAKxa,EAAI4O,IAChC+qD,EAAQpwD,IAAMiR,EAAKhrB,IAC1Bof,GAAK+qD,EAAQpwD,IAAMiR,EAAKhrB,GAAK6yB,EAC7Bo3C,EAAOjqE,EAAIf,KAAKC,IAAI+qE,EAAOjqE,EAAGgrB,EAAKhrB,EAAIof,GAE/C,CACA,SAASgrD,GAAqBzwD,EAAOU,EAAOgwD,GACxC,MAAMC,EAAgB3wD,EAAM4wD,aACtB,MAAEC,EAAM,gBAAEC,EAAgB,QAAEpsC,EAAQ,KAAE5kB,GAAU4wD,EAChDK,EAAqB/wD,EAAMgxD,iBAAiBtwD,EAAOiwD,EAAgBE,EAAQnsC,EAASosC,GACpFt3C,EAAQl0B,KAAKL,MAAMkT,EAAgBq8B,UAAUr8B,EAAgBmhD,gBAAgByX,EAAmBv3C,MAAQrhB,EAAgB0hB,WACxHpU,EA0EV,SAAmBA,EAAGpgB,EAAGm0B,GAMrB,OALc,KAAVA,GAA0B,MAAVA,EAChB/T,GAAKpgB,EAAI,GACFm0B,EAAQ,KAAOA,EAAQ,MAC9B/T,GAAKpgB,GAEFogB,CACX,CAjFcwrD,CAAUF,EAAmBtrD,EAAG3F,EAAKza,EAAGm0B,GAC5C6f,EAyDV,SAA8B7f,GAC1B,OAAc,IAAVA,GAAyB,MAAVA,EACR,SACAA,EAAQ,IACR,OAEJ,OACX,CAhEsB03C,CAAqB13C,GACjCzO,GAgEgB1hB,EAhEQ0nE,EAAmB1nE,EAgExBrB,EAhE2B8X,EAAK9X,EAiE3C,WADckmC,EAhEgCmL,GAkExDhwC,GAAKrB,EACY,WAAVkmC,IACP7kC,GAAKrB,EAAI,GAENqB,GANX,IAA0BA,EAAGrB,EAAGkmC,EA/D5B,MAAO,CACH2a,SAAS,EACTx/C,EAAG0nE,EAAmB1nE,EACtBoc,IACA4zB,YACAtuB,OACAH,IAAKnF,EACLoF,MAAOE,EAAOjL,EAAK9X,EACnB8iB,OAAQrF,EAAI3F,EAAKza,EAEzB,CACA,SAAS8rE,GAAgBl3D,EAAMoR,GAC3B,IAAKA,EACD,OAAO,EAEX,MAAM,KAAEN,EAAK,IAAEH,EAAI,MAAEC,EAAM,OAAEC,GAAY7Q,EAczC,QAbqB9B,EAAgBwoB,eAAe,CAChDt3B,EAAG0hB,EACHtF,EAAGmF,GACJS,IAASlT,EAAgBwoB,eAAe,CACvCt3B,EAAG0hB,EACHtF,EAAGqF,GACJO,IAASlT,EAAgBwoB,eAAe,CACvCt3B,EAAGwhB,EACHpF,EAAGmF,GACJS,IAASlT,EAAgBwoB,eAAe,CACvCt3B,EAAGwhB,EACHpF,EAAGqF,GACJO,GAEP,CAiDA,SAAS+lD,GAAkBvtD,EAAK3D,EAAMjG,GAClC,MAAM,KAAE8Q,EAAK,IAAEH,EAAI,MAAEC,EAAM,OAAEC,GAAY7Q,GACnC,cAAEqgC,GAAmBp6B,EAC3B,IAAK/H,EAAgB2a,cAAcwnB,GAAgB,CAC/C,MAAMwT,EAAe31C,EAAgBk9C,cAAcn1C,EAAK4tC,cAClDppB,EAAUvsB,EAAgBitB,UAAUllB,EAAKm6B,iBAC/Cx2B,EAAIoT,UAAYqjB,EAChB,MAAM+2B,EAAetmD,EAAO2Z,EAAQ3Z,KAC9BumD,EAAc1mD,EAAM8Z,EAAQ9Z,IAC5B2mD,EAAgB1mD,EAAQE,EAAO2Z,EAAQrR,MACvCm+C,EAAiB1mD,EAASF,EAAM8Z,EAAQtR,OAC1Cjf,OAAO6K,OAAO8uC,GAAc9M,MAAM97C,GAAU,IAANA,KACtC2e,EAAIq3B,YACJ/iC,EAAgB49C,mBAAmBlyC,EAAK,CACpCxa,EAAGgoE,EACH5rD,EAAG6rD,EACHtpE,EAAGupE,EACHlsE,EAAGmsE,EACH97C,OAAQo4B,IAEZjqC,EAAIoB,QAEJpB,EAAI82B,SAAS02B,EAAcC,EAAaC,EAAeC,EAE/D,CACJ,CAmBA,SAASC,GAAezxD,EAAO0V,EAAQuH,EAAU2pC,GAC7C,MAAM,IAAE/iD,GAAS7D,EACjB,GAAIid,EACApZ,EAAImX,IAAIhb,EAAMyd,QAASzd,EAAM0d,QAAShI,EAAQ,EAAGvd,EAAgBigB,SAC9D,CACH,IAAIgG,EAAgBpe,EAAMgxD,iBAAiB,EAAGt7C,GAC9C7R,EAAIs3B,OAAO/c,EAAc/0B,EAAG+0B,EAAc3Y,GAC1C,IAAI,IAAIvd,EAAI,EAAGA,EAAI0+D,EAAY1+D,IAC3Bk2B,EAAgBpe,EAAMgxD,iBAAiB9oE,EAAGwtB,GAC1C7R,EAAIu3B,OAAOhd,EAAc/0B,EAAG+0B,EAAc3Y,EAElD,CACJ,CA0BA,MAAMisD,WAA0B5E,GAC5BnpD,UAAY,eACfA,gBAAkB,CACXqZ,SAAS,EACT20C,SAAS,EACTvxC,SAAU,YACVrD,WAAY,CACRC,SAAS,EACT1F,UAAW,EACXqhB,WAAY,GACZE,iBAAkB,GAEtB3mB,KAAM,CACF+K,UAAU,GAEdlE,WAAY,EACZ/I,MAAO,CACHmqB,mBAAmB,EACnB/J,SAAUj4B,EAAgB42D,MAAMC,WAAWC,SAE/C/xC,YAAa,CACTod,mBAAe9yC,EACf6yC,gBAAiB,EACjBrd,SAAS,EACT8Q,KAAM,CACFhuB,KAAM,IAEVswB,SAAU3lB,GACCA,EAEXia,QAAS,EACTktC,mBAAmB,IAG3BjuD,qBAAuB,CACnB,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,SAEnBA,mBAAqB,CACjBoZ,WAAY,CACR4uC,UAAW,SAGnB/1D,YAAYsG,GACRqW,MAAMrW,GACLnG,KAAK0nB,aAAUj2B,EACfuO,KAAK2nB,aAAUl2B,EACfuO,KAAK66D,iBAAcppE,EACnBuO,KAAK87D,aAAe,GACrB97D,KAAK+7D,iBAAmB,EAC5B,CACAphC,gBACI,MAAMhM,EAAU3uB,KAAKwsD,SAAWpqD,EAAgBitB,UAAU+qC,GAAsBp6D,KAAKmJ,SAAW,GAC1FlX,EAAI+N,KAAKsd,MAAQtd,KAAKmkB,SAAWwK,EAAQrR,MACzChuB,EAAI0Q,KAAKqd,OAASrd,KAAKokB,UAAYuK,EAAQtR,OACjDrd,KAAK0nB,QAAUn4B,KAAKuX,MAAM9G,KAAKgV,KAAO/iB,EAAI,EAAI08B,EAAQ3Z,MACtDhV,KAAK2nB,QAAUp4B,KAAKuX,MAAM9G,KAAK6U,IAAMvlB,EAAI,EAAIq/B,EAAQ9Z,KACrD7U,KAAK66D,YAActrE,KAAKuX,MAAMvX,KAAKE,IAAIwC,EAAG3C,GAAK,EACnD,CACAwrC,sBACI,MAAM,IAAErrC,EAAI,IAAED,GAASwQ,KAAKyT,WAAU,GACtCzT,KAAKvQ,IAAM2S,EAAgB+I,eAAe1b,KAASiuB,MAAMjuB,GAAOA,EAAM,EACtEuQ,KAAKxQ,IAAM4S,EAAgB+I,eAAe3b,KAASkuB,MAAMluB,GAAOA,EAAM,EACtEwQ,KAAKi3D,wBACT,CACHQ,mBACO,OAAOloE,KAAKqnC,KAAK52B,KAAK66D,YAAcT,GAAsBp6D,KAAKmJ,SACnE,CACAs0B,mBAAmBxjB,GACf88C,GAAgB/tC,UAAUyU,mBAAmB/5B,KAAK1D,KAAMia,GACxDja,KAAK87D,aAAe97D,KAAK8S,YAAYrgB,KAAI,CAACqX,EAAOa,KAC7C,MAAM+J,EAAQtS,EAAgBi4B,SAASr6B,KAAKmJ,QAAQge,YAAYkT,SAAU,CACtEvwB,EACAa,GACD3K,MACH,OAAO0U,GAAmB,IAAVA,EAAcA,EAAQ,EAAE,IACzCvH,QAAO,CAAChe,EAAGgD,IAAI6N,KAAK4C,MAAM4b,kBAAkBrsB,IACnD,CACA6qC,MACI,MAAM7yB,EAAOnK,KAAKmJ,QACdgB,EAAK8c,SAAW9c,EAAKgd,YAAYF,QA3S5C,SAA4Bhd,GACzB,MAAMqR,EAAO,CACTjsB,EAAG4a,EAAM+K,KAAO/K,EAAMuiD,SAASx3C,KAC/B5jB,EAAG6Y,EAAM6K,MAAQ7K,EAAMuiD,SAAS13C,MAChChU,EAAGmJ,EAAM4K,IAAM5K,EAAMuiD,SAAS33C,IAC9BvkB,EAAG2Z,EAAM8K,OAAS9K,EAAMuiD,SAASz3C,QAE/BwlD,EAASn8D,OAAOqB,OAAO,CAAC,EAAG6b,GAC3B2iB,EAAa,GACbtP,EAAU,GACVqtC,EAAa/xD,EAAM6xD,aAAa3qE,OAChC8qE,EAAiBhyD,EAAMd,QAAQge,YAC/B4zC,EAAkBkB,EAAeJ,kBAAoBz5D,EAAgB4hB,GAAKg4C,EAAa,EAC7F,IAAI,IAAI7pE,EAAI,EAAGA,EAAI6pE,EAAY7pE,IAAI,CAC/B,MAAMgY,EAAO8xD,EAAeviC,WAAWzvB,EAAMiyD,qBAAqB/pE,IAClEw8B,EAAQx8B,GAAKgY,EAAKwkB,QAClB,MAAMtG,EAAgBpe,EAAMgxD,iBAAiB9oE,EAAG8X,EAAM4wD,YAAclsC,EAAQx8B,GAAI4oE,GAC1EoB,EAAS/5D,EAAgB41B,OAAO7tB,EAAK4tB,MACrC00B,GA5CY3+C,EA4CgB7D,EAAM6D,IA5CjBiqB,EA4CsBokC,EA5ChBznD,EA4CwBzK,EAAM6xD,aAAa3pE,GA3C5EuiB,EAAQtS,EAAgB5P,QAAQkiB,GAASA,EAAQ,CAC7CA,GAEG,CACHziB,EAAGmQ,EAAgBg6D,aAAatuD,EAAKiqB,EAAKsI,OAAQ3rB,GAClDplB,EAAGolB,EAAMvjB,OAAS4mC,EAAKE,aAuCvBgG,EAAW9rC,GAAKs6D,EAChB,MAAM1tB,EAAe38B,EAAgBmhD,gBAAgBt5C,EAAM4d,cAAc11B,GAAK4oE,GACxEt3C,EAAQl0B,KAAKL,MAAMkT,EAAgBq8B,UAAUM,IAGnDu7B,GAAaC,EAAQj/C,EAAMyjB,EAFXs7B,GAAgB52C,EAAO4E,EAAc/0B,EAAGm5D,EAASx6D,EAAG,EAAG,KACvDooE,GAAgB52C,EAAO4E,EAAc3Y,EAAG+8C,EAASn9D,EAAG,GAAI,KAE5E,CAnDJ,IAA0Bwe,EAAKiqB,EAAMrjB,EAoDjCzK,EAAMoyD,eAAe/gD,EAAKjsB,EAAIkrE,EAAOlrE,EAAGkrE,EAAOnpE,EAAIkqB,EAAKlqB,EAAGkqB,EAAKxa,EAAIy5D,EAAOz5D,EAAGy5D,EAAOjqE,EAAIgrB,EAAKhrB,GAC9F2Z,EAAM8xD,iBA6DV,SAA8B9xD,EAAOg0B,EAAYtP,GAC7C,MAAM1qB,EAAQ,GACR+3D,EAAa/xD,EAAM6xD,aAAa3qE,OAChCgZ,EAAOF,EAAMd,SACb,kBAAE0yD,EAAkB,QAAE50C,GAAa9c,EAAKgd,YACxCwzC,EAAW,CACbG,MAAOV,GAAsBjwD,GAAQ,EACrC4wD,gBAAiBc,EAAoBz5D,EAAgB4hB,GAAKg4C,EAAa,GAE3E,IAAI1mD,EACJ,IAAI,IAAInjB,EAAI,EAAGA,EAAI6pE,EAAY7pE,IAAI,CAC/BwoE,EAAShsC,QAAUA,EAAQx8B,GAC3BwoE,EAAS5wD,KAAOk0B,EAAW9rC,GAC3B,MAAM+R,EAAOw2D,GAAqBzwD,EAAO9X,EAAGwoE,GAC5C12D,EAAMgB,KAAKf,GACK,SAAZ+iB,IACA/iB,EAAK4uC,QAAUsoB,GAAgBl3D,EAAMoR,GACjCpR,EAAK4uC,UACLx9B,EAAOpR,GAGnB,CACA,OAAOD,CACX,CApF6Bq4D,CAAqBryD,EAAOg0B,EAAYtP,EACrE,CAgRY4tC,CAAmBv8D,MAEnBA,KAAKq8D,eAAe,EAAG,EAAG,EAAG,EAErC,CACAA,eAAeG,EAAcC,EAAeC,EAAaC,GACrD38D,KAAK0nB,SAAWn4B,KAAKuX,OAAO01D,EAAeC,GAAiB,GAC5Dz8D,KAAK2nB,SAAWp4B,KAAKuX,OAAO41D,EAAcC,GAAkB,GAC5D38D,KAAK66D,aAAetrE,KAAKE,IAAIuQ,KAAK66D,YAAc,EAAGtrE,KAAKC,IAAIgtE,EAAcC,EAAeC,EAAaC,GAC1G,CACA90C,cAAcld,GACV,MAAMiyD,EAAkBx6D,EAAgBigB,KAAOriB,KAAK87D,aAAa3qE,QAAU,GACrE6xB,EAAahjB,KAAKmJ,QAAQ6Z,YAAc,EAC9C,OAAO5gB,EAAgBmhD,gBAAgB54C,EAAQiyD,EAAkBx6D,EAAgB8f,UAAUc,GAC/F,CACAiF,8BAA8Bne,GAC1B,GAAI1H,EAAgB2a,cAAcjT,GAC9B,OAAO0J,IAEX,MAAMqpD,EAAgB78D,KAAK66D,aAAe76D,KAAKxQ,IAAMwQ,KAAKvQ,KAC1D,OAAIuQ,KAAKmJ,QAAQiB,SACLpK,KAAKxQ,IAAMsa,GAAS+yD,GAExB/yD,EAAQ9J,KAAKvQ,KAAOotE,CAChC,CACAC,8BAA8BpxC,GAC1B,GAAItpB,EAAgB2a,cAAc2O,GAC9B,OAAOlY,IAEX,MAAMupD,EAAiBrxC,GAAY1rB,KAAK66D,aAAe76D,KAAKxQ,IAAMwQ,KAAKvQ,MACvE,OAAOuQ,KAAKmJ,QAAQiB,QAAUpK,KAAKxQ,IAAMutE,EAAiB/8D,KAAKvQ,IAAMstE,CACzE,CACAb,qBAAqBvxD,GACjB,MAAMwc,EAAcnnB,KAAK87D,cAAgB,GACzC,GAAInxD,GAAS,GAAKA,EAAQwc,EAAYh2B,OAAQ,CAC1C,MAAM6rE,EAAa71C,EAAYxc,GAC/B,OA7HZ,SAAiCmL,EAAQnL,EAAO+J,GAC5C,OAAOtS,EAAgB2T,cAAcD,EAAQ,CACzCpB,QACA/J,QACA7K,KAAM,cAEd,CAuHmBm9D,CAAwBj9D,KAAKkS,aAAcvH,EAAOqyD,EAC7D,CACJ,CACA/B,iBAAiBtwD,EAAOuyD,EAAoBnC,EAAkB,GAC1D,MAAMt3C,EAAQzjB,KAAK6nB,cAAcld,GAASvI,EAAgB0hB,QAAUi3C,EACpE,MAAO,CACHznE,EAAG/D,KAAK4zB,IAAIM,GAASy5C,EAAqBl9D,KAAK0nB,QAC/ChY,EAAGngB,KAAK8zB,IAAII,GAASy5C,EAAqBl9D,KAAK2nB,QAC/ClE,QAER,CACA6E,yBAAyB3d,EAAOb,GAC5B,OAAO9J,KAAKi7D,iBAAiBtwD,EAAO3K,KAAKioB,8BAA8Bne,GAC3E,CACAqzD,gBAAgBxyD,GACZ,OAAO3K,KAAKsoB,yBAAyB3d,GAAS,EAAG3K,KAAKihC,eAC1D,CACAm8B,sBAAsBzyD,GAClB,MAAM,KAAEqK,EAAK,IAAEH,EAAI,MAAEC,EAAM,OAAEC,GAAY/U,KAAK+7D,iBAAiBpxD,GAC/D,MAAO,CACHqK,OACAH,MACAC,QACAC,SAER,CACH2vB,iBACO,MAAM,gBAAEvjB,EAAkBhF,MAAM,SAAE+K,IAAiBlnB,KAAKmJ,QACxD,GAAIgY,EAAiB,CACjB,MAAMrT,EAAM9N,KAAK8N,IACjBA,EAAI62B,OACJ72B,EAAIq3B,YACJu2B,GAAe17D,KAAMA,KAAKioB,8BAA8BjoB,KAAKg3D,WAAY9vC,EAAUlnB,KAAK87D,aAAa3qE,QACrG2c,EAAIyrC,YACJzrC,EAAIoT,UAAYC,EAChBrT,EAAIoB,OACJpB,EAAI+2B,SACR,CACJ,CACHE,WACO,MAAMj3B,EAAM9N,KAAK8N,IACX3D,EAAOnK,KAAKmJ,SACZ,WAAE6d,EAAW,KAAE7K,EAAK,OAAEwK,GAAYxc,EAClC0mD,EAAa7wD,KAAK87D,aAAa3qE,OACrC,IAAIgB,EAAG+pB,EAAQmO,EAef,GAdIlgB,EAAKgd,YAAYF,SA3N7B,SAAyBhd,EAAO4mD,GAC5B,MAAM,IAAE/iD,EAAM3E,SAAS,YAAEge,IAAoBld,EAC7C,IAAI,IAAI9X,EAAI0+D,EAAa,EAAG1+D,GAAK,EAAGA,IAAI,CACpC,MAAM+R,EAAO+F,EAAM8xD,iBAAiB5pE,GACpC,IAAK+R,EAAK4uC,QACN,SAEJ,MAAMrQ,EAActb,EAAYuS,WAAWzvB,EAAMiyD,qBAAqB/pE,IACtEkpE,GAAkBvtD,EAAK20B,EAAav+B,GACpC,MAAMi4D,EAAS/5D,EAAgB41B,OAAOyK,EAAY1K,OAC5C,EAAEzkC,EAAE,EAAEoc,EAAE,UAAE4zB,GAAep/B,EAC/B9B,EAAgByjC,WAAW/3B,EAAK7D,EAAM6xD,aAAa3pE,GAAImB,EAAGoc,EAAIysD,EAAOlkC,WAAa,EAAGkkC,EAAQ,CACzF77D,MAAOmiC,EAAYniC,MACnBgjC,UAAWA,EACXG,aAAc,UAEtB,CACJ,CA2MY45B,CAAgBr9D,KAAM6wD,GAEtB10C,EAAK8K,SACLjnB,KAAKia,MAAM9W,SAAQ,CAACmB,EAAMqG,KACtB,GAAc,IAAVA,EAAa,CACbuR,EAASlc,KAAKioB,8BAA8B3jB,EAAKwF,OACjD,MAAM+L,EAAU7V,KAAKkS,WAAWvH,GAC1B83B,EAActmB,EAAKud,WAAW7jB,GAC9B6sB,EAAoB/b,EAAO+S,WAAW7jB,IArMhE,SAAwB5L,EAAOqzD,EAAc39C,EAAQkxC,EAAYrvB,GAC7D,MAAM1zB,EAAM7D,EAAM6D,IACZoZ,EAAWo2C,EAAap2C,UACxB,MAAE5mB,EAAM,UAAEihB,GAAe+7C,GAC1Bp2C,IAAa2pC,IAAevwD,IAAUihB,GAAa5B,EAAS,IAGjE7R,EAAI62B,OACJ72B,EAAIsT,YAAc9gB,EAClBwN,EAAIyT,UAAYA,EAChBzT,EAAIm3B,YAAYzD,EAAWqB,MAC3B/0B,EAAIo3B,eAAiB1D,EAAWuB,WAChCj1B,EAAIq3B,YACJu2B,GAAezxD,EAAO0V,EAAQuH,EAAU2pC,GACxC/iD,EAAIyrC,YACJzrC,EAAIw3B,SACJx3B,EAAI+2B,UACR,CAqLoB04B,CAAev9D,KAAMyiC,EAAavmB,EAAQ20C,EAAYnuB,EAC1D,KAGJ1b,EAAWC,QAAS,CAEpB,IADAnZ,EAAI62B,OACAxyC,EAAI0+D,EAAa,EAAG1+D,GAAK,EAAGA,IAAI,CAChC,MAAMswC,EAAczb,EAAW0S,WAAW15B,KAAKk8D,qBAAqB/pE,KAC9D,MAAEmO,EAAM,UAAEihB,GAAekhB,EAC1BlhB,GAAcjhB,IAGnBwN,EAAIyT,UAAYA,EAChBzT,EAAIsT,YAAc9gB,EAClBwN,EAAIm3B,YAAYxC,EAAYG,YAC5B90B,EAAIo3B,eAAiBzC,EAAYK,iBACjC5mB,EAASlc,KAAKioB,8BAA8B9d,EAAK8P,MAAM7P,QAAUpK,KAAKvQ,IAAMuQ,KAAKxQ,KACjF66B,EAAWrqB,KAAKi7D,iBAAiB9oE,EAAG+pB,GACpCpO,EAAIq3B,YACJr3B,EAAIs3B,OAAOplC,KAAK0nB,QAAS1nB,KAAK2nB,SAC9B7Z,EAAIu3B,OAAOhb,EAAS/2B,EAAG+2B,EAAS3a,GAChC5B,EAAIw3B,SACR,CACAx3B,EAAI+2B,SACR,CACJ,CACHW,aAAc,CACdE,aACO,MAAM53B,EAAM9N,KAAK8N,IACX3D,EAAOnK,KAAKmJ,QACZqxB,EAAWrwB,EAAK8P,MACtB,IAAKugB,EAASvT,QACV,OAEJ,MAAMjE,EAAahjB,KAAK6nB,cAAc,GACtC,IAAI3L,EAAQoB,EACZxP,EAAI62B,OACJ72B,EAAIqsC,UAAUn6C,KAAK0nB,QAAS1nB,KAAK2nB,SACjC7Z,EAAI3a,OAAO6vB,GACXlV,EAAIw1B,UAAY,SAChBx1B,EAAI21B,aAAe,SACnBzjC,KAAKia,MAAM9W,SAAQ,CAACmB,EAAMqG,KACtB,GAAc,IAAVA,IAAgBR,EAAKC,QACrB,OAEJ,MAAMq4B,EAAcjI,EAASd,WAAW15B,KAAKkS,WAAWvH,IAClDo1B,EAAW39B,EAAgB41B,OAAOyK,EAAY1K,MAEpD,GADA7b,EAASlc,KAAKioB,8BAA8BjoB,KAAKia,MAAMtP,GAAOb,OAC1D24B,EAAY2B,kBAAmB,CAC/Bt2B,EAAIiqB,KAAOgI,EAASM,OACpB/iB,EAAQxP,EAAIk7C,YAAY1kD,EAAKoQ,OAAO4I,MACpCxP,EAAIoT,UAAYuhB,EAAY8B,cAC5B,MAAM5V,EAAUvsB,EAAgBitB,UAAUoT,EAAY6B,iBACtDx2B,EAAI82B,UAAUtnB,EAAQ,EAAIqR,EAAQ3Z,MAAOkH,EAAS6jB,EAASh2B,KAAO,EAAI4kB,EAAQ9Z,IAAKyI,EAAQqR,EAAQrR,MAAOyiB,EAASh2B,KAAO4kB,EAAQtR,OACtI,CACAjb,EAAgByjC,WAAW/3B,EAAKxJ,EAAKoQ,MAAO,GAAIwH,EAAQ6jB,EAAU,CAC9Dz/B,MAAOmiC,EAAYniC,OACrB,IAENwN,EAAI+2B,SACR,CACHkB,YAAa,EAGd,MAAMy3B,GAAY,CACdC,YAAa,CACTC,QAAQ,EACR3zD,KAAM,EACNyvD,MAAO,KAEXmE,OAAQ,CACJD,QAAQ,EACR3zD,KAAM,IACNyvD,MAAO,IAEXoE,OAAQ,CACJF,QAAQ,EACR3zD,KAAM,IACNyvD,MAAO,IAEXqE,KAAM,CACFH,QAAQ,EACR3zD,KAAM,KACNyvD,MAAO,IAEXsE,IAAK,CACDJ,QAAQ,EACR3zD,KAAM,MACNyvD,MAAO,IAEXuE,KAAM,CACFL,QAAQ,EACR3zD,KAAM,OACNyvD,MAAO,GAEXwE,MAAO,CACHN,QAAQ,EACR3zD,KAAM,OACNyvD,MAAO,IAEXyE,QAAS,CACLP,QAAQ,EACR3zD,KAAM,OACNyvD,MAAO,GAEX0E,KAAM,CACFR,QAAQ,EACR3zD,KAAM,SAGPo0D,GAAyB//D,OAAOD,KAAKq/D,IAC3C,SAASY,GAAO/tE,EAAGC,GAChB,OAAOD,EAAIC,CACf,CACC,SAAS8hB,GAAMnI,EAAOtK,GACnB,GAAIyC,EAAgB2a,cAAcpd,GAC9B,OAAO,KAEX,MAAM0+D,EAAUp0D,EAAMq0D,UAChB,OAAEC,EAAO,MAAErvE,EAAM,WAAEsvE,GAAgBv0D,EAAMw0D,WAC/C,IAAI30D,EAAQnK,EAOZ,MANsB,mBAAX4+D,IACPz0D,EAAQy0D,EAAOz0D,IAEd1H,EAAgB+I,eAAerB,KAChCA,EAA0B,iBAAXy0D,EAAsBF,EAAQjsD,MAAMtI,EAAQy0D,GAAUF,EAAQjsD,MAAMtI,IAEzE,OAAVA,EACO,MAEP5a,IACA4a,EAAkB,SAAV5a,IAAqBkT,EAAgBkkB,SAASk4C,KAA8B,IAAfA,EAAuEH,EAAQh1C,QAAQvf,EAAO5a,GAAvEmvE,EAAQh1C,QAAQvf,EAAO,UAAW00D,KAE1H10D,EACZ,CACC,SAAS40D,GAA0BC,EAASlvE,EAAKD,EAAKovE,GACnD,MAAMl0D,EAAOyzD,GAAMhtE,OACnB,IAAI,IAAIgB,EAAIgsE,GAAMxgD,QAAQghD,GAAUxsE,EAAIuY,EAAO,IAAKvY,EAAE,CAClD,MAAM0sE,EAAWrB,GAAUW,GAAMhsE,IAC3B4T,EAAS84D,EAASrF,MAAQqF,EAASrF,MAAQ1lD,OAAOgrD,iBACxD,GAAID,EAASnB,QAAUnuE,KAAKqnC,MAAMpnC,EAAMC,IAAQsW,EAAS84D,EAAS90D,QAAU60D,EACxE,OAAOT,GAAMhsE,EAErB,CACA,OAAOgsE,GAAMzzD,EAAO,EACxB,CAiBC,SAASq0D,GAAQ9kD,EAAO+kD,EAAMC,GAC3B,GAAKA,GAEE,GAAIA,EAAW9tE,OAAQ,CAC1B,MAAM,GAAE+4B,EAAG,GAAEC,GAAQ/nB,EAAgB88D,QAAQD,EAAYD,GAEzD/kD,EADkBglD,EAAW/0C,IAAO80C,EAAOC,EAAW/0C,GAAM+0C,EAAW90C,KACpD,CACvB,OALIlQ,EAAM+kD,IAAQ,CAMtB,CAcC,SAASG,GAAoBl1D,EAAOhB,EAAQm2D,GACzC,MAAMnlD,EAAQ,GACPxnB,EAAM,CAAC,EACRiY,EAAOzB,EAAO9X,OACpB,IAAIgB,EAAG2X,EACP,IAAI3X,EAAI,EAAGA,EAAIuY,IAAQvY,EACnB2X,EAAQb,EAAO9W,GACfM,EAAIqX,GAAS3X,EACb8nB,EAAMhV,KAAK,CACP6E,QACAoyB,OAAO,IAGf,OAAgB,IAATxxB,GAAe00D,EA1BzB,SAAuBn1D,EAAOgQ,EAAOxnB,EAAK2sE,GACvC,MAAMf,EAAUp0D,EAAMq0D,SAChBhiC,GAAS+hC,EAAQh1C,QAAQpP,EAAM,GAAGnQ,MAAOs1D,GACzC5hD,EAAOvD,EAAMA,EAAM9oB,OAAS,GAAG2Y,MACrC,IAAIoyB,EAAOvxB,EACX,IAAIuxB,EAAQI,EAAOJ,GAAS1e,EAAM0e,GAASmiC,EAAQn5D,IAAIg3B,EAAO,EAAGkjC,GAC7Dz0D,EAAQlY,EAAIypC,GACRvxB,GAAS,IACTsP,EAAMtP,GAAOuxB,OAAQ,GAG7B,OAAOjiB,CACX,CAc8ColD,CAAcp1D,EAAOgQ,EAAOxnB,EAAK2sE,GAAzCnlD,CACtC,CACA,MAAMqlD,WAAkBhnC,GACpB1qB,UAAY,OACfA,gBAAkB,CAClB8wC,OAAQ,OACDn1B,SAAU,CAAC,EACXy1C,KAAM,CACFT,QAAQ,EACRxG,MAAM,EACN7oE,OAAO,EACPsvE,YAAY,EACZG,QAAS,cACTY,eAAgB,CAAC,GAErBtlD,MAAO,CACdyhB,OAAQ,OACGrB,UAAU,EACV6B,MAAO,CACHC,SAAS,KAIxBt8B,YAAYgK,GACL2S,MAAM3S,GACL7J,KAAKqZ,OAAS,CACX1I,KAAM,GACNkC,OAAQ,GACRnJ,IAAK,IAER1J,KAAKw/D,MAAQ,MACbx/D,KAAKy/D,gBAAahuE,EACnBuO,KAAK0/D,SAAW,CAAC,EACjB1/D,KAAK2/D,aAAc,EACnB3/D,KAAKy+D,gBAAahtE,CACtB,CACAw3B,KAAK+oB,EAAW7nC,EAAO,CAAC,GACpB,MAAM60D,EAAOhtB,EAAUgtB,OAAShtB,EAAUgtB,KAAO,CAAC,GAC3CX,EAAUr+D,KAAKs+D,SAAW,IAAI/0C,EAASC,MAAMwoB,EAAUzoB,SAASzmB,MACvEu7D,EAAQp1C,KAAK9e,GACb/H,EAAgBoqC,QAAQwyB,EAAKO,eAAgBlB,EAAQn1C,WACrDlpB,KAAKy+D,WAAa,CACdF,OAAQS,EAAKT,OACbrvE,MAAO8vE,EAAK9vE,MACZsvE,WAAYQ,EAAKR,YAErBhiD,MAAMyM,KAAK+oB,GACXhyC,KAAK2/D,YAAcx1D,EAAKy1D,UAC5B,CACHxtD,MAAM6D,EAAKtL,GACJ,YAAYlZ,IAARwkB,EACO,KAEJ7D,GAAMpS,KAAMiW,EACvB,CACAma,eACI5T,MAAM4T,eACNpwB,KAAKqZ,OAAS,CACV1I,KAAM,GACNkC,OAAQ,GACRnJ,IAAK,GAEb,CACAoxB,sBACI,MAAM3xB,EAAUnJ,KAAKmJ,QACfk1D,EAAUr+D,KAAKs+D,SACfvG,EAAO5uD,EAAQ61D,KAAKjH,MAAQ,MAClC,IAAI,IAAEtoE,EAAI,IAAED,EAAI,WAAE2kB,EAAW,WAAEC,GAAgBpU,KAAKqU,gBAC3D,SAASwrD,EAAanhB,GACNvqC,GAAeuJ,MAAMghC,EAAOjvD,OAC7BA,EAAMF,KAAKE,IAAIA,EAAKivD,EAAOjvD,MAE1B2kB,GAAesJ,MAAMghC,EAAOlvD,OAC7BA,EAAMD,KAAKC,IAAIA,EAAKkvD,EAAOlvD,KAEnC,CACK2kB,GAAeC,IAChByrD,EAAa7/D,KAAK8/D,mBACK,UAAnB32D,EAAQu1C,QAA+C,WAAzBv1C,EAAQ8Q,MAAMyhB,QAC5CmkC,EAAa7/D,KAAKyT,WAAU,KAGpChkB,EAAM2S,EAAgB+I,eAAe1b,KAASiuB,MAAMjuB,GAAOA,GAAO4uE,EAAQh1C,QAAQxlB,KAAKC,MAAOi0D,GAC9FvoE,EAAM4S,EAAgB+I,eAAe3b,KAASkuB,MAAMluB,GAAOA,GAAO6uE,EAAQ/0C,MAAMzlB,KAAKC,MAAOi0D,GAAQ,EACpG/3D,KAAKvQ,IAAMF,KAAKE,IAAIA,EAAKD,EAAM,GAC/BwQ,KAAKxQ,IAAMD,KAAKC,IAAIC,EAAM,EAAGD,EACjC,CACHswE,kBACO,MAAMxnD,EAAMtY,KAAK+/D,qBACjB,IAAItwE,EAAMqkB,OAAOC,kBACbvkB,EAAMskB,OAAOE,kBAKjB,OAJIsE,EAAInnB,SACJ1B,EAAM6oB,EAAI,GACV9oB,EAAM8oB,EAAIA,EAAInnB,OAAS,IAEpB,CACH1B,MACAD,MAER,CACH0rC,aACO,MAAM/xB,EAAUnJ,KAAKmJ,QACf62D,EAAW72D,EAAQ61D,KACnBxkC,EAAWrxB,EAAQ8Q,MACnBglD,EAAiC,WAApBzkC,EAASkB,OAAsB17B,KAAK+/D,qBAAuB//D,KAAKigE,YAC5D,UAAnB92D,EAAQu1C,QAAsBugB,EAAW9tE,SACzC6O,KAAKvQ,IAAMuQ,KAAKo5B,UAAY6lC,EAAW,GACvCj/D,KAAKxQ,IAAMwQ,KAAKm5B,UAAY8lC,EAAWA,EAAW9tE,OAAS,IAE/D,MAAM1B,EAAMuQ,KAAKvQ,IACXD,EAAMwQ,KAAKxQ,IACXyqB,EAAQ7X,EAAgB89D,eAAejB,EAAYxvE,EAAKD,GAO9D,OANAwQ,KAAKw/D,MAAQQ,EAASjI,OAASv9B,EAASiB,SAAWijC,GAA0BsB,EAASrB,QAAS3+D,KAAKvQ,IAAKuQ,KAAKxQ,IAAKwQ,KAAKmgE,kBAAkB1wE,IAnKjJ,SAAoCwa,EAAO0zB,EAAUghC,EAASlvE,EAAKD,GAChE,IAAI,IAAI2C,EAAIgsE,GAAMhtE,OAAS,EAAGgB,GAAKgsE,GAAMxgD,QAAQghD,GAAUxsE,IAAI,CAC3D,MAAM4lE,EAAOoG,GAAMhsE,GACnB,GAAIqrE,GAAUzF,GAAM2F,QAAUzzD,EAAMq0D,SAASl1C,KAAK55B,EAAKC,EAAKsoE,IAASp6B,EAAW,EAC5E,OAAOo6B,CAEf,CACA,OAAOoG,GAAMQ,EAAUR,GAAMxgD,QAAQghD,GAAW,EACpD,CA2J0JyB,CAA2BpgE,KAAMia,EAAM9oB,OAAQ6uE,EAASrB,QAAS3+D,KAAKvQ,IAAKuQ,KAAKxQ,MAClOwQ,KAAKy/D,WAAcjlC,EAAS0B,MAAMC,SAA0B,SAAfn8B,KAAKw/D,MA3JzD,SAA4BzH,GACzB,IAAI,IAAI5lE,EAAIgsE,GAAMxgD,QAAQo6C,GAAQ,EAAGrtD,EAAOyzD,GAAMhtE,OAAQgB,EAAIuY,IAAQvY,EAClE,GAAIqrE,GAAUW,GAAMhsE,IAAIurE,OACpB,OAAOS,GAAMhsE,EAGzB,CAqJyFkuE,CAAmBrgE,KAAKw/D,YAApC/tE,EACrEuO,KAAKsgE,YAAYrB,GACb91D,EAAQiB,SACR6P,EAAM7P,UAEH+0D,GAAoBn/D,KAAMia,EAAOja,KAAKy/D,WACjD,CACA3iC,gBACQ98B,KAAKmJ,QAAQo3D,qBACbvgE,KAAKsgE,YAAYtgE,KAAKia,MAAMxnB,KAAK6R,IAAQA,EAAKwF,QAEtD,CACHw2D,YAAYrB,EAAa,IAClB,IAEI3iC,EAAO9e,EAFPja,EAAQ,EACR8G,EAAM,EAENrK,KAAKmJ,QAAQ+S,QAAU+iD,EAAW9tE,SAClCmrC,EAAQt8B,KAAKwgE,mBAAmBvB,EAAW,IAEvC17D,EADsB,IAAtB07D,EAAW9tE,OACH,EAAImrC,GAEHt8B,KAAKwgE,mBAAmBvB,EAAW,IAAM3iC,GAAS,EAE/D9e,EAAOxd,KAAKwgE,mBAAmBvB,EAAWA,EAAW9tE,OAAS,IAE1DkZ,EADsB,IAAtB40D,EAAW9tE,OACLqsB,GAECA,EAAOxd,KAAKwgE,mBAAmBvB,EAAWA,EAAW9tE,OAAS,KAAO,GAGpF,MAAMoxC,EAAQ08B,EAAW9tE,OAAS,EAAI,GAAM,IAC5CoS,EAAQnB,EAAgBm8B,YAAYh7B,EAAO,EAAGg/B,GAC9Cl4B,EAAMjI,EAAgBm8B,YAAYl0B,EAAK,EAAGk4B,GAC1CviC,KAAK0/D,SAAW,CACZn8D,QACA8G,MACAtE,OAAQ,GAAKxC,EAAQ,EAAI8G,GAEjC,CACH41D,YACO,MAAM5B,EAAUr+D,KAAKs+D,SACf7uE,EAAMuQ,KAAKvQ,IACXD,EAAMwQ,KAAKxQ,IACX2Z,EAAUnJ,KAAKmJ,QACf62D,EAAW72D,EAAQ61D,KACnByB,EAAQT,EAASjI,MAAQ2G,GAA0BsB,EAASrB,QAASlvE,EAAKD,EAAKwQ,KAAKmgE,kBAAkB1wE,IACtG+nE,EAAWp1D,EAAgByN,eAAe1G,EAAQ8Q,MAAMu9C,SAAU,GAClEkJ,EAAoB,SAAVD,GAAmBT,EAASxB,WACtCmC,EAAav+D,EAAgBkkB,SAASo6C,KAAwB,IAAZA,EAClDzmD,EAAQ,CAAC,EACf,IACI+kD,EAAM3sD,EADNiqB,EAAQ7sC,EAMZ,GAJIkxE,IACArkC,GAAS+hC,EAAQh1C,QAAQiT,EAAO,UAAWokC,IAE/CpkC,GAAS+hC,EAAQh1C,QAAQiT,EAAOqkC,EAAa,MAAQF,GACjDpC,EAAQj1C,KAAK55B,EAAKC,EAAKgxE,GAAS,IAASjJ,EACzC,MAAM,IAAI3uC,MAAMp5B,EAAM,QAAUD,EAAM,uCAAyCgoE,EAAW,IAAMiJ,GAEpG,MAAMxB,EAAsC,SAAzB91D,EAAQ8Q,MAAMyhB,QAAqB17B,KAAK4gE,oBAC3D,IAAI5B,EAAO1iC,EAAOjqB,EAAQ,EAAG2sD,EAAOxvE,EAAKwvE,GAAQX,EAAQn5D,IAAI85D,EAAMxH,EAAUiJ,GAAQpuD,IACjF0sD,GAAQ9kD,EAAO+kD,EAAMC,GAKzB,OAHID,IAASxvE,GAA0B,UAAnB2Z,EAAQu1C,QAAgC,IAAVrsC,GAC9C0sD,GAAQ9kD,EAAO+kD,EAAMC,GAElB7gE,OAAOD,KAAK8b,GAAOP,MAAK,CAACrpB,EAAGC,IAAID,EAAIC,IAAGmC,KAAKa,IAAKA,GAC5D,CACHqhB,iBAAiB7K,GACV,MAAMu0D,EAAUr+D,KAAKs+D,SACf0B,EAAWhgE,KAAKmJ,QAAQ61D,KAC9B,OAAIgB,EAASa,cACFxC,EAAQl1C,OAAOrf,EAAOk2D,EAASa,eAEnCxC,EAAQl1C,OAAOrf,EAAOk2D,EAAST,eAAeuB,SACzD,CACH33C,OAAOrf,EAAOqf,GACP,MACMD,EADUlpB,KAAKmJ,QACG61D,KAAKO,eACvBxH,EAAO/3D,KAAKw/D,MACZuB,EAAM53C,GAAUD,EAAQ6uC,GAC9B,OAAO/3D,KAAKs+D,SAASn1C,OAAOrf,EAAOi3D,EACvC,CACHC,oBAAoBhC,EAAMr0D,EAAOsP,EAAOkP,GACjC,MAAMhgB,EAAUnJ,KAAKmJ,QACf83D,EAAY93D,EAAQ8Q,MAAMogB,SAChC,GAAI4mC,EACA,OAAO7+D,EAAgBi4B,SAAS4mC,EAAW,CACvCjC,EACAr0D,EACAsP,GACDja,MAEP,MAAMkpB,EAAU/f,EAAQ61D,KAAKO,eACvBxH,EAAO/3D,KAAKw/D,MACZJ,EAAYp/D,KAAKy/D,WACjByB,EAAcnJ,GAAQ7uC,EAAQ6uC,GAC9BoJ,EAAc/B,GAAal2C,EAAQk2C,GACnC96D,EAAO2V,EAAMtP,GACbuxB,EAAQkjC,GAAa+B,GAAe78D,GAAQA,EAAK43B,MACvD,OAAOl8B,KAAKs+D,SAASn1C,OAAO61C,EAAM71C,IAAW+S,EAAQilC,EAAcD,GACvE,CACHzjC,mBAAmBxjB,GACZ,IAAI9nB,EAAGuY,EAAMpG,EACb,IAAInS,EAAI,EAAGuY,EAAOuP,EAAM9oB,OAAQgB,EAAIuY,IAAQvY,EACxCmS,EAAO2V,EAAM9nB,GACbmS,EAAKoQ,MAAQ1U,KAAKghE,oBAAoB18D,EAAKwF,MAAO3X,EAAG8nB,EAE7D,CACHumD,mBAAmB12D,GACZ,OAAiB,OAAVA,EAAiB0J,KAAO1J,EAAQ9J,KAAKvQ,MAAQuQ,KAAKxQ,IAAMwQ,KAAKvQ,IACxE,CACHuqB,iBAAiBlQ,GACV,MAAMs3D,EAAUphE,KAAK0/D,SACfjzC,EAAMzsB,KAAKwgE,mBAAmB12D,GACpC,OAAO9J,KAAK2e,oBAAoByiD,EAAQ79D,MAAQkpB,GAAO20C,EAAQr7D,OACnE,CACH8Y,iBAAiB+hB,GACV,MAAMwgC,EAAUphE,KAAK0/D,SACfjzC,EAAMzsB,KAAKghC,mBAAmBJ,GAASwgC,EAAQr7D,OAASq7D,EAAQ/2D,IACtE,OAAOrK,KAAKvQ,IAAMg9B,GAAOzsB,KAAKxQ,IAAMwQ,KAAKvQ,IAC7C,CACH4xE,cAAc3sD,GACP,MAAM4sD,EAAYthE,KAAKmJ,QAAQ8Q,MACzBsnD,EAAiBvhE,KAAK8N,IAAIk7C,YAAYt0C,GAAO4I,MAC7CmG,EAAQrhB,EAAgB8f,UAAUliB,KAAK2c,eAAiB2kD,EAAUzjC,YAAcyjC,EAAU1jC,aAC1F4jC,EAAcjyE,KAAK4zB,IAAIM,GACvBg+C,EAAclyE,KAAK8zB,IAAII,GACvBi+C,EAAe1hE,KAAKogC,wBAAwB,GAAGr2B,KACrD,MAAO,CACH9X,EAAGsvE,EAAiBC,EAAcE,EAAeD,EACjDnyE,EAAGiyE,EAAiBE,EAAcC,EAAeF,EAEzD,CACHrB,kBAAkBwB,GACX,MAAM3B,EAAWhgE,KAAKmJ,QAAQ61D,KACxBO,EAAiBS,EAAST,eAC1Bp2C,EAASo2C,EAAeS,EAASjI,OAASwH,EAAe9B,YACzDmE,EAAe5hE,KAAKghE,oBAAoBW,EAAa,EAAGxC,GAAoBn/D,KAAM,CACpF2hE,GACD3hE,KAAKy/D,YAAat2C,GACfpf,EAAO/J,KAAKqhE,cAAcO,GAC1BhD,EAAWrvE,KAAKuX,MAAM9G,KAAK2c,eAAiB3c,KAAKsd,MAAQvT,EAAK9X,EAAI+N,KAAKqd,OAAStT,EAAKza,GAAK,EAChG,OAAOsvE,EAAW,EAAIA,EAAW,CACrC,CACHgC,oBACO,IACIzuE,EAAGuY,EADHu0D,EAAaj/D,KAAKqZ,OAAO1I,MAAQ,GAErC,GAAIsuD,EAAW9tE,OACX,OAAO8tE,EAEX,MAAMnlC,EAAQ95B,KAAKgM,0BACnB,GAAIhM,KAAK2/D,aAAe7lC,EAAM3oC,OAC1B,OAAO6O,KAAKqZ,OAAO1I,KAAOmpB,EAAM,GAAG5tB,WAAWqI,mBAAmBvU,MAErE,IAAI7N,EAAI,EAAGuY,EAAOovB,EAAM3oC,OAAQgB,EAAIuY,IAAQvY,EACxC8sE,EAAaA,EAAWzlD,OAAOsgB,EAAM3nC,GAAG+Z,WAAWqI,mBAAmBvU,OAE1E,OAAOA,KAAKqZ,OAAO1I,KAAO3Q,KAAK6hE,UAAU5C,EAC7C,CACHc,qBACO,MAAMd,EAAaj/D,KAAKqZ,OAAOxG,QAAU,GACzC,IAAI1gB,EAAGuY,EACP,GAAIu0D,EAAW9tE,OACX,OAAO8tE,EAEX,MAAMpsD,EAAS7S,KAAK8S,YACpB,IAAI3gB,EAAI,EAAGuY,EAAOmI,EAAO1hB,OAAQgB,EAAIuY,IAAQvY,EACzC8sE,EAAWh6D,KAAKmN,GAAMpS,KAAM6S,EAAO1gB,KAEvC,OAAO6N,KAAKqZ,OAAOxG,OAAS7S,KAAK2/D,YAAcV,EAAaj/D,KAAK6hE,UAAU5C,EAC/E,CACH4C,UAAU54D,GACH,OAAO7G,EAAgBqX,aAAaxQ,EAAOyQ,KAAK0kD,IACpD,EAGJ,SAASv9D,GAAYihE,EAAO3gE,EAAKiJ,GAC7B,IAEI23D,EAAYC,EAAYC,EAAYC,EAFpCh4C,EAAK,EACLC,EAAK23C,EAAM3wE,OAAS,EAEpBiZ,GACIjJ,GAAO2gE,EAAM53C,GAAIuC,KAAOtrB,GAAO2gE,EAAM33C,GAAIsC,OACtCvC,KAAKC,MAAQ/nB,EAAgB2nB,aAAa+3C,EAAO,MAAO3gE,MAE5DsrB,IAAKs1C,EAAa/C,KAAMiD,GAAgBH,EAAM53C,MAC9CuC,IAAKu1C,EAAahD,KAAMkD,GAAgBJ,EAAM33C,MAE7ChpB,GAAO2gE,EAAM53C,GAAI80C,MAAQ79D,GAAO2gE,EAAM33C,GAAI60C,QACvC90C,KAAKC,MAAQ/nB,EAAgB2nB,aAAa+3C,EAAO,OAAQ3gE,MAE7D69D,KAAM+C,EAAat1C,IAAKw1C,GAAgBH,EAAM53C,MAC9C80C,KAAMgD,EAAav1C,IAAKy1C,GAAgBJ,EAAM33C,KAErD,MAAMg4C,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAe9gE,EAAM4gE,GAAcI,EAAOF,CACvF,CACA,MAAMG,WAAwB9C,GAC1B1xD,UAAY,aACfA,gBAAkB0xD,GAAU72D,SAC5B5I,YAAYgK,GACL2S,MAAM3S,GACL7J,KAAKqiE,OAAS,GACdriE,KAAKsiE,aAAU7wE,EACfuO,KAAKuiE,iBAAc9wE,CACxB,CACH6uE,cACO,MAAMrB,EAAaj/D,KAAKwiE,yBAClBV,EAAQ9hE,KAAKqiE,OAASriE,KAAKyiE,iBAAiBxD,GAClDj/D,KAAKsiE,QAAUzhE,GAAYihE,EAAO9hE,KAAKvQ,KACvCuQ,KAAKuiE,YAAc1hE,GAAYihE,EAAO9hE,KAAKxQ,KAAOwQ,KAAKsiE,QACvD9lD,MAAM8jD,YAAYrB,EACtB,CACHwD,iBAAiBxD,GACV,MAAM,IAAExvE,EAAI,IAAED,GAASwQ,KACjBiE,EAAQ,GACR69D,EAAQ,GACd,IAAI3vE,EAAGuY,EAAM8H,EAAMoH,EAAMsF,EACzB,IAAI/sB,EAAI,EAAGuY,EAAOu0D,EAAW9tE,OAAQgB,EAAIuY,IAAQvY,EAC7CynB,EAAOqlD,EAAW9sE,GACdynB,GAAQnqB,GAAOmqB,GAAQpqB,GACvByU,EAAMgB,KAAK2U,GAGnB,GAAI3V,EAAM9S,OAAS,EACf,MAAO,CACH,CACI6tE,KAAMvvE,EACNg9B,IAAK,GAET,CACIuyC,KAAMxvE,EACNi9B,IAAK,IAIjB,IAAIt6B,EAAI,EAAGuY,EAAOzG,EAAM9S,OAAQgB,EAAIuY,IAAQvY,EACxC+sB,EAAOjb,EAAM9R,EAAI,GACjBqgB,EAAOvO,EAAM9R,EAAI,GACjBynB,EAAO3V,EAAM9R,GACT5C,KAAKL,OAAOgwB,EAAO1M,GAAQ,KAAOoH,GAClCkoD,EAAM78D,KAAK,CACP+5D,KAAMplD,EACN6S,IAAKt6B,GAAKuY,EAAO,KAI7B,OAAOo3D,CACX,CACHU,yBACO,IAAIvD,EAAaj/D,KAAKqZ,OAAO3P,KAAO,GACpC,GAAIu1D,EAAW9tE,OACX,OAAO8tE,EAEX,MAAMtuD,EAAO3Q,KAAK4gE,oBACZlsD,EAAQ1U,KAAK+/D,qBAOnB,OALId,EADAtuD,EAAKxf,QAAUujB,EAAMvjB,OACR6O,KAAK6hE,UAAUlxD,EAAK6I,OAAO9E,IAE3B/D,EAAKxf,OAASwf,EAAO+D,EAEtCuqD,EAAaj/D,KAAKqZ,OAAO3P,IAAMu1D,EACxBA,CACX,CACHuB,mBAAmB12D,GACZ,OAAQjJ,GAAYb,KAAKqiE,OAAQv4D,GAAS9J,KAAKsiE,SAAWtiE,KAAKuiE,WACnE,CACH1jD,iBAAiB+hB,GACV,MAAMwgC,EAAUphE,KAAK0/D,SACf7+B,EAAU7gC,KAAKghC,mBAAmBJ,GAASwgC,EAAQr7D,OAASq7D,EAAQ/2D,IAC1E,OAAOxJ,GAAYb,KAAKqiE,OAAQxhC,EAAU7gC,KAAKuiE,YAAcviE,KAAKsiE,SAAS,EAC/E,EAGJ,IAAIp1D,GAAsB9O,OAAOuD,OAAO,CACxCC,UAAW,KACXs0D,cAAeA,GACf6C,YAAaA,GACbY,iBAAkBA,GAClBgC,kBAAmBA,GACnB2D,UAAWA,GACX8C,gBAAiBA,KAGjB,MAAMlgE,GAAgB,CAClBymB,EACAtT,GACAuL,GACA1T,IAGJje,EAAQ+pE,MAAQ52D,EAAgB42D,MAChC/pE,EAAQwZ,SAAWrG,EAAgBqG,SACnCxZ,EAAQiX,UAAYA,EACpBjX,EAAQiZ,WAAaA,EACrBjZ,EAAQuqD,WAAaA,GACrBvqD,EAAQ2sB,cAAgBA,EACxB3sB,EAAQ+vD,WAAaA,GACrB/vD,EAAQ8hC,aAAeA,GACvB9hC,EAAQyiC,cAAgBA,GACxBziC,EAAQywB,iBAAmBA,EAC3BzwB,EAAQinE,cAAgBA,GACxBjnE,EAAQgT,MAAQA,GAChBhT,EAAQ4mE,OAASvV,GACjBrxD,EAAQ0e,kBAAoBA,EAC5B1e,EAAQ6mE,WAAazU,GACrBpyD,EAAQimC,YAAcA,GACtBjmC,EAAQgxB,mBAAqBA,EAC7BhxB,EAAQonC,QAAUA,GAClBpnC,EAAQ8mE,OAASprD,GACjB1b,EAAQi9B,YAAcA,EACtBj9B,EAAQ84D,OAASmE,GACjBj9D,EAAQw2B,eAAiBA,EACzBx2B,EAAQstD,YAAcA,GACtBttD,EAAQ8pE,YAAcA,GACtB9pE,EAAQ0qE,iBAAmBA,GAC3B1qE,EAAQi5B,cAAgBA,EACxBj5B,EAAQ4uD,aAAeA,GACvB5uD,EAAQ83B,oBAAsBA,EAC9B93B,EAAQk5B,gBAAkBA,EAC1Bl5B,EAAQ0sE,kBAAoBA,GAC5B1sE,EAAQqpC,MAAQA,GAChBrpC,EAAQs5B,kBAAoBA,EAC5Bt5B,EAAQ+mE,SAAWhJ,GACnB/9D,EAAQqwE,UAAYA,GACpBrwE,EAAQmzE,gBAAkBA,GAC1BnzE,EAAQs9D,MAAQK,GAChB39D,EAAQwiE,QAAUgE,GAClBxmE,EAAQyzE,UAAYn5C,EACpBt6B,EAAQinC,gBAAkBA,GAC1BjnC,EAAQ2W,SAAWA,EACnB3W,EAAQ05B,YAAcA,EACtB15B,EAAQomB,SAAWA,GACnBpmB,EAAQ6/B,QAAUA,GAClB7/B,EAAQ2xB,QAAUA,GAClB3xB,EAAQiT,cAAgBA,GACxBjT,EAAQw5B,SAAWA,GACnBx5B,EAAQie,OAASA,+BCtsWjB,IAAIy1D,EAAU,EAAQ,KAUlB,MAAMzyB,EAAM,MACZ,IAAItjC,EAAK,EACT,MAAO,IAAIA,GACd,EAHe,GAQZ,SAASmQ,EAAcjT,GACvB,OAAOA,OACX,CAKI,SAAStX,EAAQsX,GACjB,GAAIvX,MAAMC,SAAWD,MAAMC,QAAQsX,GAC/B,OAAO,EAEX,MAAMhK,EAAO1B,OAAO4qB,UAAU45C,SAASl/D,KAAKoG,GAC5C,MAAyB,YAArBhK,EAAK2yC,MAAM,EAAG,IAAuC,WAAnB3yC,EAAK2yC,OAAO,EAItD,CAKI,SAASlqC,EAASuB,GAClB,OAAiB,OAAVA,GAA4D,oBAA1C1L,OAAO4qB,UAAU45C,SAASl/D,KAAKoG,EAC5D,CAII,SAASqB,EAAerB,GACxB,OAAyB,iBAAVA,GAAsBA,aAAiBgK,SAAWyiD,UAAUzsD,EAC/E,CAYI,SAAS+F,EAAe/F,EAAO+4D,GAC/B,YAAwB,IAAV/4D,EAAwB+4D,EAAe/4D,CACzD,CACA,MACMwa,EAAc,CAACxa,EAAOg5D,IAA6B,iBAAVh5D,GAAsBA,EAAMi5D,SAAS,KAAOze,WAAWx6C,GAAS,IAAMg5D,GAAah5D,EAuD9H,SAASvK,EAAMm8B,GACf,GAAIlpC,EAAQkpC,GACR,OAAOA,EAAOjpC,IAAI8M,GAEtB,GAAIgJ,EAASmzB,GAAS,CAClB,MAAMt1B,EAAShI,OAAOyoC,OAAO,MACvB1oC,EAAOC,OAAOD,KAAKu9B,GACnBsnC,EAAO7kE,EAAKhN,OAClB,IAAIW,EAAI,EACR,KAAMA,EAAIkxE,IAAQlxE,EACdsU,EAAOjI,EAAKrM,IAAMyN,EAAMm8B,EAAOv9B,EAAKrM,KAExC,OAAOsU,CACX,CACA,OAAOs1B,CACX,CACA,SAASunC,EAAWp6D,GAChB,OAIoB,IAJb,CACH,YACA,YACA,eACF8U,QAAQ9U,EACd,CAKI,SAASq6D,EAAQr6D,EAAKzC,EAAQs1B,EAAQvyB,GACtC,IAAK85D,EAAWp6D,GACZ,OAEJ,MAAMs6D,EAAO/8D,EAAOyC,GACdu6D,EAAO1nC,EAAO7yB,GAChBN,EAAS46D,IAAS56D,EAAS66D,GAE3Bh8B,EAAM+7B,EAAMC,EAAMj6D,GAElB/C,EAAOyC,GAAOtJ,EAAM6jE,EAE5B,CACA,SAASh8B,EAAMhhC,EAAQs1B,EAAQvyB,GAC3B,MAAM66C,EAAUxxD,EAAQkpC,GAAUA,EAAS,CACvCA,GAEEhxB,EAAOs5C,EAAQ7yD,OACrB,IAAKoX,EAASnC,GACV,OAAOA,EAGX,MAAMi9D,GADNl6D,EAAUA,GAAW,CAAC,GACCk6D,QAAUH,EACjC,IAAII,EACJ,IAAI,IAAInxE,EAAI,EAAGA,EAAIuY,IAAQvY,EAAE,CAEzB,GADAmxE,EAAUtf,EAAQ7xD,IACboW,EAAS+6D,GACV,SAEJ,MAAMnlE,EAAOC,OAAOD,KAAKmlE,GACzB,IAAI,IAAIxxE,EAAI,EAAGkxE,EAAO7kE,EAAKhN,OAAQW,EAAIkxE,IAAQlxE,EAC3CuxE,EAAOllE,EAAKrM,GAAIsU,EAAQk9D,EAASn6D,EAEzC,CACA,OAAO/C,CACX,CACA,SAASomC,EAAQpmC,EAAQs1B,GAErB,OAAO0L,EAAMhhC,EAAQs1B,EAAQ,CACzB2nC,OAAQE,GAEhB,CAII,SAASA,EAAU16D,EAAKzC,EAAQs1B,GAChC,IAAKunC,EAAWp6D,GACZ,OAEJ,MAAMs6D,EAAO/8D,EAAOyC,GACdu6D,EAAO1nC,EAAO7yB,GAChBN,EAAS46D,IAAS56D,EAAS66D,GAC3B52B,EAAQ22B,EAAMC,GACNhlE,OAAO4qB,UAAUw6C,eAAe9/D,KAAK0C,EAAQyC,KACrDzC,EAAOyC,GAAOtJ,EAAM6jE,GAE5B,CASA,MAAMK,EAAe,CAEjB,GAAKt0E,GAAIA,EAETmE,EAAIwkD,GAAIA,EAAExkD,EACVoc,EAAIooC,GAAIA,EAAEpoC,GAIV,SAASg0D,EAAU76D,GACnB,MAAMg/B,EAAQh/B,EAAI4+B,MAAM,KAClBtpC,EAAO,GACb,IAAImB,EAAM,GACV,IAAK,MAAMqkE,KAAQ97B,EACfvoC,GAAOqkE,EACHrkE,EAAIyjE,SAAS,MACbzjE,EAAMA,EAAImzC,MAAM,GAAI,GAAK,KAEzBt0C,EAAK8G,KAAK3F,GACVA,EAAM,IAGd,OAAOnB,CACX,CAaA,SAAS+U,EAAiB9S,EAAKyI,GAC3B,MAAMqlC,EAAWu1B,EAAa56D,KAAS46D,EAAa56D,GAbxD,SAAyBA,GACrB,MAAM1K,EAAOulE,EAAU76D,GACvB,OAAQzI,IACJ,IAAK,MAAMtO,KAAKqM,EAAK,CACjB,GAAU,KAANrM,EACA,MAEJsO,EAAMA,GAAOA,EAAItO,EACrB,CACA,OAAOsO,CAAG,CAElB,CAE+DwjE,CAAgB/6D,IAC3E,OAAOqlC,EAAS9tC,EACpB,CAGI,SAASypC,EAAY74C,GACrB,OAAOA,EAAI+O,OAAO,GAAG8jE,cAAgB7yE,EAAIyhD,MAAM,EACnD,CACA,MACMlE,EAAczkC,GAAyB,mBAAVA,EAuBzBka,EAAKz0B,KAAKy0B,GACd3B,EAAM,EAAI2B,EACV8/C,EAAQzhD,EAAM2B,EACd+/C,EAAWjwD,OAAOC,kBAClBiwD,EAAchgD,EAAK,IACnBF,EAAUE,EAAK,EACfigD,EAAajgD,EAAK,EAClBkgD,EAAqB,EAALlgD,EAAS,EACzBo1C,EAAQ7pE,KAAK6pE,MACbhuD,EAAO7b,KAAK6b,KAClB,SAASqtD,EAAanlE,EAAGoc,EAAG8nB,GACxB,OAAOjoC,KAAKwqB,IAAIzmB,EAAIoc,GAAK8nB,CAC7B,CAuFA,SAAS61B,EAAsBniC,EAAKC,GAChC,OAAO57B,KAAK+7B,KAAK/7B,KAAK2P,IAAIisB,EAAI73B,EAAI43B,EAAI53B,EAAG,GAAK/D,KAAK2P,IAAIisB,EAAIzb,EAAIwb,EAAIxb,EAAG,GAC1E,CAII,SAASy0D,EAAW9zE,EAAGC,GACvB,OAAQD,EAAIC,EAAIwzE,GAASzhD,EAAM2B,CACnC,CAII,SAASu/B,EAAgBlzD,GACzB,OAAQA,EAAIgyB,EAAMA,GAAOA,CAC7B,CAGI,SAASqB,EAAcD,EAAOlgB,EAAO8G,EAAK+5D,GAC1C,MAAM/zE,EAAIkzD,EAAgB9/B,GACpB7xB,EAAI2xD,EAAgBhgD,GACpB9S,EAAI8yD,EAAgBl5C,GACpBg6D,EAAe9gB,EAAgB3xD,EAAIvB,GACnCi0E,EAAa/gB,EAAgB9yD,EAAIJ,GACjCk0E,EAAehhB,EAAgBlzD,EAAIuB,GACnC4yE,EAAajhB,EAAgBlzD,EAAII,GACvC,OAAOJ,IAAMuB,GAAKvB,IAAMI,GAAK2zE,GAAyBxyE,IAAMnB,GAAK4zE,EAAeC,GAAcC,EAAeC,CACjH,CAOI,SAASjmC,EAAYz0B,EAAOra,EAAKD,GACjC,OAAOD,KAAKC,IAAIC,EAAKF,KAAKE,IAAID,EAAKsa,GACvC,CAaI,SAASkwC,EAAWlwC,EAAOvG,EAAO8G,EAAKmtB,EAAU,MACjD,OAAO1tB,GAASva,KAAKE,IAAI8T,EAAO8G,GAAOmtB,GAAW1tB,GAASva,KAAKC,IAAI+T,EAAO8G,GAAOmtB,CACtF,CAEA,SAAS0nC,EAAQ4C,EAAOh4D,EAAO26D,GAC3BA,EAAMA,GAAO,CAAE95D,GAAQm3D,EAAMn3D,GAASb,GACtC,IAEI46D,EAFAv6C,EAAK23C,EAAM3wE,OAAS,EACpB+4B,EAAK,EAET,KAAMC,EAAKD,EAAK,GACZw6C,EAAMx6C,EAAKC,GAAM,EACbs6C,EAAIC,GACJx6C,EAAKw6C,EAELv6C,EAAKu6C,EAGb,MAAO,CACHx6C,KACAC,KAER,CAQI,MAAMJ,EAAe,CAAC+3C,EAAOj5D,EAAKiB,EAAO0T,IAAO0hD,EAAQ4C,EAAOh4D,EAAO0T,EAAQ7S,IAC1E,MAAMg6D,EAAK7C,EAAMn3D,GAAO9B,GACxB,OAAO87D,EAAK76D,GAAS66D,IAAO76D,GAASg4D,EAAMn3D,EAAQ,GAAG9B,KAASiB,CAAK,EACnEa,GAAQm3D,EAAMn3D,GAAO9B,GAAOiB,GAyB/B86D,EAAc,CAChB,OACA,MACA,QACA,SACA,WAmEKnhE,EACiB,oBAAXE,OACA,SAAS02B,GACZ,OAAOA,GACX,EAEG12B,OAAOkhE,sBAoGZC,EAAUhkE,GAAU,IAANA,GAAiB,IAANA,EACzBikE,EAAY,CAACjkE,EAAGlP,EAAG+O,KAAMpR,KAAK2P,IAAI,EAAG,IAAM4B,GAAK,IAAMvR,KAAK8zB,KAAKviB,EAAIlP,GAAKywB,EAAM1hB,GAC/EqkE,EAAa,CAAClkE,EAAGlP,EAAG+O,IAAIpR,KAAK2P,IAAI,GAAI,GAAK4B,GAAKvR,KAAK8zB,KAAKviB,EAAIlP,GAAKywB,EAAM1hB,GAAK,EAKzE+F,EAAU,CAChBE,OAAS9F,GAAIA,EACbmkE,WAAankE,GAAIA,EAAIA,EACrBokE,YAAcpkE,IAAKA,GAAKA,EAAI,GAC5BqkE,cAAgBrkE,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,GAAK,MAASA,GAAKA,EAAI,GAAK,GAC3EskE,YAActkE,GAAIA,EAAIA,EAAIA,EAC1BukE,aAAevkE,IAAKA,GAAK,GAAKA,EAAIA,EAAI,EACtCwkE,eAAiBxkE,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAI,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAClFykE,YAAczkE,GAAIA,EAAIA,EAAIA,EAAIA,EAC9B0kE,aAAe1kE,MAAOA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC5C2kE,eAAiB3kE,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAIA,GAAK,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC3F4kE,YAAc5kE,GAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAClC6kE,aAAe7kE,IAAKA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAC9C8kE,eAAiB9kE,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAClG+kE,WAAa/kE,GAA6B,EAAxBvR,KAAK4zB,IAAIriB,EAAIgjB,GAC/BgiD,YAAchlE,GAAIvR,KAAK8zB,IAAIviB,EAAIgjB,GAC/BiiD,cAAgBjlE,IAAK,IAAOvR,KAAK4zB,IAAIa,EAAKljB,GAAK,GAC/CklE,WAAallE,GAAU,IAANA,EAAU,EAAIvR,KAAK2P,IAAI,EAAG,IAAM4B,EAAI,IACrDmlE,YAAcnlE,GAAU,IAANA,EAAU,EAA4B,EAAvBvR,KAAK2P,IAAI,GAAI,GAAK4B,GACnDolE,cAAgBplE,GAAIgkE,EAAOhkE,GAAKA,EAAIA,EAAI,GAAM,GAAMvR,KAAK2P,IAAI,EAAG,IAAU,EAAJ4B,EAAQ,IAAM,IAAyC,EAAjCvR,KAAK2P,IAAI,GAAI,IAAU,EAAJ4B,EAAQ,KACvHqlE,WAAarlE,GAAIA,GAAK,EAAIA,IAAMvR,KAAK+7B,KAAK,EAAIxqB,EAAIA,GAAK,GACvDslE,YAActlE,GAAIvR,KAAK+7B,KAAK,GAAKxqB,GAAK,GAAKA,GAC3CulE,cAAgBvlE,IAAKA,GAAK,IAAO,GAAK,IAAOvR,KAAK+7B,KAAK,EAAIxqB,EAAIA,GAAK,GAAK,IAAOvR,KAAK+7B,KAAK,GAAKxqB,GAAK,GAAKA,GAAK,GAC9GwlE,cAAgBxlE,GAAIgkE,EAAOhkE,GAAKA,EAAIikE,EAAUjkE,EAAG,KAAO,IACxDylE,eAAiBzlE,GAAIgkE,EAAOhkE,GAAKA,EAAIkkE,EAAWlkE,EAAG,KAAO,IAC1D0lE,iBAAkB1lE,GACd,MAAMlP,EAAI,MAEV,OAAOkzE,EAAOhkE,GAAKA,EAAIA,EAAI,GAAM,GAAMikE,EAAc,EAAJjkE,EAAOlP,EAD9C,KACsD,GAAM,GAAMozE,EAAe,EAAJlkE,EAAQ,EAAGlP,EADxF,IAEd,EACA60E,WAAY3lE,GACR,MAAMlP,EAAI,QACV,OAAOkP,EAAIA,IAAMlP,EAAI,GAAKkP,EAAIlP,EAClC,EACA80E,YAAa5lE,GACT,MAAMlP,EAAI,QACV,OAAQkP,GAAK,GAAKA,IAAMlP,EAAI,GAAKkP,EAAIlP,GAAK,CAC9C,EACA+0E,cAAe7lE,GACX,IAAIlP,EAAI,QACR,OAAKkP,GAAK,IAAO,EACCA,EAAIA,IAAqB,GAAdlP,GAAK,QAAckP,EAAIlP,GAAzC,GAEJ,KAAQkP,GAAK,GAAKA,IAAqB,GAAdlP,GAAK,QAAckP,EAAIlP,GAAK,EAChE,EACAg1E,aAAe9lE,GAAI,EAAI4F,EAAQmgE,cAAc,EAAI/lE,GACjD+lE,cAAe/lE,GACX,MAAM/N,EAAI,OACJvC,EAAI,KACV,OAAIsQ,EAAI,EAAItQ,EACDuC,EAAI+N,EAAIA,EAEfA,EAAI,EAAItQ,EACDuC,GAAK+N,GAAK,IAAMtQ,GAAKsQ,EAAI,IAEhCA,EAAI,IAAMtQ,EACHuC,GAAK+N,GAAK,KAAOtQ,GAAKsQ,EAAI,MAE9B/N,GAAK+N,GAAK,MAAQtQ,GAAKsQ,EAAI,OACtC,EACAgmE,gBAAkBhmE,GAAIA,EAAI,GAAoC,GAA9B4F,EAAQkgE,aAAiB,EAAJ9lE,GAAkD,GAAnC4F,EAAQmgE,cAAkB,EAAJ/lE,EAAQ,GAAW,IAGjH,SAASimE,EAAoBj9D,GACzB,GAAIA,GAA0B,iBAAVA,EAAoB,CACpC,MAAMhK,EAAOgK,EAAM84D,WACnB,MAAgB,2BAAT9iE,GAA8C,4BAATA,CAChD,CACA,OAAO,CACX,CAIA,SAASknE,EAAcl9D,GACnB,OAAOi9D,EAAoBj9D,GAASA,EAAQ,IAAI64D,EAAQ/iE,MAAMkK,GAAOtI,SAAS,IAAKD,OAAO,IAAKjQ,WACnG,CAEA,MAAM0qB,EAAU,CACZ,IACA,IACA,cACA,SACA,WAEEirD,EAAS,CACX,QACA,cACA,mBAgFEC,EAAY,IAAI1kE,IAWtB,SAAS2iB,EAAagiD,EAAK/hD,EAAQjc,GAC/B,OAXJ,SAAyBic,EAAQjc,GAC7BA,EAAUA,GAAW,CAAC,EACtB,MAAMoN,EAAW6O,EAASgiD,KAAKC,UAAUl+D,GACzC,IAAI83D,EAAYiG,EAAUxiE,IAAI6R,GAK9B,OAJK0qD,IACDA,EAAY,IAAIqG,KAAKC,aAAaniD,EAAQjc,GAC1C+9D,EAAUriE,IAAI0R,EAAU0qD,IAErBA,CACX,CAEWuG,CAAgBpiD,EAAQjc,GAASggB,OAAOg+C,EACnD,CAEA,MAAMlO,EAAa,CAClBhwD,OAAQa,GACMtX,EAAQsX,GAAUA,EAAQ,GAAKA,EAE7CovD,QAASN,EAAWjuD,EAAOsP,GACpB,GAAkB,IAAd2+C,EACA,MAAO,IAEX,MAAMxzC,EAASplB,KAAK4C,MAAMuG,QAAQic,OAClC,IAAIqiD,EACAC,EAAQ9O,EACZ,GAAI3+C,EAAM9oB,OAAS,EAAG,CAClB,MAAMw2E,EAAUp4E,KAAKC,IAAID,KAAKwqB,IAAIE,EAAM,GAAGnQ,OAAQva,KAAKwqB,IAAIE,EAAMA,EAAM9oB,OAAS,GAAG2Y,SAChF69D,EAAU,MAAQA,EAAU,QAC5BF,EAAW,cAEfC,EA8BZ,SAAwB9O,EAAW3+C,GAC/B,IAAIytD,EAAQztD,EAAM9oB,OAAS,EAAI8oB,EAAM,GAAGnQ,MAAQmQ,EAAM,GAAGnQ,MAAQmQ,EAAM,GAAGnQ,MAAQmQ,EAAM,GAAGnQ,MAI3F,OAHIva,KAAKwqB,IAAI2tD,IAAU,GAAK9O,IAAcrpE,KAAKuX,MAAM8xD,KACjD8O,EAAQ9O,EAAYrpE,KAAKuX,MAAM8xD,IAE5B8O,CACX,CApCoBE,CAAehP,EAAW3+C,EACtC,CACA,MAAM4tD,EAAWzO,EAAM7pE,KAAKwqB,IAAI2tD,IAC1BI,EAAapqD,MAAMmqD,GAAY,EAAIt4E,KAAKC,IAAID,KAAKE,KAAK,EAAIF,KAAKuX,MAAM+gE,GAAW,IAAK,GACrF1+D,EAAU,CACZs+D,WACAM,sBAAuBD,EACvBE,sBAAuBF,GAG3B,OADA1pE,OAAOqB,OAAO0J,EAASnJ,KAAKmJ,QAAQ8Q,MAAMkP,QACnChE,EAAayzC,EAAWxzC,EAAQjc,EAC3C,EACHywD,YAAahB,EAAWjuD,EAAOsP,GACxB,GAAkB,IAAd2+C,EACA,MAAO,IAEX,MAAMlxD,EAASuS,EAAMtP,GAAOsvD,aAAerB,EAAYrpE,KAAK2P,IAAI,GAAI3P,KAAKuX,MAAMsyD,EAAMR,KACrF,MAAI,CACA,EACA,EACA,EACA,EACA,GACA,IACFpoC,SAAS9oB,IAAWiD,EAAQ,GAAMsP,EAAM9oB,OAC/B8nE,EAAWC,QAAQx1D,KAAK1D,KAAM44D,EAAWjuD,EAAOsP,GAEpD,EACX,GASH,IAAI++C,GAAQ,CACTC,cA0EJ,MAAM5wB,GAAYjqC,OAAOyoC,OAAO,MAC1BqB,GAAc9pC,OAAOyoC,OAAO,MACjC,SAASohC,GAAWp1C,EAAMhqB,GACvB,IAAKA,EACD,OAAOgqB,EAEX,MAAM10B,EAAO0K,EAAI4+B,MAAM,KACvB,IAAI,IAAIt1C,EAAI,EAAGN,EAAIsM,EAAKhN,OAAQgB,EAAIN,IAAKM,EAAE,CACvC,MAAML,EAAIqM,EAAKhM,GACf0gC,EAAOA,EAAK/gC,KAAO+gC,EAAK/gC,GAAKsM,OAAOyoC,OAAO,MAC/C,CACA,OAAOhU,CACX,CACA,SAAShuB,GAAIqjE,EAAMvhC,EAAO19B,GACtB,MAAqB,iBAAV09B,EACAS,EAAM6gC,GAAWC,EAAMvhC,GAAQ19B,GAEnCm+B,EAAM6gC,GAAWC,EAAM,IAAKvhC,EACvC,CACC,MAAMwhC,GACHtoE,YAAYsqC,EAAci+B,GACtBpoE,KAAK0I,eAAYjX,EACjBuO,KAAKmhB,gBAAkB,kBACvBnhB,KAAKqhB,YAAc,kBACnBrhB,KAAKM,MAAQ,OACbN,KAAK4Q,SAAW,CAAC,EACjB5Q,KAAK+zB,iBAAoBle,GAAUA,EAAQjT,MAAM4qC,SAASlc,sBAC1DtxB,KAAKqV,SAAW,CAAC,EACjBrV,KAAK6zC,OAAS,CACV,YACA,WACA,QACA,aACA,aAEJ7zC,KAAK+3B,KAAO,CACRswC,OAAQ,qDACRt+D,KAAM,GACNiX,MAAO,SACPiX,WAAY,IACZ13B,OAAQ,MAEZP,KAAKq2C,MAAQ,CAAC,EACdr2C,KAAKsoE,qBAAuB,CAACx6D,EAAK3E,IAAU69D,EAAc79D,EAAQgY,iBAClEnhB,KAAKuoE,iBAAmB,CAACz6D,EAAK3E,IAAU69D,EAAc79D,EAAQkY,aAC9DrhB,KAAKwoE,WAAa,CAAC16D,EAAK3E,IAAU69D,EAAc79D,EAAQ7I,OACxDN,KAAKkQ,UAAY,IACjBlQ,KAAKwoB,YAAc,CACfxd,KAAM,UACN2e,WAAW,EACXe,kBAAkB,GAEtB1qB,KAAKixC,qBAAsB,EAC3BjxC,KAAKg3C,QAAU,KACfh3C,KAAKyhB,QAAU,KACfzhB,KAAKmS,SAAU,EACfnS,KAAK4gB,QAAU,CAAC,EAChB5gB,KAAKkxC,YAAa,EAClBlxC,KAAKiK,WAAQxY,EACbuO,KAAKkN,OAAS,CAAC,EACflN,KAAK0lB,UAAW,EAChB1lB,KAAKwV,yBAA0B,EAC/BxV,KAAKmoC,SAASgC,GACdnqC,KAAKytD,MAAM2a,EACf,CACHvjE,IAAI8hC,EAAO19B,GACJ,OAAOpE,GAAI7E,KAAM2mC,EAAO19B,EAC5B,CACHvE,IAAIiiC,GACG,OAAOshC,GAAWjoE,KAAM2mC,EAC5B,CACHwB,SAASxB,EAAO19B,GACT,OAAOpE,GAAIqjC,GAAavB,EAAO19B,EACnC,CACA29B,SAASD,EAAO19B,GACZ,OAAOpE,GAAIwjC,GAAW1B,EAAO19B,EACjC,CACH++B,MAAMrB,EAAO7oB,EAAMiqB,EAAaD,GACzB,MAAM2gC,EAAcR,GAAWjoE,KAAM2mC,GAC/B+hC,EAAoBT,GAAWjoE,KAAM+nC,GACrC4gC,EAAc,IAAM7qD,EAC1B1f,OAAOwqE,iBAAiBH,EAAa,CACjC,CAACE,GAAc,CACX7+D,MAAO2+D,EAAY3qD,GACnBqjC,UAAU,GAEd,CAACrjC,GAAO,CACJojC,YAAY,EACZx8C,MACI,MAAMimC,EAAQ3qC,KAAK2oE,GACbviE,EAASsiE,EAAkB5gC,GACjC,OAAIv/B,EAASoiC,GACFvsC,OAAOqB,OAAO,CAAC,EAAG2G,EAAQukC,GAE9B96B,EAAe86B,EAAOvkC,EACjC,EACAvB,IAAKiF,GACD9J,KAAK2oE,GAAe7+D,CACxB,IAGZ,CACA2jD,MAAMob,GACFA,EAAS1lE,SAASsqD,GAAQA,EAAMztD,OACpC,EAEJ,IAAIyI,GAA2B,IAAI0/D,GAAS,CACxC3nD,YAAc1C,IAAQA,EAAK4C,WAAW,MACtCD,WAAa3C,GAAgB,WAATA,EACpBu4B,MAAO,CACHuf,UAAW,eAEfptC,YAAa,CACThI,aAAa,EACbC,YAAY,IAEjB,CAjVH,SAAiChY,GAC7BA,EAAS5D,IAAI,YAAa,CACtBkC,WAAOtV,EACPyR,SAAU,IACVyD,OAAQ,eACRvD,QAAI3R,EACJ0N,UAAM1N,EACNwV,UAAMxV,EACNwN,QAAIxN,EACJqO,UAAMrO,IAEVgX,EAAS0/B,SAAS,YAAa,CAC3BytB,WAAW,EACXn1C,YAAY,EACZD,YAAc1C,GAAgB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAE3ErV,EAAS5D,IAAI,aAAc,CACvBoiE,OAAQ,CACJnnE,KAAM,QACNiJ,WAAYk+D,GAEhBjrD,QAAS,CACLlc,KAAM,SACNiJ,WAAYiT,KAGpBvT,EAAS0/B,SAAS,aAAc,CAC5BytB,UAAW,cAEfntD,EAAS5D,IAAI,cAAe,CACxB0C,OAAQ,CACJmB,UAAW,CACPxF,SAAU,MAGlB8wB,OAAQ,CACJtrB,UAAW,CACPxF,SAAU,IAGlB+xC,KAAM,CACF1rC,WAAY,CACR09D,OAAQ,CACJ9nE,KAAM,eAEV2zC,QAAS,CACLhzC,KAAM,UACNoD,SAAU,KAItB8xC,KAAM,CACFzrC,WAAY,CACR09D,OAAQ,CACJhoE,GAAI,eAER6zC,QAAS,CACLhzC,KAAM,UACN6G,OAAQ,SACRvD,GAAKjU,GAAQ,EAAJA,MAK7B,EAEA,SAA8BsZ,GAC1BA,EAAS5D,IAAI,SAAU,CACnByuC,aAAa,EACb3kB,QAAS,CACL9Z,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,IAGlB,EA0EA,SAA4BvM,GACxBA,EAAS5D,IAAI,QAAS,CAClBoiB,SAAS,EACT/K,QAAQ,EACR9R,SAAS,EACTiS,aAAa,EACpBqiC,OAAQ,QACRnkB,MAAO,EACApe,KAAM,CACF8K,SAAS,EACT1F,UAAW,EACXgkB,iBAAiB,EACjB5N,WAAW,EACXC,WAAY,EACZkG,UAAW,CAACjwB,EAAM1E,IAAUA,EAAQoY,UACpCyhB,UAAW,CAACn1B,EAAM1E,IAAUA,EAAQ7I,MACpC4b,QAAQ,GAEZyK,OAAQ,CACJM,SAAS,EACT4b,KAAM,GACNE,WAAY,EACZzlB,MAAO,GAEXkhB,MAAO,CACHvX,SAAS,EACThG,KAAM,GACN0N,QAAS,CACL9Z,IAAK,EACLE,OAAQ,IAGhBkF,MAAO,CACH2jB,YAAa,EACbC,YAAa,GACboB,QAAQ,EACRgF,gBAAiB,EACjBF,gBAAiB,GACjBpV,QAAS,EACT1H,SAAS,EACTwU,UAAU,EACV4F,gBAAiB,EACjBuC,YAAa,EACbvJ,SAAU2+B,GAAMC,WAAWhwD,OAC3Bw3D,MAAO,CAAC,EACRvkC,MAAO,CAAC,EACR/D,MAAO,SACPgL,WAAY,OACZiB,mBAAmB,EACnBG,cAAe,4BACfD,gBAAiB,KAGzB77B,EAASu/B,MAAM,cAAe,QAAS,GAAI,SAC3Cv/B,EAASu/B,MAAM,aAAc,QAAS,GAAI,eAC1Cv/B,EAASu/B,MAAM,eAAgB,QAAS,GAAI,eAC5Cv/B,EAASu/B,MAAM,cAAe,QAAS,GAAI,SAC3Cv/B,EAAS0/B,SAAS,QAAS,CACvBytB,WAAW,EACXp1C,YAAc1C,IAAQA,EAAK4C,WAAW,YAAc5C,EAAK4C,WAAW,UAAqB,aAAT5C,GAAgC,WAATA,EACvG2C,WAAa3C,GAAgB,eAATA,GAAkC,mBAATA,GAAsC,SAATA,IAE9ErV,EAAS0/B,SAAS,SAAU,CACxBytB,UAAW,UAEfntD,EAAS0/B,SAAS,cAAe,CAC7B3nB,YAAc1C,GAAgB,oBAATA,GAAuC,aAATA,EACnD2C,WAAa3C,GAAgB,oBAATA,GAE5B,IAiII,SAASgrD,GAAa/wC,GACtB,OAAKA,GAAQhb,EAAcgb,EAAKhuB,OAASgT,EAAcgb,EAAKswC,QACjD,MAEHtwC,EAAK/W,MAAQ+W,EAAK/W,MAAQ,IAAM,KAAO+W,EAAKx3B,OAASw3B,EAAKx3B,OAAS,IAAM,IAAMw3B,EAAKhuB,KAAO,MAAQguB,EAAKswC,MACpH,CAGI,SAAS9nC,GAAazyB,EAAK6C,EAAM2vB,EAAIyoC,EAAS1oC,GAC9C,IAAIoqB,EAAY95C,EAAK0vB,GAQrB,OAPKoqB,IACDA,EAAY95C,EAAK0vB,GAAUvyB,EAAIk7C,YAAY3oB,GAAQ/iB,MACnDgjB,EAAGr7B,KAAKo7B,IAERoqB,EAAYse,IACZA,EAAUte,GAEPse,CACX,CAyEA,SAAShe,GAAgBj9C,EAAK3E,EAAS7V,EAAGoc,EAAGzd,GACzC,IAAI6N,EAAMkpE,EAASC,EAASl/D,EAAMmmD,EAAc5yC,EAAO4rD,EAAUC,EACjE,MAAMnoD,EAAQ7X,EAAQ4X,WAChBV,EAAWlX,EAAQkX,SACnBV,EAASxW,EAAQwW,OACvB,IAAIm3C,GAAOz2C,GAAY,GAAK2jD,EAC5B,GAAIhjD,GAA0B,iBAAVA,IAChBlhB,EAAOkhB,EAAM4hD,WACA,8BAAT9iE,GAAiD,+BAATA,GAMxC,OALAgO,EAAI62B,OACJ72B,EAAIqsC,UAAU7mD,EAAGoc,GACjB5B,EAAI3a,OAAO2jE,GACXhpD,EAAIs7D,UAAUpoD,GAAQA,EAAM1D,MAAQ,GAAI0D,EAAM3D,OAAS,EAAG2D,EAAM1D,MAAO0D,EAAM3D,aAC7EvP,EAAI+2B,UAIZ,KAAInnB,MAAMiC,IAAWA,GAAU,GAA/B,CAIA,OADA7R,EAAIq3B,YACGnkB,GAEH,QACQ/uB,EACA6b,EAAIu7D,QAAQ/1E,EAAGoc,EAAGzd,EAAI,EAAG0tB,EAAQ,EAAG,EAAG0C,GAEvCvU,EAAImX,IAAI3xB,EAAGoc,EAAGiQ,EAAQ,EAAG0C,GAE7BvU,EAAIyrC,YACJ,MACJ,IAAK,WACDj8B,EAAQrrB,EAAIA,EAAI,EAAI0tB,EACpB7R,EAAIs3B,OAAO9xC,EAAI/D,KAAK8zB,IAAIyzC,GAAOx5C,EAAO5N,EAAIngB,KAAK4zB,IAAI2zC,GAAOn3C,GAC1Dm3C,GAAOoN,EACPp2D,EAAIu3B,OAAO/xC,EAAI/D,KAAK8zB,IAAIyzC,GAAOx5C,EAAO5N,EAAIngB,KAAK4zB,IAAI2zC,GAAOn3C,GAC1Dm3C,GAAOoN,EACPp2D,EAAIu3B,OAAO/xC,EAAI/D,KAAK8zB,IAAIyzC,GAAOx5C,EAAO5N,EAAIngB,KAAK4zB,IAAI2zC,GAAOn3C,GAC1D7R,EAAIyrC,YACJ,MACJ,IAAK,cAQD2W,EAAwB,KAATvwC,EACf5V,EAAO4V,EAASuwC,EAChB8Y,EAAUz5E,KAAK4zB,IAAI2zC,EAAMmN,GAAcl6D,EACvCm/D,EAAW35E,KAAK4zB,IAAI2zC,EAAMmN,IAAehyE,EAAIA,EAAI,EAAIi+D,EAAenmD,GACpEk/D,EAAU15E,KAAK8zB,IAAIyzC,EAAMmN,GAAcl6D,EACvCo/D,EAAW55E,KAAK8zB,IAAIyzC,EAAMmN,IAAehyE,EAAIA,EAAI,EAAIi+D,EAAenmD,GACpE+D,EAAImX,IAAI3xB,EAAI41E,EAAUx5D,EAAIu5D,EAAS/Y,EAAc4G,EAAM9yC,EAAI8yC,EAAMhzC,GACjEhW,EAAImX,IAAI3xB,EAAI61E,EAAUz5D,EAAIs5D,EAAS9Y,EAAc4G,EAAMhzC,EAASgzC,GAChEhpD,EAAImX,IAAI3xB,EAAI41E,EAAUx5D,EAAIu5D,EAAS/Y,EAAc4G,EAAKA,EAAMhzC,GAC5DhW,EAAImX,IAAI3xB,EAAI61E,EAAUz5D,EAAIs5D,EAAS9Y,EAAc4G,EAAMhzC,EAASgzC,EAAM9yC,GACtElW,EAAIyrC,YACJ,MACJ,IAAK,OACD,IAAKl5B,EAAU,CACXtW,EAAOxa,KAAK+5E,QAAU3pD,EACtBrC,EAAQrrB,EAAIA,EAAI,EAAI8X,EACpB+D,EAAI8wC,KAAKtrD,EAAIgqB,EAAO5N,EAAI3F,EAAM,EAAIuT,EAAO,EAAIvT,GAC7C,KACJ,CACA+sD,GAAOmN,EACS,IAAK,UACrBiF,EAAW35E,KAAK4zB,IAAI2zC,IAAQ7kE,EAAIA,EAAI,EAAI0tB,GACxCqpD,EAAUz5E,KAAK4zB,IAAI2zC,GAAOn3C,EAC1BspD,EAAU15E,KAAK8zB,IAAIyzC,GAAOn3C,EAC1BwpD,EAAW55E,KAAK8zB,IAAIyzC,IAAQ7kE,EAAIA,EAAI,EAAI0tB,GACxC7R,EAAIs3B,OAAO9xC,EAAI41E,EAAUx5D,EAAIu5D,GAC7Bn7D,EAAIu3B,OAAO/xC,EAAI61E,EAAUz5D,EAAIs5D,GAC7Bl7D,EAAIu3B,OAAO/xC,EAAI41E,EAAUx5D,EAAIu5D,GAC7Bn7D,EAAIu3B,OAAO/xC,EAAI61E,EAAUz5D,EAAIs5D,GAC7Bl7D,EAAIyrC,YACJ,MACJ,IAAK,WACDud,GAAOmN,EACS,IAAK,QACrBiF,EAAW35E,KAAK4zB,IAAI2zC,IAAQ7kE,EAAIA,EAAI,EAAI0tB,GACxCqpD,EAAUz5E,KAAK4zB,IAAI2zC,GAAOn3C,EAC1BspD,EAAU15E,KAAK8zB,IAAIyzC,GAAOn3C,EAC1BwpD,EAAW55E,KAAK8zB,IAAIyzC,IAAQ7kE,EAAIA,EAAI,EAAI0tB,GACxC7R,EAAIs3B,OAAO9xC,EAAI41E,EAAUx5D,EAAIu5D,GAC7Bn7D,EAAIu3B,OAAO/xC,EAAI41E,EAAUx5D,EAAIu5D,GAC7Bn7D,EAAIs3B,OAAO9xC,EAAI61E,EAAUz5D,EAAIs5D,GAC7Bl7D,EAAIu3B,OAAO/xC,EAAI61E,EAAUz5D,EAAIs5D,GAC7B,MACJ,IAAK,OACDE,EAAW35E,KAAK4zB,IAAI2zC,IAAQ7kE,EAAIA,EAAI,EAAI0tB,GACxCqpD,EAAUz5E,KAAK4zB,IAAI2zC,GAAOn3C,EAC1BspD,EAAU15E,KAAK8zB,IAAIyzC,GAAOn3C,EAC1BwpD,EAAW55E,KAAK8zB,IAAIyzC,IAAQ7kE,EAAIA,EAAI,EAAI0tB,GACxC7R,EAAIs3B,OAAO9xC,EAAI41E,EAAUx5D,EAAIu5D,GAC7Bn7D,EAAIu3B,OAAO/xC,EAAI41E,EAAUx5D,EAAIu5D,GAC7Bn7D,EAAIs3B,OAAO9xC,EAAI61E,EAAUz5D,EAAIs5D,GAC7Bl7D,EAAIu3B,OAAO/xC,EAAI61E,EAAUz5D,EAAIs5D,GAC7BlS,GAAOmN,EACPiF,EAAW35E,KAAK4zB,IAAI2zC,IAAQ7kE,EAAIA,EAAI,EAAI0tB,GACxCqpD,EAAUz5E,KAAK4zB,IAAI2zC,GAAOn3C,EAC1BspD,EAAU15E,KAAK8zB,IAAIyzC,GAAOn3C,EAC1BwpD,EAAW55E,KAAK8zB,IAAIyzC,IAAQ7kE,EAAIA,EAAI,EAAI0tB,GACxC7R,EAAIs3B,OAAO9xC,EAAI41E,EAAUx5D,EAAIu5D,GAC7Bn7D,EAAIu3B,OAAO/xC,EAAI41E,EAAUx5D,EAAIu5D,GAC7Bn7D,EAAIs3B,OAAO9xC,EAAI61E,EAAUz5D,EAAIs5D,GAC7Bl7D,EAAIu3B,OAAO/xC,EAAI61E,EAAUz5D,EAAIs5D,GAC7B,MACJ,IAAK,OACDA,EAAU/2E,EAAIA,EAAI,EAAI1C,KAAK4zB,IAAI2zC,GAAOn3C,EACtCspD,EAAU15E,KAAK8zB,IAAIyzC,GAAOn3C,EAC1B7R,EAAIs3B,OAAO9xC,EAAI01E,EAASt5D,EAAIu5D,GAC5Bn7D,EAAIu3B,OAAO/xC,EAAI01E,EAASt5D,EAAIu5D,GAC5B,MACJ,IAAK,OACDn7D,EAAIs3B,OAAO9xC,EAAGoc,GACd5B,EAAIu3B,OAAO/xC,EAAI/D,KAAK4zB,IAAI2zC,IAAQ7kE,EAAIA,EAAI,EAAI0tB,GAASjQ,EAAIngB,KAAK8zB,IAAIyzC,GAAOn3C,GACzE,MACJ,KAAK,EACD7R,EAAIyrC,YAGZzrC,EAAIoB,OACA/F,EAAQqY,YAAc,GACtB1T,EAAIw3B,QA3GR,CA6GJ,CAOI,SAAS1a,GAAe/K,EAAOvK,EAAM0Y,GAErC,OADAA,EAASA,GAAU,IACX1Y,GAAQuK,GAASA,EAAMvsB,EAAIgiB,EAAKN,KAAOgZ,GAAUnO,EAAMvsB,EAAIgiB,EAAKR,MAAQkZ,GAAUnO,EAAMnQ,EAAI4F,EAAKT,IAAMmZ,GAAUnO,EAAMnQ,EAAI4F,EAAKP,OAASiZ,CACrJ,CAoDA,SAASu7C,GAAaz7D,EAAKxa,EAAGoc,EAAGkW,EAAMzb,GACnC,GAAIA,EAAKihD,eAAiBjhD,EAAKq/D,UAAW,CAOtC,MAAMC,EAAU37D,EAAIk7C,YAAYpjC,GAC1B5Q,EAAO1hB,EAAIm2E,EAAQC,sBACnB50D,EAAQxhB,EAAIm2E,EAAQE,uBACpB90D,EAAMnF,EAAI+5D,EAAQG,wBAClB70D,EAASrF,EAAI+5D,EAAQI,yBACrBC,EAAc3/D,EAAKihD,eAAiBv2C,EAAME,GAAU,EAAIA,EAC9DjH,EAAIsT,YAActT,EAAIoT,UACtBpT,EAAIq3B,YACJr3B,EAAIyT,UAAYpX,EAAK4/D,iBAAmB,EACxCj8D,EAAIs3B,OAAOpwB,EAAM80D,GACjBh8D,EAAIu3B,OAAOvwB,EAAOg1D,GAClBh8D,EAAIw3B,QACR,CACJ,CACA,SAAS0kC,GAAal8D,EAAK3D,GACvB,MAAM8/D,EAAWn8D,EAAIoT,UACrBpT,EAAIoT,UAAY/W,EAAK7J,MACrBwN,EAAI82B,SAASz6B,EAAK6K,KAAM7K,EAAK0K,IAAK1K,EAAKmT,MAAOnT,EAAKkT,QACnDvP,EAAIoT,UAAY+oD,CACpB,CAwDA,MAAMC,GAAc,uCACdC,GAAa,wEAWf,SAASC,GAAatgE,EAAOC,GAC7B,MAAMsgE,GAAW,GAAKvgE,GAAOwgE,MAAMJ,IACnC,IAAKG,GAA0B,WAAfA,EAAQ,GACpB,OAAc,IAAPtgE,EAGX,OADAD,GAASugE,EAAQ,GACVA,EAAQ,IACX,IAAK,KACD,OAAOvgE,EACX,IAAK,IACDA,GAAS,IAGjB,OAAOC,EAAOD,CAClB,CACA,MAAMygE,GAAgBp7E,IAAKA,GAAK,EAChC,SAAS6oD,GAAkBluC,EAAOD,GAC9B,MAAM5Y,EAAM,CAAC,EACPu5E,EAAWjiE,EAASsB,GACpB1L,EAAOqsE,EAAWpsE,OAAOD,KAAK0L,GAASA,EACvC4gE,EAAOliE,EAASuB,GAAS0gE,EAAYnkE,GAAOwJ,EAAe/F,EAAMzD,GAAOyD,EAAMD,EAAMxD,KAAWA,GAAOyD,EAAMzD,GAAQ,IAAIyD,EAC9H,IAAK,MAAMzD,KAAQlI,EACflN,EAAIoV,GAAQkkE,GAAaE,EAAKpkE,IAElC,OAAOpV,CACX,CAQI,SAASmuD,GAAOt1C,GAChB,OAAOkuC,GAAkBluC,EAAO,CAC5B+K,IAAK,IACLC,MAAO,IACPC,OAAQ,IACRC,KAAM,KAEd,CAyGA,SAASe,GAAc20D,EAAe70D,GAClC,OAAOzX,OAAOqB,OAAOrB,OAAOyoC,OAAO6jC,GAAgB70D,EACvD,CAWI,SAASi5B,GAAgB/8B,EAAQ4E,EAAW,CAC5C,IACDg0D,EAAY7yC,EAAU8yC,EAAY,KAAI74D,EAAO,KAC5C,MAAM84D,EAAkBF,GAAc54D,OACd,IAAb+lB,IACPA,EAAWgzC,GAAS,YAAa/4D,IAErC,MAAMuE,EAAQ,CACV,CAACy0D,OAAOC,aAAc,SACtBh0D,YAAY,EACZi0D,QAASl5D,EACTm5D,YAAaL,EACbjV,UAAW99B,EACXguB,WAAY8kB,EACZhkC,SAAWD,GAAQmI,GAAgB,CAC3BnI,KACG50B,GACJ4E,EAAUk0D,EAAiB/yC,IAEtC,OAAO,IAAIqzC,MAAM70D,EAAO,CAGpB80D,eAAe,CAAChlE,EAAQC,YACbD,EAAOC,UACPD,EAAOilE,aACPt5D,EAAO,GAAG1L,IACV,GAIX3B,IAAI,CAAC0B,EAAQC,IACFilE,GAAQllE,EAAQC,GAAM,IAyOzC,SAA8BA,EAAMsQ,EAAU5E,EAAQ+iB,GAClD,IAAIhrB,EACJ,IAAK,MAAM8rC,KAAUj/B,EAEjB,GADA7M,EAAQghE,GAASS,GAAQ31B,EAAQvvC,GAAO0L,QACnB,IAAVjI,EACP,OAAO0hE,GAAiBnlE,EAAMyD,GAAS2hE,GAAkB15D,EAAQ+iB,EAAOzuB,EAAMyD,GAASA,CAGnG,CAjP6C4hE,CAAqBrlE,EAAMsQ,EAAU5E,EAAQ3L,KAKlFulE,yBAAyB,CAACvlE,EAAQC,IACvBulE,QAAQD,yBAAyBvlE,EAAO6kE,QAAQ,GAAI5kE,GAI/D2gC,eAAe,IACJ4kC,QAAQ5kC,eAAej1B,EAAO,IAIzC5M,IAAI,CAACiB,EAAQC,IACFwlE,GAAqBzlE,GAAQoqB,SAASnqB,GAIjDylE,QAAS1lE,GACEylE,GAAqBzlE,GAIhCvB,IAAKuB,EAAQC,EAAMyD,GACf,MAAMiiE,EAAU3lE,EAAO4lE,WAAa5lE,EAAO4lE,SAAWpB,KAGtD,OAFAxkE,EAAOC,GAAQ0lE,EAAQ1lE,GAAQyD,SACxB1D,EAAOilE,OACP,CACX,GAER,CAmEI,SAASlhC,GAAarV,EAAOrsB,EAAW,CACxC0iC,YAAY,EACZC,WAAW,IAEX,MAAM,YAAE5qB,EAAa/X,EAAS0iC,WAAW,WAAE1qB,EAAYhY,EAAS2iC,UAAU,SAAE6gC,EAAUxjE,EAAS4iC,SAAavW,EAC5G,MAAO,CACHuW,QAAS4gC,EACT9gC,WAAY3qB,EACZ4qB,UAAW3qB,EACX4tB,aAAcE,EAAW/tB,GAAeA,EAAc,IAAIA,EAC1D8tB,YAAaC,EAAW9tB,GAAcA,EAAa,IAAIA,EAE/D,CACA,MAAM8qD,GAAU,CAAC31B,EAAQ93B,IAAO83B,EAASA,EAAS/L,EAAY/rB,GAAQA,EAChE0tD,GAAmB,CAACnlE,EAAMyD,IAAQvB,EAASuB,IAAmB,aAATzD,IAAyD,OAAjCjI,OAAO4oC,eAAel9B,IAAmBA,EAAMjK,cAAgBzB,QAClJ,SAASktE,GAAQllE,EAAQC,EAAME,GAC3B,GAAInI,OAAO4qB,UAAUw6C,eAAe9/D,KAAK0C,EAAQC,GAC7C,OAAOD,EAAOC,GAElB,MAAMyD,EAAQvD,IAGd,OADAH,EAAOC,GAAQyD,EACRA,CACX,CA+CA,SAASoiE,GAAgBp0C,EAAUzxB,EAAMyD,GACrC,OAAOykC,EAAWzW,GAAYA,EAASzxB,EAAMyD,GAASguB,CAC1D,CACA,MAAMq0C,GAAW,CAACtjE,EAAKiN,KAAiB,IAARjN,EAAeiN,EAAwB,iBAARjN,EAAmBqK,EAAiB4C,EAAQjN,QAAOpX,EAClH,SAAS26E,GAAUvnE,EAAKwnE,EAAcxjE,EAAKyjE,EAAgBxiE,GACvD,IAAK,MAAMgM,KAAUu2D,EAAa,CAC9B,MAAM1lC,EAAQwlC,GAAStjE,EAAKiN,GAC5B,GAAI6wB,EAAO,CACP9hC,EAAIK,IAAIyhC,GACR,MAAM7O,EAAWo0C,GAAgBvlC,EAAMivB,UAAW/sD,EAAKiB,GACvD,QAAwB,IAAbguB,GAA4BA,IAAajvB,GAAOivB,IAAaw0C,EAGpE,OAAOx0C,CAEf,MAAO,IAAc,IAAV6O,QAA6C,IAAnB2lC,GAAkCzjE,IAAQyjE,EAG3E,OAAO,IAEf,CACA,OAAO,CACX,CACA,SAASb,GAAkBY,EAAcn+B,EAAU7nC,EAAMyD,GACrD,MAAM6gE,EAAaz8B,EAASg9B,YACtBpzC,EAAWo0C,GAAgBh+B,EAAS0nB,UAAWvvD,EAAMyD,GACrDyiE,EAAY,IACXF,KACA1B,GAED9lE,EAAM,IAAIkoC,IAChBloC,EAAIK,IAAI4E,GACR,IAAIjB,EAAM2jE,GAAiB3nE,EAAK0nE,EAAWlmE,EAAMyxB,GAAYzxB,EAAMyD,GACnE,OAAY,OAARjB,SAGoB,IAAbivB,GAA4BA,IAAazxB,IAChDwC,EAAM2jE,GAAiB3nE,EAAK0nE,EAAWz0C,EAAUjvB,EAAKiB,GAC1C,OAARjB,KAIDimC,GAAgBv8C,MAAM4M,KAAK0F,GAAM,CACpC,IACD8lE,EAAY7yC,GAAU,IAQ7B,SAAsBoW,EAAU7nC,EAAMyD,GAClC,MAAMgM,EAASo4B,EAAS4X,aAClBz/C,KAAQyP,IACVA,EAAOzP,GAAQ,CAAC,GAEpB,MAAMD,EAAS0P,EAAOzP,GACtB,OAAI7T,EAAQ4T,IAAWmC,EAASuB,GAErBA,EAEJ1D,GAAU,CAAC,CACtB,CAnBiCqmE,CAAav+B,EAAU7nC,EAAMyD,IAC9D,CACA,SAAS0iE,GAAiB3nE,EAAK0nE,EAAW1jE,EAAKivB,EAAU5zB,GACrD,KAAM2E,GACFA,EAAMujE,GAAUvnE,EAAK0nE,EAAW1jE,EAAKivB,EAAU5zB,GAEnD,OAAO2E,CACX,CAsBA,SAASiiE,GAASjiE,EAAKkJ,GACnB,IAAK,MAAM40B,KAAS50B,EAAO,CACvB,IAAK40B,EACD,SAEJ,MAAM78B,EAAQ68B,EAAM99B,GACpB,QAAqB,IAAViB,EACP,OAAOA,CAEf,CACJ,CACA,SAAS+hE,GAAqBzlE,GAC1B,IAAIjI,EAAOiI,EAAOilE,MAIlB,OAHKltE,IACDA,EAAOiI,EAAOilE,MAItB,SAAkCt5D,GAC9B,MAAMlN,EAAM,IAAIkoC,IAChB,IAAK,MAAMpG,KAAS50B,EAChB,IAAK,MAAMlJ,KAAOzK,OAAOD,KAAKwoC,GAAOx5B,QAAQrb,IAAKA,EAAE4uB,WAAW,OAC3D7b,EAAIK,IAAI2D,GAGhB,OAAOtW,MAAM4M,KAAK0F,EACtB,CAZ8B6nE,CAAyBtmE,EAAO6kE,UAEnD9sE,CACX,CAyBA,MAAMwuE,GAAU74D,OAAO64D,SAAW,MAC5BC,GAAW,CAAChtD,EAAQztB,IAAIA,EAAIytB,EAAOzuB,SAAWyuB,EAAOztB,GAAG6tB,MAAQJ,EAAOztB,GACvE06E,GAAgB38D,GAA0B,MAAdA,EAAoB,IAAM,IAC5D,SAAS48D,GAAYlmD,EAAYmmD,EAAaC,EAAYlsE,GAItD,MAAM+5C,EAAWj0B,EAAW5G,KAAO+sD,EAAcnmD,EAC3C08C,EAAUyJ,EACV7tD,EAAO8tD,EAAWhtD,KAAO+sD,EAAcC,EACvCC,EAAM5f,EAAsBiW,EAASzoB,GACrCqyB,EAAM7f,EAAsBnuC,EAAMokD,GACxC,IAAI6J,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GAEvBC,EAAMzvD,MAAMyvD,GAAO,EAAIA,EACvBC,EAAM1vD,MAAM0vD,GAAO,EAAIA,EACvB,MAAMC,EAAKvsE,EAAIqsE,EACTG,EAAKxsE,EAAIssE,EACf,MAAO,CACHvyB,SAAU,CACNvnD,EAAGgwE,EAAQhwE,EAAI+5E,GAAMnuD,EAAK5rB,EAAIunD,EAASvnD,GACvCoc,EAAG4zD,EAAQ5zD,EAAI29D,GAAMnuD,EAAKxP,EAAImrC,EAASnrC,IAE3CwP,KAAM,CACF5rB,EAAGgwE,EAAQhwE,EAAIg6E,GAAMpuD,EAAK5rB,EAAIunD,EAASvnD,GACvCoc,EAAG4zD,EAAQ5zD,EAAI49D,GAAMpuD,EAAKxP,EAAImrC,EAASnrC,IAGnD,CA2DI,SAAS69D,GAAoB3tD,EAAQ1P,EAAY,KACjD,MAAMs9D,EAAYX,GAAa38D,GACzBu9D,EAAY7tD,EAAOzuB,OACnBu8E,EAASn7E,MAAMk7E,GAAWv+D,KAAK,GAC/By+D,EAAKp7E,MAAMk7E,GAEjB,IAAIt7E,EAAGy7E,EAAaC,EAChBC,EAAalB,GAAShtD,EAAQ,GAClC,IAAIztB,EAAI,EAAGA,EAAIs7E,IAAat7E,EAIxB,GAHAy7E,EAAcC,EACdA,EAAeC,EACfA,EAAalB,GAAShtD,EAAQztB,EAAI,GAC7B07E,EAAL,CAGA,GAAIC,EAAY,CACZ,MAAMC,EAAaD,EAAW59D,GAAa29D,EAAa39D,GAExDw9D,EAAOv7E,GAAoB,IAAf47E,GAAoBD,EAAWN,GAAaK,EAAaL,IAAcO,EAAa,CACpG,CACAJ,EAAGx7E,GAAMy7E,EAA2BE,EAA6B1iE,EAAKsiE,EAAOv7E,EAAI,MAAQiZ,EAAKsiE,EAAOv7E,IAAM,GAAKu7E,EAAOv7E,EAAI,GAAKu7E,EAAOv7E,IAAM,EAA5Fu7E,EAAOv7E,EAAI,GAArCu7E,EAAOv7E,EAN9B,EAtEJ,SAAwBytB,EAAQ8tD,EAAQC,GACxC,MAAMF,EAAY7tD,EAAOzuB,OACzB,IAAI68E,EAAQC,EAAOC,EAAMC,EAAkBN,EACvCC,EAAalB,GAAShtD,EAAQ,GAClC,IAAI,IAAIztB,EAAI,EAAGA,EAAIs7E,EAAY,IAAKt7E,EAChC07E,EAAeC,EACfA,EAAalB,GAAShtD,EAAQztB,EAAI,GAC7B07E,GAAiBC,IAGlBrV,EAAaiV,EAAOv7E,GAAI,EAAGw6E,IAC3BgB,EAAGx7E,GAAKw7E,EAAGx7E,EAAI,GAAK,GAGxB67E,EAASL,EAAGx7E,GAAKu7E,EAAOv7E,GACxB87E,EAAQN,EAAGx7E,EAAI,GAAKu7E,EAAOv7E,GAC3Bg8E,EAAmB5+E,KAAK2P,IAAI8uE,EAAQ,GAAKz+E,KAAK2P,IAAI+uE,EAAO,GACrDE,GAAoB,IAGxBD,EAAO,EAAI3+E,KAAK+7B,KAAK6iD,GACrBR,EAAGx7E,GAAK67E,EAASE,EAAOR,EAAOv7E,GAC/Bw7E,EAAGx7E,EAAI,GAAK87E,EAAQC,EAAOR,EAAOv7E,KAE1C,CAsDIi8E,CAAexuD,EAAQ8tD,EAAQC,GArDnC,SAAyB/tD,EAAQ+tD,EAAIz9D,EAAY,KAC7C,MAAMs9D,EAAYX,GAAa38D,GACzBu9D,EAAY7tD,EAAOzuB,OACzB,IAAIu2E,EAAOkG,EAAaC,EACpBC,EAAalB,GAAShtD,EAAQ,GAClC,IAAI,IAAIztB,EAAI,EAAGA,EAAIs7E,IAAat7E,EAAE,CAI9B,GAHAy7E,EAAcC,EACdA,EAAeC,EACfA,EAAalB,GAAShtD,EAAQztB,EAAI,IAC7B07E,EACD,SAEJ,MAAM/tD,EAAS+tD,EAAa39D,GACtB6P,EAAS8tD,EAAaL,GACxBI,IACAlG,GAAS5nD,EAAS8tD,EAAY19D,IAAc,EAC5C29D,EAAa,MAAM39D,KAAe4P,EAAS4nD,EAC3CmG,EAAa,MAAML,KAAeztD,EAAS2nD,EAAQiG,EAAGx7E,IAEtD27E,IACApG,GAASoG,EAAW59D,GAAa4P,GAAU,EAC3C+tD,EAAa,MAAM39D,KAAe4P,EAAS4nD,EAC3CmG,EAAa,MAAML,KAAeztD,EAAS2nD,EAAQiG,EAAGx7E,GAE9D,CACJ,CA6BIk8E,CAAgBzuD,EAAQ+tD,EAAIz9D,EAChC,CACA,SAASo+D,GAAgB7a,EAAIhkE,EAAKD,GAC9B,OAAOD,KAAKC,IAAID,KAAKE,IAAIgkE,EAAIjkE,GAAMC,EACvC,CA8DI,SAAS2kC,GAAem6C,GACxB,IAAIz4D,EAASy4D,EAAQC,WAIrB,OAHI14D,GAAgC,wBAAtBA,EAAO8sD,aACjB9sD,EAASA,EAAO24D,MAEb34D,CACX,CAII,SAAS44D,GAAcC,EAAY97C,EAAM+7C,GACzC,IAAIC,EAUJ,MAT0B,iBAAfF,GACPE,EAAgBnwE,SAASiwE,EAAY,KACJ,IAA7BA,EAAWhxD,QAAQ,OAEnBkxD,EAAgBA,EAAgB,IAAMh8C,EAAK27C,WAAWI,KAG1DC,EAAgBF,EAEbE,CACX,CACA,MAAMC,GAAoBr5D,GAAUA,EAAQs5D,cAAcC,YAAYF,iBAAiBr5D,EAAS,MAChG,SAASC,GAASsU,EAAIud,GAClB,OAAOunC,GAAiB9kD,GAAIilD,iBAAiB1nC,EACjD,CACA,MAAMxZ,GAAY,CACd,MACA,QACA,SACA,QAEJ,SAASmhD,GAAmBC,EAAQnuD,EAAOouD,GACvC,MAAMj4C,EAAS,CAAC,EAChBi4C,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAI,IAAIj9E,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACtB,MAAMs6B,EAAMsB,GAAU57B,GACtBglC,EAAO1K,GAAO63B,WAAW6qB,EAAOnuD,EAAQ,IAAMyL,EAAM2iD,KAAY,CACpE,CAGA,OAFAj4C,EAAO7Z,MAAQ6Z,EAAOniB,KAAOmiB,EAAOriB,MACpCqiB,EAAO9Z,OAAS8Z,EAAOtiB,IAAMsiB,EAAOpiB,OAC7BoiB,CACX,CACA,MA8EMk4C,GAAUlgF,GAAII,KAAKL,MAAU,GAAJC,GAAU,GAkE/BqjC,GAA+B,WACrC,IAAI88C,GAAmB,EACvB,IACI,MAAMnmE,EAAU,CACRspB,cAEA,OADA68C,GAAmB,GACZ,CACX,GAEJ3rE,OAAOwtB,iBAAiB,OAAQ,KAAMhoB,GACtCxF,OAAO0tB,oBAAoB,OAAQ,KAAMloB,EAC7C,CAAE,MAAO1Y,GAET,CACA,OAAO6+E,CACX,CAfyC,GAgCrC,SAASlyB,GAAanqD,EAAIC,EAAI4N,EAAGkK,GACjC,MAAO,CACH1X,EAAGL,EAAGK,EAAIwN,GAAK5N,EAAGI,EAAIL,EAAGK,GACzBoc,EAAGzc,EAAGyc,EAAI5O,GAAK5N,EAAGwc,EAAIzc,EAAGyc,GAEjC,CAyFA,SAAS6/D,GAAWhoC,GAChB,MAAiB,UAAbA,EACO,CACHioC,QAAS9rD,EACT+rD,QAAStL,EACTtC,UAAWte,GAGZ,CACHisB,QAASx1B,EACTy1B,QAAS,CAACp/E,EAAGC,IAAID,EAAIC,EACrBuxE,UAAYvuE,GAAIA,EAExB,CACA,SAASo8E,IAAiB,MAAEnsE,EAAM,IAAE8G,EAAI,MAAEgI,EAAM,KAAEpL,EAAK,MAAE+Z,IACrD,MAAO,CACHzd,MAAOA,EAAQ8O,EACfhI,IAAKA,EAAMgI,EACXpL,KAAMA,IAASoD,EAAM9G,EAAQ,GAAK8O,GAAU,EAC5C2O,QAER,CA8BC,SAAS0lC,GAAcvgC,EAASvG,EAAQ8+B,GACrC,IAAKA,EACD,MAAO,CACHv4B,GAGR,MAAM,SAAEohB,EAAWhkC,MAAOosE,EAAatlE,IAAKulE,GAAclxB,EACpDrsC,EAAQuN,EAAOzuB,QACf,QAAEs+E,EAAQ,QAAED,EAAQ,UAAE3N,GAAe0N,GAAWhoC,IAChD,MAAEhkC,EAAM,IAAE8G,EAAI,KAAEpD,EAAK,MAAE+Z,GAtCjC,SAAoBmF,EAASvG,EAAQ8+B,GACjC,MAAM,SAAEnX,EAAWhkC,MAAOosE,EAAatlE,IAAKulE,GAAclxB,GACpD,QAAE8wB,EAAQ,UAAE3N,GAAe0N,GAAWhoC,GACtCl1B,EAAQuN,EAAOzuB,OACrB,IACIgB,EAAGuY,GADH,MAAEnH,EAAM,IAAE8G,EAAI,KAAEpD,GAAUkf,EAE9B,GAAIlf,EAAM,CAGN,IAFA1D,GAAS8O,EACThI,GAAOgI,EACHlgB,EAAI,EAAGuY,EAAO2H,EAAOlgB,EAAIuY,GACpB8kE,EAAQ3N,EAAUjiD,EAAOrc,EAAQ8O,GAAOk1B,IAAYooC,EAAYC,KADpCz9E,EAIjCoR,IACA8G,IAEJ9G,GAAS8O,EACThI,GAAOgI,CACX,CAIA,OAHIhI,EAAM9G,IACN8G,GAAOgI,GAEJ,CACH9O,QACA8G,MACApD,OACA+Z,MAAOmF,EAAQnF,MAEvB,CAU4C6uD,CAAW1pD,EAASvG,EAAQ8+B,GAC9DvnB,EAAS,GACf,IAEIrtB,EAAO+V,EAAOiwD,EAFdC,GAAS,EACTC,EAAW,KAMf,IAAI,IAAI79E,EAAIoR,EAAOiP,EAAOjP,EAAOpR,GAAKkY,IAAOlY,EACzC0tB,EAAQD,EAAOztB,EAAIkgB,GACfwN,EAAMG,OAGVlW,EAAQ+3D,EAAUhiD,EAAM0nB,IACpBz9B,IAAUgmE,IAGdC,EAASP,EAAQ1lE,EAAO6lE,EAAYC,GACnB,OAAbI,IAZgBD,GAFEP,EAAQG,EAAYG,EAAWhmE,IAA6C,IAAnC2lE,EAAQE,EAAYG,MAe/EE,EAA0C,IAA/BP,EAAQ3lE,EAAO6lE,GAAoBx9E,EAAIqgB,GAErC,OAAbw9D,KAdgBD,GAF6B,IAA7BN,EAAQG,EAAU9lE,IAAgB0lE,EAAQI,EAAUE,EAAWhmE,MAiB/EqtB,EAAOlyB,KAAKyqE,GAAiB,CACzBnsE,MAAOysE,EACP3lE,IAAKlY,EACL8U,OACAoL,QACA2O,WAEJgvD,EAAW,MAEfx9D,EAAOrgB,EACP29E,EAAYhmE,IAWhB,OATiB,OAAbkmE,GACA74C,EAAOlyB,KAAKyqE,GAAiB,CACzBnsE,MAAOysE,EACP3lE,MACApD,OACAoL,QACA2O,WAGDmW,CACX,CA6JA,SAAS84C,GAAU9mE,GACf,MAAO,CACHgY,gBAAiBhY,EAAQgY,gBACzBy5B,eAAgBzxC,EAAQyxC,eACxBhY,WAAYz5B,EAAQy5B,WACpBE,iBAAkB35B,EAAQ25B,iBAC1B2W,gBAAiBtwC,EAAQswC,gBACzBj4B,YAAarY,EAAQqY,YACrBH,YAAalY,EAAQkY,YAE7B,CACA,SAAS6uD,GAAalvD,EAAOmvD,GACzB,IAAKA,EACD,OAAO,EAEX,MAAM75D,EAAQ,GACR85D,EAAW,SAASvnE,EAAKiB,GAC3B,OAAKi9D,EAAoBj9D,IAGpBwM,EAAMka,SAAS1mB,IAChBwM,EAAMrR,KAAK6E,GAERwM,EAAMqH,QAAQ7T,IALVA,CAMf,EACA,OAAOs9D,KAAKC,UAAUrmD,EAAOovD,KAAchJ,KAAKC,UAAU8I,EAAWC,EACzE,CAEAnhF,EAAQ60B,QAAUA,EAClB70B,EAAQ80E,SAAWA,EACnB90E,EAAQ+0B,GAAKA,EACb/0B,EAAQ60E,MAAQA,EAChB70E,EAAQg1E,WAAaA,EACrBh1E,EAAQ+0E,YAAcA,EACtB/0E,EAAQozB,IAAMA,EACdpzB,EAAQi1E,cAAgBA,EACxBj1E,EAAQ+pE,MAAQA,GAChB/pE,EAAQ+rC,UAvmCJ,SAAmBq1C,EAAQ91C,EAAOle,GAClC,MAAM,IAAE5sB,EAAI,IAAED,GAAS6gF,EACjBx/C,EAASvM,EAAYiW,GAAQ/qC,EAAMC,GAAO,GAC1C6gF,EAAW,CAACxmE,EAAO5E,IAAMmX,GAAyB,IAAVvS,EAAc,EAAIA,EAAQ5E,EACxE,MAAO,CACHzV,IAAK6gF,EAAS7gF,GAAMF,KAAKwqB,IAAI8W,IAC7BrhC,IAAK8gF,EAAS9gF,EAAKqhC,GAE3B,EAgmCA5hC,EAAQ8xC,YAliDJ,SAAqBn+B,EAAOg+B,EAAOtjB,GACnC,MAAMyW,EAAmBnxB,EAAMqxB,wBACzBs8C,EAAsB,IAAVjzD,EAAc/tB,KAAKC,IAAI8tB,EAAQ,EAAG,IAAO,EAC3D,OAAO/tB,KAAKL,OAAO0xC,EAAQ2vC,GAAax8C,GAAoBA,EAAmBw8C,CACnF,EA+hDAthF,EAAQi3C,eAhmEmB,CAAC/N,EAAO50B,EAAO8G,IAAgB,UAAV8tB,EAAoB50B,EAAkB,QAAV40B,EAAkB9tB,GAAO9G,EAAQ8G,GAAO,EAimEpHpb,EAAQy0B,cAAgBA,EACxBz0B,EAAQk1E,WAAaA,EACrBl1E,EAAQwqB,aA/pEJ,SAAsBxV,GACtB,MAAMY,EAAM,IAAIkoC,IAAI9oC,GACpB,OAAIY,EAAIkF,OAAS9F,EAAM9S,OACZ8S,EAEJ1R,MAAM4M,KAAK0F,EACtB,EA0pEA5V,EAAQ0/C,eAhhCJ,SAASA,EAAe7Z,EAAOjf,EAAS26D,EAAU5hC,GAClD,MAAMt4B,EAAQ,CACVU,YAAY,EACZk1B,OAAQpX,EACR27C,SAAU56D,EACV66D,UAAWF,EACX//C,OAAQ,IAAIsc,IACZ5C,aAAcA,GAAarV,EAAO8Z,GAClClV,WAAa5rB,GAAM6gC,EAAe7Z,EAAOhnB,EAAK0iE,EAAU5hC,GACxDhI,SAAWD,GAAQgI,EAAe7Z,EAAM8R,SAASD,GAAQ9wB,EAAS26D,EAAU5hC,IAEhF,OAAO,IAAIu8B,MAAM70D,EAAO,CAGpB80D,eAAe,CAAChlE,EAAQC,YACbD,EAAOC,UACPyuB,EAAMzuB,IACN,GAIX3B,IAAI,CAAC0B,EAAQC,EAAMsqE,IACRrF,GAAQllE,EAAQC,GAAM,IA6DzC,SAA6BD,EAAQC,EAAMsqE,GACvC,MAAM,OAAEzkC,EAAO,SAAEukC,EAAS,UAAEC,EAAYvmC,aAAcjC,GAAiB9hC,EACvE,IAAI0D,EAAQoiC,EAAO7lC,GAYnB,OAVIkoC,EAAWzkC,IAAUo+B,EAAYmG,aAAahoC,KAC9CyD,EAWR,SAA4BzD,EAAMuqE,EAAUxqE,EAAQuqE,GAChD,MAAM,OAAEzkC,EAAO,SAAEukC,EAAS,UAAEC,EAAU,OAAEjgD,GAAYrqB,EACpD,GAAIqqB,EAAOtrB,IAAIkB,GACX,MAAM,IAAIwiB,MAAM,uBAAyBt2B,MAAM4M,KAAKsxB,GAAQmX,KAAK,MAAQ,KAAOvhC,GAEpFoqB,EAAOvrB,IAAImB,GACX,IAAIyD,EAAQ8mE,EAASH,EAAUC,GAAaC,GAM5C,OALAlgD,EAAO9qB,OAAOU,GACVmlE,GAAiBnlE,EAAMyD,KAEvBA,EAAQ2hE,GAAkBv/B,EAAO++B,QAAS/+B,EAAQ7lC,EAAMyD,IAErDA,CACX,CAxBgB+mE,CAAmBxqE,EAAMyD,EAAO1D,EAAQuqE,IAEhDn+E,EAAQsX,IAAUA,EAAM3Y,SACxB2Y,EAsBR,SAAuBzD,EAAMyD,EAAO1D,EAAQkoC,GACxC,MAAM,OAAEpC,EAAO,SAAEukC,EAAS,UAAEC,EAAYvmC,aAAcjC,GAAiB9hC,EACvE,QAA8B,IAAnBqqE,EAAS9lE,OAAyB2jC,EAAYjoC,GACrD,OAAOyD,EAAM2mE,EAAS9lE,MAAQb,EAAM3Y,QACjC,GAAIoX,EAASuB,EAAM,IAAK,CAE3B,MAAMwO,EAAMxO,EACNiI,EAASm6B,EAAO++B,QAAQ99D,QAAQvb,GAAIA,IAAM0mB,IAChDxO,EAAQ,GACR,IAAK,MAAM5F,KAAQoU,EAAI,CACnB,MAAM41B,EAAWu9B,GAAkB15D,EAAQm6B,EAAQ7lC,EAAMnC,GACzD4F,EAAM7E,KAAK0pC,EAAeT,EAAUuiC,EAAUC,GAAaA,EAAUrqE,GAAO6hC,GAChF,CACJ,CACA,OAAOp+B,CACX,CArCgBgnE,CAAczqE,EAAMyD,EAAO1D,EAAQ8hC,EAAYoG,cAEvDk9B,GAAiBnlE,EAAMyD,KAEvBA,EAAQ6kC,EAAe7kC,EAAO2mE,EAAUC,GAAaA,EAAUrqE,GAAO6hC,IAEnEp+B,CACX,CA5E6CinE,CAAoB3qE,EAAQC,EAAMsqE,KAKvEhF,yBAAyB,CAACvlE,EAAQC,IACvBD,EAAO+jC,aAAakB,QAAUugC,QAAQzmE,IAAI2vB,EAAOzuB,GAAQ,CAC5D66C,YAAY,EACZD,cAAc,QACdxvD,EAAYm6E,QAAQD,yBAAyB72C,EAAOzuB,GAI5D2gC,eAAe,IACJ4kC,QAAQ5kC,eAAelS,GAIlC3vB,IAAI,CAACiB,EAAQC,IACFulE,QAAQzmE,IAAI2vB,EAAOzuB,GAI9BylE,QAAQ,IACGF,QAAQE,QAAQh3C,GAI3BjwB,IAAI,CAACuB,EAAQC,EAAMyD,KACfgrB,EAAMzuB,GAAQyD,SACP1D,EAAOC,IACP,IAGnB,EAy9BApX,EAAQysD,eA52CJ,SAAwB5tC,EAAK+sC,EAAUz0C,EAAQ4qE,GAC/C,IAAKn2B,EACD,OAAO/sC,EAAIu3B,OAAOj/B,EAAO9S,EAAG8S,EAAOsJ,GAEvC5B,EAAImjE,cAAcD,EAAOn2B,EAASq2B,KAAOr2B,EAASs2B,KAAMH,EAAOn2B,EAASu2B,KAAOv2B,EAASw2B,KAAML,EAAO5qE,EAAO+qE,KAAO/qE,EAAO8qE,KAAMF,EAAO5qE,EAAOirE,KAAOjrE,EAAOgrE,KAAMhrE,EAAO9S,EAAG8S,EAAOsJ,EACvL,EAw2CAzgB,EAAQkuD,qBAjYJ,SAA8BlqD,EAAIC,EAAI4N,EAAGkK,GACzC,MAAMsmE,EAAM,CACRh+E,EAAGL,EAAGk+E,KACNzhE,EAAGzc,EAAGo+E,MAEJE,EAAM,CACRj+E,EAAGJ,EAAGg+E,KACNxhE,EAAGxc,EAAGk+E,MAEJ/gF,EAAI+sD,GAAanqD,EAAIq+E,EAAKxwE,GAC1BxQ,EAAI8sD,GAAak0B,EAAKC,EAAKzwE,GAC3BvQ,EAAI6sD,GAAam0B,EAAKr+E,EAAI4N,GAC1BtQ,EAAI4sD,GAAa/sD,EAAGC,EAAGwQ,GACvBrQ,EAAI2sD,GAAa9sD,EAAGC,EAAGuQ,GAC7B,OAAOs8C,GAAa5sD,EAAGC,EAAGqQ,EAC9B,EAmXA7R,EAAQy3D,cAAgBA,GACxBz3D,EAAQ+tD,eA3MP,SAAwBp3B,EAAM84B,GAC3B,MAAMvnB,EAAS,GACT2lB,EAAWl3B,EAAKk3B,SACtB,IAAI,IAAI3qD,EAAI,EAAGA,EAAI2qD,EAAS3rD,OAAQgB,IAAI,CACpC,MAAMq/E,EAAM9qB,GAAc5J,EAAS3qD,GAAIyzB,EAAKhG,OAAQ8+B,GAChD8yB,EAAIrgF,QACJgmC,EAAOlyB,QAAQusE,EAEvB,CACA,OAAOr6C,CACX,EAkMAloC,EAAQ46C,YAAcA,EACtB56C,EAAQ8tD,iBAvIP,SAA0Bn3B,EAAM6rD,GAC7B,MAAM7xD,EAASgG,EAAKhG,OACd+F,EAAWC,EAAKzc,QAAQwc,SACxBtT,EAAQuN,EAAOzuB,OACrB,IAAKkhB,EACD,MAAO,GAEX,MAAMpL,IAAS2e,EAAK5e,OACd,MAAEzD,EAAM,IAAE8G,GAnEnB,SAAyBuV,EAAQvN,EAAOpL,EAAM0e,GAC3C,IAAIpiB,EAAQ,EACR8G,EAAMgI,EAAQ,EAClB,GAAIpL,IAAS0e,EACT,KAAMpiB,EAAQ8O,IAAUuN,EAAOrc,GAAOyc,MAClCzc,IAGR,KAAMA,EAAQ8O,GAASuN,EAAOrc,GAAOyc,MACjCzc,IAMJ,IAJAA,GAAS8O,EACLpL,IACAoD,GAAO9G,GAEL8G,EAAM9G,GAASqc,EAAOvV,EAAMgI,GAAO2N,MACrC3V,IAGJ,OADAA,GAAOgI,EACA,CACH9O,QACA8G,MAER,CA4C6BqnE,CAAgB9xD,EAAQvN,EAAOpL,EAAM0e,GAC9D,OAaH,SAAuBC,EAAMk3B,EAAUl9B,EAAQ6xD,GAC5C,OAAKA,GAAmBA,EAAe/3C,YAAe9Z,EAKzD,SAAyBgG,EAAMk3B,EAAUl9B,EAAQ6xD,GAC9C,MAAME,EAAe/rD,EAAKxd,OAAO8J,aAC3B0/D,EAAY3B,GAAUrqD,EAAKzc,UACzB8c,cAAehb,EAAe9B,SAAS,SAAEwc,IAAiBC,EAC5DvT,EAAQuN,EAAOzuB,OACfgmC,EAAS,GACf,IAAIg5C,EAAYyB,EACZruE,EAAQu5C,EAAS,GAAGv5C,MACpBpR,EAAIoR,EACR,SAASsuE,EAASjgF,EAAGnB,EAAGpB,EAAGyiF,GACvB,MAAMC,EAAMpsD,GAAY,EAAI,EAC5B,GAAI/zB,IAAMnB,EAAV,CAIA,IADAmB,GAAKygB,EACCuN,EAAOhuB,EAAIygB,GAAO2N,MACpBpuB,GAAKmgF,EAET,KAAMnyD,EAAOnvB,EAAI4hB,GAAO2N,MACpBvvB,GAAKshF,EAELngF,EAAIygB,GAAU5hB,EAAI4hB,IAClB8kB,EAAOlyB,KAAK,CACR1B,MAAO3R,EAAIygB,EACXhI,IAAK5Z,EAAI4hB,EACTpL,KAAM5X,EACN2xB,MAAO8wD,IAEX3B,EAAY2B,EACZvuE,EAAQ9S,EAAI4hB,EAhBhB,CAkBJ,CACA,IAAK,MAAM8T,KAAW22B,EAAS,CAC3Bv5C,EAAQoiB,EAAWpiB,EAAQ4iB,EAAQ5iB,MACnC,IACIyd,EADAxO,EAAOoN,EAAOrc,EAAQ8O,GAE1B,IAAIlgB,EAAIoR,EAAQ,EAAGpR,GAAKg0B,EAAQ9b,IAAKlY,IAAI,CACrC,MAAMshE,EAAK7zC,EAAOztB,EAAIkgB,GACtB2O,EAAQivD,GAAUwB,EAAe/3C,WAAW3jB,GAAc47D,EAAc,CACpE7xE,KAAM,UACNkyE,GAAIx/D,EACJvf,GAAIwgE,EACJwe,aAAc9/E,EAAI,GAAKkgB,EACvB6/D,YAAa//E,EAAIkgB,EACjBpH,mBAEAilE,GAAalvD,EAAOmvD,IACpB0B,EAAStuE,EAAOpR,EAAI,EAAGg0B,EAAQlf,KAAMkpE,GAEzC39D,EAAOihD,EACP0c,EAAYnvD,CAChB,CACIzd,EAAQpR,EAAI,GACZ0/E,EAAStuE,EAAOpR,EAAI,EAAGg0B,EAAQlf,KAAMkpE,EAE7C,CACA,OAAOh5C,CACX,CA3DWg7C,CAAgBvsD,EAAMk3B,EAAUl9B,EAAQ6xD,GAFpC30B,CAGf,CAjBes1B,CAAcxsD,GADR,IAAbD,EAC2B,CACvB,CACIpiB,QACA8G,MACApD,SAjDf,SAAuB2Y,EAAQrc,EAAO/T,EAAKyX,GACxC,MAAMoL,EAAQuN,EAAOzuB,OACfgmC,EAAS,GACf,IAEI9sB,EAFAmT,EAAOja,EACPiP,EAAOoN,EAAOrc,GAElB,IAAI8G,EAAM9G,EAAQ,EAAG8G,GAAO7a,IAAO6a,EAAI,CACnC,MAAM/E,EAAMsa,EAAOvV,EAAMgI,GACrB/M,EAAI0a,MAAQ1a,EAAIE,KACXgN,EAAKwN,OACN/Y,GAAO,EACPkwB,EAAOlyB,KAAK,CACR1B,MAAOA,EAAQ8O,EACfhI,KAAMA,EAAM,GAAKgI,EACjBpL,SAEJ1D,EAAQia,EAAOlY,EAAIE,KAAO6E,EAAM,OAGpCmT,EAAOnT,EACHmI,EAAKwN,OACLzc,EAAQ8G,IAGhBmI,EAAOlN,CACX,CAQA,OAPa,OAATkY,GACA2Z,EAAOlyB,KAAK,CACR1B,MAAOA,EAAQ8O,EACfhI,IAAKmT,EAAOnL,EACZpL,SAGDkwB,CACX,CAqB+Bk7C,CAAczyD,EAAQrc,EAFrC8G,EAAM9G,EAAQ8G,EAAMgI,EAAQhI,IACjBub,EAAKwC,WAAuB,IAAV7kB,GAAe8G,IAAQgI,EAAQ,GAHjEuN,EAAQ6xD,EAKnB,EAmHAxiF,EAAQ6/C,gBAAkBA,GAC1B7/C,EAAQ0pE,eAt2EJ,SAAwBrlE,GACxB,IAAK6X,EAAe7X,GAChB,OAEJ,IAAI7C,EAAI,EACJkQ,EAAI,EACR,KAAMpR,KAAKL,MAAMoE,EAAI7C,GAAKA,IAAM6C,GAC5B7C,GAAK,GACLkQ,IAEJ,OAAOA,CACX,EA41EA1R,EAAQqjF,YA3/EJ,SAAqB3rC,EAAO78B,EAAO+wC,EAAUyoB,QAC/B7xE,IAAVqY,GACAsF,QAAQC,KAAKs3B,EAAQ,MAAQkU,EAAW,gCAAkCyoB,EAAU,YAE5F,EAw/EAr0E,EAAQk7C,aAAeA,GACvBl7C,EAAQgnD,eApmFJ,SAAwBs8B,EAAIC,GAC5B,IAAIrgF,EAAGuY,EAAMmiB,EAAItR,EACjB,IAAKg3D,IAAOC,GAAMD,EAAGphF,SAAWqhF,EAAGrhF,OAC/B,OAAO,EAEX,IAAIgB,EAAI,EAAGuY,EAAO6nE,EAAGphF,OAAQgB,EAAIuY,IAAQvY,EAGrC,GAFA06B,EAAK0lD,EAAGpgF,GACRopB,EAAKi3D,EAAGrgF,GACJ06B,EAAG5hB,eAAiBsQ,EAAGtQ,cAAgB4hB,EAAGliB,QAAU4Q,EAAG5Q,MACvD,OAAO,EAGf,OAAO,CACX,EAwlFA1b,EAAQ0tC,WAz5EJ,SAAoB7yB,GACpB,MAAMqtB,EAAS,GACT7L,EAAO/7B,KAAK+7B,KAAKxhB,GACvB,IAAI3X,EACJ,IAAIA,EAAI,EAAGA,EAAIm5B,EAAMn5B,IACb2X,EAAQ3X,GAAM,IACdglC,EAAOlyB,KAAK9S,GACZglC,EAAOlyB,KAAK6E,EAAQ3X,IAO5B,OAJIm5B,KAAiB,EAAPA,IACV6L,EAAOlyB,KAAKqmB,GAEhB6L,EAAOzd,MAAK,CAACrpB,EAAGC,IAAID,EAAIC,IAAGiU,MACpB4yB,CACX,EA24EAloC,EAAQixE,eAnvEJ,SAAwBj3D,EAAQxZ,EAAKD,GACrC,IAAI+T,EAAQ,EACR8G,EAAMpB,EAAO9X,OACjB,KAAMoS,EAAQ8G,GAAOpB,EAAO1F,GAAS9T,GACjC8T,IAEJ,KAAM8G,EAAM9G,GAAS0F,EAAOoB,EAAM,GAAK7a,GACnC6a,IAEJ,OAAO9G,EAAQ,GAAK8G,EAAMpB,EAAO9X,OAAS8X,EAAOwpC,MAAMlvC,EAAO8G,GAAOpB,CACzE,EA0uEAha,EAAQmlC,eAAiBA,GACzBnlC,EAAQ82B,iCAxmEJ,SAA0Cza,EAAMsU,EAAQkG,GACxD,MAAM47B,EAAa9hC,EAAOzuB,OAC1B,IAAIoS,EAAQ,EACR8O,EAAQqvC,EACZ,GAAIp2C,EAAKiH,QAAS,CACd,MAAM,OAAEjG,EAAO,QAAEgB,GAAahC,EACxBkB,EAAOF,EAAOE,MACd,IAAE/c,EAAI,IAAED,EAAI,WAAE2kB,EAAW,WAAEC,GAAgB9H,EAAO+H,gBACpDF,IACA5Q,EAAQg7B,EAAYhvC,KAAKE,IACzBs6B,EAAazc,EAAShB,EAAOE,KAAM/c,GAAKy6B,GACxCpE,EAAqB47B,EAAa33B,EAAanK,EAAQpT,EAAMF,EAAO0N,iBAAiBvqB,IAAMy6B,IAAK,EAAGw3B,EAAa,IAGhHrvC,EADA+B,EACQmqB,EAAYhvC,KAAKC,IACzBu6B,EAAazc,EAAShB,EAAOE,KAAMhd,GAAK,GAAM26B,GAAK,EACnDrE,EAAqB,EAAIiE,EAAanK,EAAQpT,EAAMF,EAAO0N,iBAAiBxqB,IAAM,GAAM26B,GAAK,GAAI5mB,EAAOm+C,GAAcn+C,EAE9Gm+C,EAAan+C,CAE7B,CACA,MAAO,CACHA,QACA8O,QAER,EAglEApjB,EAAQ6xC,YA7yEJ,SAAqBh3B,GACrB,OAAOy0B,EAAYz0B,GAAQ,MAAO,MACtC,EA4yEA7a,EAAQ+qD,WAAaA,EACrB/qD,EAAQ4nD,cAh8EJ,SAAuBpmD,GACvB,MAAkB,YAAXA,EAAEqP,MAAiC,UAAXrP,EAAEqP,MAA+B,gBAAXrP,EAAEqP,IAC3D,EA+7EA7Q,EAAQknC,gBAnoBJ,WACA,MAAyB,oBAAXxyB,QAA8C,oBAAb4vB,QACnD,EAkoBAtkC,EAAQ27B,eAAiBA,GACzB37B,EAAQsvC,YAAcA,EACtBtvC,EAAQmtE,aA7mDR,SAAsBtuD,EAAKiqB,EAAM06C,EAAen8D,GAE5C,IAAI3F,GADJ2F,EAAQA,GAAS,CAAC,GACD3F,KAAO2F,EAAM3F,MAAQ,CAAC,EACnC2vB,EAAKhqB,EAAMmqB,eAAiBnqB,EAAMmqB,gBAAkB,GACpDnqB,EAAMyhB,OAASA,IACfpnB,EAAO2F,EAAM3F,KAAO,CAAC,EACrB2vB,EAAKhqB,EAAMmqB,eAAiB,GAC5BnqB,EAAMyhB,KAAOA,GAEjBjqB,EAAI62B,OACJ72B,EAAIiqB,KAAOA,EACX,IAAIgxC,EAAU,EACd,MAAMr+D,EAAO+nE,EAActhF,OAC3B,IAAIgB,EAAGmM,EAAGwhC,EAAM4yC,EAAOC,EACvB,IAAIxgF,EAAI,EAAGA,EAAIuY,EAAMvY,IAGjB,GAFAugF,EAAQD,EAActgF,GAElBugF,SAA0ClgF,EAAQkgF,IAE/C,GAAIlgF,EAAQkgF,GAGf,IAAIp0E,EAAI,EAAGwhC,EAAO4yC,EAAMvhF,OAAQmN,EAAIwhC,EAAMxhC,IACtCq0E,EAAcD,EAAMp0E,GAEhBq0E,SAAsDngF,EAAQmgF,KAC9D5J,EAAUxoC,GAAazyB,EAAK6C,EAAM2vB,EAAIyoC,EAAS4J,SARvD5J,EAAUxoC,GAAazyB,EAAK6C,EAAM2vB,EAAIyoC,EAAS2J,GAavD5kE,EAAI+2B,UACJ,MAAMrE,EAAQF,EAAGnvC,OAAS,EAC1B,GAAIqvC,EAAQiyC,EAActhF,OAAQ,CAC9B,IAAIgB,EAAI,EAAGA,EAAIquC,EAAOruC,WACXwe,EAAK2vB,EAAGnuC,IAEnBmuC,EAAG7nB,OAAO,EAAG+nB,EACjB,CACA,OAAOuoC,CACX,EAskDA95E,EAAQiwE,QAAUA,EAClBjwE,EAAQ86B,aAAeA,EACvB96B,EAAQsxC,aAAeA,GACvBtxC,EAAQi0E,QAAUA,EAClBj0E,EAAQs0E,UAAYA,EACpBt0E,EAAQs0D,gBAAkBA,EAC1Bt0D,EAAQm4B,4BAx0BR,SAAqC9b,EAAMqF,EAAMpN,EAAO8O,GACpD,MAAM,OAAE/F,GAAYhB,GACd,IAAEzC,EAAK,KAAS7I,KAAKkO,SACrB/B,EAAS,IAAI5Z,MAAM8f,GACzB,IAAIlgB,EAAGuY,EAAMC,EAAOzG,EACpB,IAAI/R,EAAI,EAAGuY,EAAO2H,EAAOlgB,EAAIuY,IAAQvY,EACjCwY,EAAQxY,EAAIoR,EACZW,EAAOyM,EAAKhG,GACZwB,EAAOha,GAAK,CACRf,EAAGkb,EAAO8F,MAAMc,EAAiBhP,EAAM2E,GAAM8B,IAGrD,OAAOwB,CACX,EA4zBAld,EAAQmuD,aAAeA,GACvBnuD,EAAQ+oD,kBAAoBA,GAC5B/oD,EAAQ66B,cA7wEkB,CAACg4C,EAAOj5D,EAAKiB,IAAQo1D,EAAQ4C,EAAOh4D,GAAQa,GAAQm3D,EAAMn3D,GAAO9B,IAAQiB,IA8wEnG7a,EAAQ+2B,oBA3lEJ,SAA6B1a,GAC7B,MAAM,OAAEiF,EAAO,OAAEE,EAAO,aAAEmiE,GAAkBtnE,EACtCunE,EAAY,CACdC,KAAMviE,EAAO9gB,IACbsjF,KAAMxiE,EAAO/gB,IACbwjF,KAAMviE,EAAOhhB,IACbwjF,KAAMxiE,EAAOjhB,KAEjB,IAAKojF,EAED,OADAtnE,EAAKsnE,aAAeC,GACb,EAEX,MAAMvkD,EAAUskD,EAAaE,OAASviE,EAAO9gB,KAAOmjF,EAAaG,OAASxiE,EAAO/gB,KAAOojF,EAAaI,OAASviE,EAAOhhB,KAAOmjF,EAAaK,OAASxiE,EAAOjhB,IAEzJ,OADA4O,OAAOqB,OAAOmzE,EAAcC,GACrBvkD,CACX,EA6kEAr/B,EAAQ6pE,mBAt5EJ,SAA4BtsC,EAAOpmB,EAAQmhC,GAC3C,IAAIp1C,EAAGuY,EAAMZ,EACb,IAAI3X,EAAI,EAAGuY,EAAO8hB,EAAMr7B,OAAQgB,EAAIuY,EAAMvY,IACtC2X,EAAQ0iB,EAAMr6B,GAAGo1C,GACZ7pB,MAAM5T,KACP1D,EAAO3W,IAAMF,KAAKE,IAAI2W,EAAO3W,IAAKqa,GAClC1D,EAAO5W,IAAMD,KAAKC,IAAI4W,EAAO5W,IAAKsa,GAG9C,EA84EA7a,EAAQy0E,UAAYA,EACpBz0E,EAAQiuD,sBA3aJ,SAA+BjqD,EAAIC,EAAI4N,EAAGkK,GAC1C,MAAO,CACH1X,EAAGL,EAAGK,EAAIwN,GAAK5N,EAAGI,EAAIL,EAAGK,GACzBoc,EAAY,WAAT1E,EAAoBlK,EAAI,GAAM7N,EAAGyc,EAAIxc,EAAGwc,EAAa,UAAT1E,EAAmBlK,EAAI,EAAI7N,EAAGyc,EAAIxc,EAAGwc,EAAI5O,EAAI,EAAI5N,EAAGwc,EAAIzc,EAAGyc,EAElH,EAuaAzgB,EAAQssD,eAj6CJ,SAAwBztC,EAAK+sC,EAAUz0C,EAAQ4qE,EAAMhmE,GACrD,IAAK6vC,EACD,OAAO/sC,EAAIu3B,OAAOj/B,EAAO9S,EAAG8S,EAAOsJ,GAEvC,GAAa,WAAT1E,EAAmB,CACnB,MAAMkoE,GAAYr4B,EAASvnD,EAAI8S,EAAO9S,GAAK,EAC3Cwa,EAAIu3B,OAAO6tC,EAAUr4B,EAASnrC,GAC9B5B,EAAIu3B,OAAO6tC,EAAU9sE,EAAOsJ,EAChC,KAAoB,UAAT1E,KAAuBgmE,EAC9BljE,EAAIu3B,OAAOwV,EAASvnD,EAAG8S,EAAOsJ,GAE9B5B,EAAIu3B,OAAOj/B,EAAO9S,EAAGunD,EAASnrC,GAElC5B,EAAIu3B,OAAOj/B,EAAO9S,EAAG8S,EAAOsJ,EAChC,EAo5CAzgB,EAAQk8D,OAtoEW,CAAChzB,EAAOnjB,EAAMF,EAAOg1C,IAE7B3xB,KADO2xB,EAAM,OAAS,SACJh1C,EAAkB,WAAVqjB,GAAsBnjB,EAAOF,GAAS,EAAIE,EAqoE/E/lB,EAAQmpC,mBA/oEwBD,GAAkB,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SAgpEjGlpC,EAAQ4tD,2BAzrBJ,SAAoCj9B,EAAQzW,EAASmM,EAAMrO,EAAMiJ,GACjE,IAAI/d,EAAGuY,EAAMmV,EAAOszD,EAKpB,GAHIhqE,EAAQwc,WACR/F,EAASA,EAAOzS,QAAQsmD,IAAMA,EAAGzzC,QAEE,aAAnC7W,EAAQsyC,uBACR8xB,GAAoB3tD,EAAQ1P,OACzB,CACH,IAAIsC,EAAOvL,EAAO2Y,EAAOA,EAAOzuB,OAAS,GAAKyuB,EAAO,GACrD,IAAIztB,EAAI,EAAGuY,EAAOkV,EAAOzuB,OAAQgB,EAAIuY,IAAQvY,EACzC0tB,EAAQD,EAAOztB,GACfghF,EAAgBrG,GAAYt6D,EAAMqN,EAAOD,EAAOrwB,KAAKE,IAAI0C,EAAI,EAAGuY,GAAQzD,EAAO,EAAI,IAAMyD,GAAOvB,EAAQqyC,SACxG37B,EAAMqxD,KAAOiC,EAAct4B,SAASvnD,EACpCusB,EAAMuxD,KAAO+B,EAAct4B,SAASnrC,EACpCmQ,EAAMsxD,KAAOgC,EAAcj0D,KAAK5rB,EAChCusB,EAAMwxD,KAAO8B,EAAcj0D,KAAKxP,EAChC8C,EAAOqN,CAEf,CACI1W,EAAQqzC,iBA3ChB,SAAyB58B,EAAQtK,GAC7B,IAAInjB,EAAGuY,EAAMmV,EAAOuzD,EAAQC,EACxBC,EAAa1oD,GAAehL,EAAO,GAAItK,GAC3C,IAAInjB,EAAI,EAAGuY,EAAOkV,EAAOzuB,OAAQgB,EAAIuY,IAAQvY,EACzCkhF,EAAaD,EACbA,EAASE,EACTA,EAAanhF,EAAIuY,EAAO,GAAKkgB,GAAehL,EAAOztB,EAAI,GAAImjB,GACtD89D,IAGLvzD,EAAQD,EAAOztB,GACXkhF,IACAxzD,EAAMqxD,KAAO5C,GAAgBzuD,EAAMqxD,KAAM57D,EAAKN,KAAMM,EAAKR,OACzD+K,EAAMuxD,KAAO9C,GAAgBzuD,EAAMuxD,KAAM97D,EAAKT,IAAKS,EAAKP,SAExDu+D,IACAzzD,EAAMsxD,KAAO7C,GAAgBzuD,EAAMsxD,KAAM77D,EAAKN,KAAMM,EAAKR,OACzD+K,EAAMwxD,KAAO/C,GAAgBzuD,EAAMwxD,KAAM/7D,EAAKT,IAAKS,EAAKP,SAGpE,CAwBQynC,CAAgB58B,EAAQtK,EAEhC,EAmqBArmB,EAAQ+wD,mBA9zCJ,SAA4BlyC,EAAK8wC,GACjC,MAAM,EAAEtrD,EAAE,EAAEoc,EAAE,EAAEzd,EAAE,EAAE3C,EAAE,OAAEqwB,GAAYi/B,EAEpC9wC,EAAImX,IAAI3xB,EAAIqsB,EAAO8/B,QAAS/vC,EAAIiQ,EAAO8/B,QAAS9/B,EAAO8/B,SAAU37B,EAASE,GAAI,GAE9ElW,EAAIu3B,OAAO/xC,EAAGoc,EAAIpgB,EAAIqwB,EAAOggC,YAE7B7xC,EAAImX,IAAI3xB,EAAIqsB,EAAOggC,WAAYjwC,EAAIpgB,EAAIqwB,EAAOggC,WAAYhgC,EAAOggC,WAAY37B,EAAIF,GAAS,GAE1FhW,EAAIu3B,OAAO/xC,EAAIrB,EAAI0tB,EAAOigC,YAAalwC,EAAIpgB,GAE3Cwe,EAAImX,IAAI3xB,EAAIrB,EAAI0tB,EAAOigC,YAAalwC,EAAIpgB,EAAIqwB,EAAOigC,YAAajgC,EAAOigC,YAAa97B,EAAS,GAAG,GAEhGhW,EAAIu3B,OAAO/xC,EAAIrB,EAAGyd,EAAIiQ,EAAO+/B,UAE7B5xC,EAAImX,IAAI3xB,EAAIrB,EAAI0tB,EAAO+/B,SAAUhwC,EAAIiQ,EAAO+/B,SAAU//B,EAAO+/B,SAAU,GAAI57B,GAAS,GAEpFhW,EAAIu3B,OAAO/xC,EAAIqsB,EAAO8/B,QAAS/vC,EACnC,EA6yCAzgB,EAAQwpE,aAAeA,EACvBxpE,EAAQupE,YAr6ER,SAAqBllE,EAAGkkC,GACpB,MAAM+7C,EAAUhkF,KAAKL,MAAMoE,GAC3B,OAAOigF,EAAU/7C,GAAWlkC,GAAKigF,EAAU/7C,GAAWlkC,CAC1D,EAm6EArE,EAAQorC,SApqFJ,SAAkBj3B,EAAIuV,EAAM66D,GAC5B,GAAIpwE,GAAyB,mBAAZA,EAAGM,KAChB,OAAON,EAAGqqD,MAAM+lB,EAAS76D,EAEjC,EAiqFA1pB,EAAQoiD,YA7kDJ,SAAqBpgB,EAAQnjB,IAC7BA,EAAMA,GAAOmjB,EAAO/e,WAAW,OAC3ByyB,OAGJ72B,EAAI2lE,iBACJ3lE,EAAI4lE,UAAU,EAAG,EAAGziD,EAAO3T,MAAO2T,EAAO5T,QACzCvP,EAAI+2B,SACR,EAskDA51C,EAAQ02C,SAr7CR,SAAkB73B,EAAKwH,GACnBxH,EAAI62B,OACJ72B,EAAIq3B,YACJr3B,EAAI8wC,KAAKtpC,EAAKN,KAAMM,EAAKT,IAAKS,EAAKR,MAAQQ,EAAKN,KAAMM,EAAKP,OAASO,EAAKT,KACzE/G,EAAIqH,MACR,EAi7CAlmB,EAAQsQ,MAAQA,EAChBtQ,EAAQqR,MA5gER,SAAewJ,GACX,OAAOi9D,EAAoBj9D,GAASA,EAAQ,IAAI64D,EAAQ/iE,MAAMkK,EAClE,EA2gEA7a,EAAQ8mB,cAAgBA,GACxB9mB,EAAQ6hD,SAzqEJ,SAAkB1tC,EAAI2D,GACtB,IAAI4sE,EACJ,OAAO,YAAYh7D,GAOf,OANI5R,GACA6sE,aAAaD,GACbA,EAAUE,WAAWzwE,EAAI2D,EAAO4R,IAEhCvV,EAAGqqD,MAAMztD,KAAM2Y,GAEZ5R,CACX,CACJ,EA+pEA9X,EAAQwZ,SAAWA,GACnBxZ,EAAQwnB,QAn/ES3M,QAAyB,IAAVA,EAo/EhC7a,EAAQi5C,YAAcA,GACtBj5C,EAAQo+D,sBAAwBA,EAChCp+D,EAAQkvD,UA9kDR,SAAmBrwC,EAAK3E,EAAS7V,EAAGoc,GAEhCq7C,GAAgBj9C,EAAK3E,EAAS7V,EAAGoc,EAAG,KACxC,EA4kDAzgB,EAAQ87D,gBAAkBA,GAC1B97D,EAAQkhC,KA5qFR,SAAc2jD,EAAU1wE,EAAIowE,EAASppE,GACjC,IAAIjY,EAAGjB,EAAKiN,EACZ,GAAI3L,EAAQshF,GAER,GADA5iF,EAAM4iF,EAAS3iF,OACXiZ,EACA,IAAIjY,EAAIjB,EAAM,EAAGiB,GAAK,EAAGA,IACrBiR,EAAGM,KAAK8vE,EAASM,EAAS3hF,GAAIA,QAGlC,IAAIA,EAAI,EAAGA,EAAIjB,EAAKiB,IAChBiR,EAAGM,KAAK8vE,EAASM,EAAS3hF,GAAIA,QAGnC,GAAIoW,EAASurE,GAGhB,IAFA31E,EAAOC,OAAOD,KAAK21E,GACnB5iF,EAAMiN,EAAKhN,OACPgB,EAAI,EAAGA,EAAIjB,EAAKiB,IAChBiR,EAAGM,KAAK8vE,EAASM,EAAS31E,EAAKhM,IAAKgM,EAAKhM,GAGrD,EAypFAlD,EAAQyX,QAAUA,EAClBzX,EAAQ4qC,gBArsFJ,SAAyB/vB,EAAO+4D,GAChC,OAAO13D,EAAerB,GAASA,EAAQ+4D,CAC3C,EAosFA5zE,EAAQ+wC,WAptER,SAAoB+zC,EAAWC,EAAWC,GACtC,OAAOD,EAAY,IAAMD,EAAY,MAAQE,CACjD,EAmtEAhlF,EAAQk2B,aAAeA,EACvBl2B,EAAQ48B,kBA/4ER,SAA2BqoD,EAAaC,GACpC,MAAMC,EAAsBD,EAAW7gF,EAAI4gF,EAAY5gF,EACjD+gF,EAAsBF,EAAWzkE,EAAIwkE,EAAYxkE,EACjD4kE,EAA2B/kF,KAAK+7B,KAAK8oD,EAAsBA,EAAsBC,EAAsBA,GAC7G,IAAI5wD,EAAQl0B,KAAKglF,MAAMF,EAAqBD,GAI5C,OAHI3wD,GAAS,GAAMO,IACfP,GAASpB,GAEN,CACHoB,QACAiI,SAAU4oD,EAElB,EAo4EArlF,EAAQ+3E,cAAgBA,EACxB/3E,EAAQsiC,eA/iBR,SAAwBN,EAAQujD,EAASC,EAAU9zD,GAC/C,MAAMK,EAAQ8tD,GAAiB79C,GACzBqJ,EAAU40C,GAAmBluD,EAAO,UACpCmD,EAAWuqD,GAAc1tD,EAAMmD,SAAU8M,EAAQ,gBAAkB8yC,EACnE3/C,EAAYsqD,GAAc1tD,EAAMoD,UAAW6M,EAAQ,iBAAmB8yC,EACtE2Q,EAhCV,SAA0BzjD,EAAQ3T,EAAOD,GACrC,IAAI8G,EAAUC,EACd,QAAc3yB,IAAV6rB,QAAkC7rB,IAAX4rB,EAAsB,CAC7C,MAAM8W,EAAYC,GAAenD,GACjC,GAAKkD,EAGE,CACH,MAAMyqB,EAAOzqB,EAAUwgD,wBACjBC,EAAiB9F,GAAiB36C,GAClC0gD,EAAkB3F,GAAmB0F,EAAgB,SAAU,SAC/DE,EAAmB5F,GAAmB0F,EAAgB,WAC5Dt3D,EAAQshC,EAAKthC,MAAQw3D,EAAiBx3D,MAAQu3D,EAAgBv3D,MAC9DD,EAASuhC,EAAKvhC,OAASy3D,EAAiBz3D,OAASw3D,EAAgBx3D,OACjE8G,EAAWuqD,GAAckG,EAAezwD,SAAUgQ,EAAW,eAC7D/P,EAAYsqD,GAAckG,EAAexwD,UAAW+P,EAAW,eACnE,MAXI7W,EAAQ2T,EAAOqD,YACfjX,EAAS4T,EAAO8jD,YAWxB,CACA,MAAO,CACHz3D,QACAD,SACA8G,SAAUA,GAAY4/C,EACtB3/C,UAAWA,GAAa2/C,EAEhC,CAQ0BiR,CAAiB/jD,EAAQujD,EAASC,GACxD,IAAI,MAAEn3D,EAAM,OAAED,GAAYq3D,EAC1B,GAAwB,gBAApB1zD,EAAMsU,UAA6B,CACnC,MAAM2/C,EAAU/F,GAAmBluD,EAAO,SAAU,SAC9Ck0D,EAAWhG,GAAmBluD,EAAO,WAC3C1D,GAAS43D,EAAS53D,MAAQ23D,EAAQ33D,MAClCD,GAAU63D,EAAS73D,OAAS43D,EAAQ53D,MACxC,CAeA,OAdAC,EAAQ/tB,KAAKC,IAAI,EAAG8tB,EAAQgd,EAAQhd,OACpCD,EAAS9tB,KAAKC,IAAI,EAAGmxB,EAAcrD,EAAQqD,EAActD,EAASid,EAAQjd,QAC1EC,EAAQ+xD,GAAO9/E,KAAKE,IAAI6tB,EAAO6G,EAAUuwD,EAAcvwD,WACvD9G,EAASgyD,GAAO9/E,KAAKE,IAAI4tB,EAAQ+G,EAAWswD,EAActwD,YACtD9G,IAAUD,IAGVA,EAASgyD,GAAO/xD,EAAQ,UAEO7rB,IAAZ+iF,QAAsC/iF,IAAbgjF,IAC1B9zD,GAAe+zD,EAAcr3D,QAAUA,EAASq3D,EAAcr3D,SAChFA,EAASq3D,EAAcr3D,OACvBC,EAAQ+xD,GAAO9/E,KAAKuX,MAAMuW,EAASsD,KAEhC,CACHrD,QACAD,SAER,EAihBApuB,EAAQm9B,oBAjmBJ,SAA6BrnB,EAAOnC,GACpC,GAAI,WAAYmC,EACZ,OAAOA,EAEX,MAAM,OAAEksB,EAAO,wBAAEgD,GAA6BrxB,EACxCoe,EAAQ8tD,GAAiB79C,GACzBkkD,EAAgC,eAApBn0D,EAAMsU,UAClB4/C,EAAWhG,GAAmBluD,EAAO,WACrCi0D,EAAU/F,GAAmBluD,EAAO,SAAU,UAC9C,EAAE1tB,EAAE,EAAEoc,EAAE,IAAEid,GAnChB,SAA2Bl8B,EAAGwgC,GAC9B,MAAMmkD,EAAU3kF,EAAE2kF,QACZ15C,EAAS05C,GAAWA,EAAQjkF,OAASikF,EAAQ,GAAK3kF,GAClD,QAAEqxB,EAAQ,QAAEC,GAAa2Z,EAC/B,IACIpoC,EAAGoc,EADHid,GAAM,EAEV,GAXiB,EAACr5B,EAAGoc,EAAGtJ,KAAU9S,EAAI,GAAKoc,EAAI,MAAQtJ,IAAWA,EAAOivE,YAWrEC,CAAaxzD,EAASC,EAAStxB,EAAE2V,QACjC9S,EAAIwuB,EACJpS,EAAIqS,MACD,CACH,MAAM68B,EAAO3tB,EAAO0jD,wBACpBrhF,EAAIooC,EAAO65C,QAAU32B,EAAK5pC,KAC1BtF,EAAIgsB,EAAO85C,QAAU52B,EAAK/pC,IAC1B8X,GAAM,CACV,CACA,MAAO,CACHr5B,IACAoc,IACAid,MAER,CAe6B8oD,CAAkB1wE,EAAOksB,GAC5C+3C,EAAUkM,EAASlgE,MAAQ2X,GAAOsoD,EAAQjgE,MAC1Ci0D,EAAUiM,EAASrgE,KAAO8X,GAAOsoD,EAAQpgE,KAC/C,IAAI,MAAEyI,EAAM,OAAED,GAAYza,EAK1B,OAJIuyE,IACA73D,GAAS43D,EAAS53D,MAAQ23D,EAAQ33D,MAClCD,GAAU63D,EAAS73D,OAAS43D,EAAQ53D,QAEjC,CACH/pB,EAAG/D,KAAKL,OAAOoE,EAAI01E,GAAW1rD,EAAQ2T,EAAO3T,MAAQ2W,GACrDvkB,EAAGngB,KAAKL,OAAOwgB,EAAIu5D,GAAW5rD,EAAS4T,EAAO5T,OAAS4W,GAE/D,EA6kBAhlC,EAAQ+6D,cAzYR,SAAuBF,EAAK4rB,EAAOp4D,GAC/B,OAAOwsC,EAxCmB,SAAS4rB,EAAOp4D,GAC1C,MAAO,CACHhqB,EAAGA,GACQoiF,EAAQA,EAAQp4D,EAAQhqB,EAEnCo3D,SAAUz4D,GACNqrB,EAAQrrB,CACZ,EACAqxC,UAAWnL,GACO,WAAVA,EACOA,EAEM,UAAVA,EAAoB,OAAS,QAExC2yB,MAAM,CAACx3D,EAAGwW,IACCxW,EAAIwW,EAEfogD,WAAW,CAAC52D,EAAGy1D,IACJz1D,EAAIy1D,EAGvB,CAmBiB4sB,CAAsBD,EAAOp4D,GAjBnC,CACHhqB,EAAGA,GACQA,EAEXo3D,SAAUz4D,GAAI,EACdqxC,UAAWnL,GACAA,EAEX2yB,MAAM,CAACx3D,EAAGwW,IACCxW,EAAIwW,EAEfogD,WAAW,CAAC52D,EAAGsiF,IACJtiF,EAMnB,EAwYArE,EAAQymB,SAAWA,GACnBzmB,EAAQuD,QAAUA,EAClBvD,EAAQs/C,WAAaA,EACrBt/C,EAAQ8tB,cAAgBA,EACxB9tB,EAAQq3B,SAp8ER,SAAkBz0B,GACd,OAAQ6rB,MAAM4mC,WAAWzyD,KAAO0kE,SAAS1kE,EAC7C,EAm8EA5C,EAAQkc,eAAiBA,EACzBlc,EAAQsZ,SAAWA,EACnBtZ,EAAQ83E,oBAAsBA,EAC9B93E,EAAQsiB,kBA/xER,SAA2Bib,EAAO4E,GAC1B5E,EAAMqpD,SACNrpD,EAAMqpD,SAAS7yE,UAAUiC,KAAKmsB,IAGlChzB,OAAO4iD,eAAex0B,EAAO,WAAY,CACrCy0B,cAAc,EACdC,YAAY,EACZp3C,MAAO,CACH9G,UAAW,CACPouB,MAIZwzC,EAAYzhE,SAAS0F,IACjB,MAAMZ,EAAS,UAAY4hC,EAAYhhC,GACjCqS,EAAOsR,EAAM3jB,GACnBzK,OAAO4iD,eAAex0B,EAAO3jB,EAAK,CAC9Bo4C,cAAc,EACdC,YAAY,EACZp3C,SAAU6O,GACN,MAAM7Q,EAAMoT,EAAKuyC,MAAMztD,KAAM2Y,GAM7B,OALA6T,EAAMqpD,SAAS7yE,UAAUG,SAAS2yE,IACA,mBAAnBA,EAAO7tE,IACd6tE,EAAO7tE,MAAW0Q,EACtB,IAEG7Q,CACX,GACF,IAEV,EAiwEA7Y,EAAQmqE,MAAQA,EAChBnqE,EAAQm4C,MAAQA,EAChBn4C,EAAQu9C,QAAUA,EAClBv9C,EAAQspE,QAv+EJ,SAAiBjlD,GACjB,MAAMyiE,EAAexmF,KAAKL,MAAMokB,GAChCA,EAAQmlD,EAAanlD,EAAOyiE,EAAcziE,EAAQ,KAAQyiE,EAAeziE,EACzE,MAAM0iE,EAAYzmF,KAAK2P,IAAI,GAAI3P,KAAKuX,MAAMsyD,EAAM9lD,KAC1C2iE,EAAW3iE,EAAQ0iE,EAEzB,OADqBC,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,IAC3DD,CAC1B,EAi+EA/mF,EAAQ0hE,KAxwFJ,WACO,EAwwFX1hE,EAAQs7D,sBArZR,SAA+Bz8C,EAAKooE,GAChC,IAAIl1D,EAAOm1D,EACO,QAAdD,GAAqC,QAAdA,IACvBl1D,EAAQlT,EAAImjB,OAAOjQ,MACnBm1D,EAAW,CACPn1D,EAAMiuD,iBAAiB,aACvBjuD,EAAMo1D,oBAAoB,cAE9Bp1D,EAAMq1D,YAAY,YAAaH,EAAW,aAC1CpoE,EAAIwoE,kBAAoBH,EAEhC,EA2YAlnF,EAAQo5C,UAAYA,GACpBp5C,EAAQumC,aA1eJ,SAAsB/f,EAAS8xB,GAC/B,MAAMz9B,EAAQ4L,GAASD,EAAS8xB,GAC1B8iC,EAAUvgE,GAASA,EAAMwgE,MAAM,qBACrC,OAAOD,GAAWA,EAAQ,QAAK54E,CACnC,EAueAxC,EAAQ42C,WA14CJ,SAAoB/3B,EAAKmT,EAAM3tB,EAAGoc,EAAGqoB,EAAM5tB,EAAO,CAAC,GACnD,MAAMukD,EAAQl8D,EAAQyuB,GAAQA,EAAO,CACjCA,GAEEqkB,EAASn7B,EAAK65B,YAAc,GAA0B,KAArB75B,EAAK25B,YAC5C,IAAI3xC,EAAGyzB,EAIP,IAHA9X,EAAI62B,OACJ72B,EAAIiqB,KAAOA,EAAKsI,OAtDpB,SAAuBvyB,EAAK3D,GACpBA,EAAKq6B,aACL12B,EAAIqsC,UAAUhwC,EAAKq6B,YAAY,GAAIr6B,EAAKq6B,YAAY,IAEnDznB,EAAc5S,EAAKkW,WACpBvS,EAAI3a,OAAOgX,EAAKkW,UAEhBlW,EAAK7J,QACLwN,EAAIoT,UAAY/W,EAAK7J,OAErB6J,EAAKm5B,YACLx1B,EAAIw1B,UAAYn5B,EAAKm5B,WAErBn5B,EAAKs5B,eACL31B,EAAI21B,aAAet5B,EAAKs5B,aAEhC,CAuCI8yC,CAAczoE,EAAK3D,GACfhY,EAAI,EAAGA,EAAIu8D,EAAMv9D,SAAUgB,EAC3ByzB,EAAO8oC,EAAMv8D,GACTgY,EAAK+5B,UACL8lC,GAAal8D,EAAK3D,EAAK+5B,UAEvBoB,IACIn7B,EAAK25B,cACLh2B,EAAIsT,YAAcjX,EAAK25B,aAEtB/mB,EAAc5S,EAAK65B,eACpBl2B,EAAIyT,UAAYpX,EAAK65B,aAEzBl2B,EAAI0oE,WAAW5wD,EAAMtyB,EAAGoc,EAAGvF,EAAKga,WAEpCrW,EAAIu9C,SAASzlC,EAAMtyB,EAAGoc,EAAGvF,EAAKga,UAC9BolD,GAAaz7D,EAAKxa,EAAGoc,EAAGkW,EAAMzb,GAC9BuF,GAAKoE,OAAOikB,EAAKE,YAErBnqB,EAAI+2B,SACR,EA+2CA51C,EAAQwU,iBAAmBA,EAC3BxU,EAAQsX,QAhuCJ,SAAiBkwE,EAAQ5gE,EAASlL,EAAO+rE,GACzC,IACIvkF,EAAGuY,EAAMZ,EADT6sE,GAAY,EAEhB,IAAIxkF,EAAI,EAAGuY,EAAO+rE,EAAOtlF,OAAQgB,EAAIuY,IAAQvY,EAEzC,GADA2X,EAAQ2sE,EAAOtkF,QACDV,IAAVqY,SAGYrY,IAAZokB,GAA0C,mBAAV/L,IAChCA,EAAQA,EAAM+L,GACd8gE,GAAY,QAEFllF,IAAVkZ,GAAuBnY,EAAQsX,KAC/BA,EAAQA,EAAMa,EAAQb,EAAM3Y,QAC5BwlF,GAAY,QAEFllF,IAAVqY,GAIA,OAHI4sE,IAASC,IACTD,EAAKC,WAAY,GAEd7sE,CAGnB,EA0sCA7a,EAAQikB,iBAAmBA,EAC3BjkB,EAAQq8D,qBAhZR,SAA8Bx9C,EAAKqoE,QACd1kF,IAAb0kF,WACOroE,EAAIwoE,kBACXxoE,EAAImjB,OAAOjQ,MAAMq1D,YAAY,YAAaF,EAAS,GAAIA,EAAS,IAExE,EA4YAlnF,EAAQkiD,YAniBJ,SAAqBvuC,EAAOg0E,EAAYC,GACxC,MAAMC,EAAaF,GAAc,EAC3BG,EAAexnF,KAAKuX,MAAMlE,EAAMya,OAASy5D,GACzCE,EAAcznF,KAAKuX,MAAMlE,EAAM0a,MAAQw5D,GAC7Cl0E,EAAMya,OAAS9tB,KAAKuX,MAAMlE,EAAMya,QAChCza,EAAM0a,MAAQ/tB,KAAKuX,MAAMlE,EAAM0a,OAC/B,MAAM2T,EAASruB,EAAMquB,OAQrB,OAJIA,EAAOjQ,QAAU61D,IAAe5lD,EAAOjQ,MAAM3D,SAAW4T,EAAOjQ,MAAM1D,SACrE2T,EAAOjQ,MAAM3D,OAAS,GAAGza,EAAMya,WAC/B4T,EAAOjQ,MAAM1D,MAAQ,GAAG1a,EAAM0a,YAE9B1a,EAAMqxB,0BAA4B6iD,GAAc7lD,EAAO5T,SAAW05D,GAAgB9lD,EAAO3T,QAAU05D,KACnGp0E,EAAMqxB,wBAA0B6iD,EAChC7lD,EAAO5T,OAAS05D,EAChB9lD,EAAO3T,MAAQ05D,EACfp0E,EAAMkL,IAAImpE,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,EAGf,EA8gBA7nF,EAAQ6kD,UAthFU,CAACzjD,EAAGC,KAClB,GAAID,EAAE0Z,OAASzZ,EAAEyZ,KACb,OAAO,EAEX,IAAK,MAAM7F,KAAQ7T,EACf,IAAKC,EAAE6U,IAAIjB,GACP,OAAO,EAGf,OAAO,CAAI,EA8gFfjV,EAAQmc,KAAOA,EACfnc,EAAQ69E,YAAcA,GACtB79E,EAAQs+E,oBAAsBA,GAC9Bt+E,EAAQujC,6BAA+BA,GACvCvjC,EAAQolC,UAvuEJ,SAAmBjxB,EAAIowE,GACvB,IAAI0D,EAAY,GACZC,GAAU,EACd,OAAO,YAAYx+D,GAEfu+D,EAAYv+D,EACPw+D,IACDA,GAAU,EACV1zE,EAAiBC,KAAKC,QAAQ,KAC1BwzE,GAAU,EACV/zE,EAAGqqD,MAAM+lB,EAAS0D,EAAU,IAGxC,CACJ,EA0tEAjoF,EAAQwvC,UAv8ER,SAAmB24C,GACf,OAAOA,GAAW,IAAMpzD,EAC5B,EAs8EA/0B,EAAQq1B,YAAcA,EACtBr1B,EAAQ+oC,OA7wCJ,SAAgB7uB,EAAS2uB,GACzB3uB,EAAUA,GAAW,CAAC,EACtB2uB,EAAWA,GAAYrvB,GAASsvB,KAChC,IAAIhuB,EAAO8F,EAAe1G,EAAQY,KAAM+tB,EAAS/tB,MAC7B,iBAATA,IACPA,EAAOrL,SAASqL,EAAM,KAE1B,IAAIiX,EAAQnR,EAAe1G,EAAQ6X,MAAO8W,EAAS9W,OAC/CA,KAAW,GAAKA,GAAOspD,MAAMH,MAC7B/6D,QAAQC,KAAK,kCAAoC2R,EAAQ,KACzDA,OAAQvvB,GAEZ,MAAMsmC,EAAO,CACTswC,OAAQx4D,EAAe1G,EAAQk/D,OAAQvwC,EAASuwC,QAChDpwC,WAAYmyC,GAAav6D,EAAe1G,EAAQ8uB,WAAYH,EAASG,YAAaluB,GAClFA,OACAiX,QACAzgB,OAAQsP,EAAe1G,EAAQ5I,OAAQu3B,EAASv3B,QAChD8/B,OAAQ,IAGZ,OADAtI,EAAKsI,OAASyoC,GAAa/wC,GACpBA,CACX,EAwvCA9oC,EAAQ65E,aAAeA,GACvB75E,EAAQm7E,aAAeA,GACvBn7E,EAAQogC,UA5xCJ,SAAmBvlB,GACnB,MAAM1J,EAAMg/C,GAAOt1C,GAGnB,OAFA1J,EAAIkd,MAAQld,EAAI4U,KAAO5U,EAAI0U,MAC3B1U,EAAIid,OAASjd,EAAIyU,IAAMzU,EAAI2U,OACpB3U,CACX,EAwxCAnR,EAAQ0zB,aAtuFa,CAAC7Y,EAAOg5D,IAA6B,iBAAVh5D,GAAsBA,EAAMi5D,SAAS,KAAOze,WAAWx6C,GAAS,KAAOA,EAAQg5D,EAuuF/H7zE,EAAQizB,UAj9ER,SAAmBm1D,GACf,OAAOA,GAAWrzD,EAAK,IAC3B,EAg9EA/0B,EAAQmwD,OAASA,GACjBnwD,EAAQqwD,cA/yCJ,SAAuBx1C,GACvB,OAAOkuC,GAAkBluC,EAAO,CAC5B,UACA,WACA,aACA,eAER,EAyyCA7a,EAAQihD,IAAMA,EACdjhD,EAAQ62C,WA5+CR,SAAoBh4B,GAChBA,EAAI+2B,SACR,EA2+CA51C,EAAQiiB,oBAhyER,SAA6Bsb,EAAO4E,GAChC,MAAMkmD,EAAO9qD,EAAMqpD,SACnB,IAAKyB,EACD,OAEJ,MAAMt0E,EAAYs0E,EAAKt0E,UACjB2H,EAAQ3H,EAAU2a,QAAQyT,IACjB,IAAXzmB,GACA3H,EAAUyV,OAAO9N,EAAO,GAExB3H,EAAU7R,OAAS,IAGvByzE,EAAYzhE,SAAS0F,WACV2jB,EAAM3jB,EAAI,WAEd2jB,EAAMqpD,SACjB,EAgxEA5mF,EAAQ4gB,eAAiBA,IClzFrB0nE,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBhmF,IAAjBimF,EACH,OAAOA,EAAazoF,QAGrB,IAAID,EAASuoF,EAAyBE,GAAY,CAGjDxoF,QAAS,CAAC,GAOX,OAHA0oF,EAAoBF,GAAU/zE,KAAK1U,EAAOC,QAASD,EAAQA,EAAOC,QAASuoF,GAGpExoF,EAAOC,OACf,oBCtBO,MAAM2oF,EACFhqE,cAAc9D,EAAera,EAAaD,GAC7C,OAAOD,KAAKE,IAAIF,KAAKC,IAAIsa,EAAOra,GAAMD,EAC1C,CAEOoe,4BAA4Bne,EAAaD,GAC5C,MAAMqoF,EAAUtoF,KAAKqnC,KAAKnnC,GACpBqoF,EAAWvoF,KAAKuX,MAAMtX,GAC5B,OAAOD,KAAKuX,MAAMvX,KAAKwoF,UAAYD,EAAWD,EAAU,IAAMA,CAClE,ECHG,MAAMG,EAgBTn4E,YAAYyV,EAAY2iE,EAA+B,IAfhD,KAAAC,QAAU,IAAI3lF,MACd,KAAA4lF,UAAoB,CACvBC,SAAU,GACVC,YAAa,GACbC,aAAc,GACdC,WAAY,GACZC,eAAgB,IAKZ,KAAAC,aAAe,EACf,KAAAC,oBAAsB,EAI1B14E,KAAKsV,KAAOA,EACZtV,KAAKi4E,qBAAuBA,EAE5Bj4E,KAAK24E,aACT,CAEWC,yBACP,OAAO54E,KAAKsV,KAAKvL,KAAO/J,KAAKsV,KAAKvL,OAAS/J,KAAK04E,mBACpD,CAEOx5D,OAEH,GADAlf,KAAKsV,KAAK0pD,MAAQ,EACQ,IAAtBh/D,KAAKy4E,eAAsBz4E,KAAK44E,mBAApC,CAMA,GAFA54E,KAAK04E,oBAAsB,EAED,IAAtB14E,KAAKy4E,aAAoB,CACzB,MAAMI,EAAc,CAAE1mF,EAAG5C,KAAKuX,MAAM9G,KAAKsV,KAAKvL,KAAO,GAAIzL,EAAG/O,KAAKuX,MAAM9G,KAAKsV,KAAKvL,KAAO,IAExF,IADqB/J,KAAKsV,KAAKwjE,WAAWD,GAEtC,MAAM,IAAIhwD,MAAM,+BAIxB,IAAK,IAAI12B,EAAI,EAAGA,EAAI6N,KAAKsV,KAAKvL,KAAM5X,IAChC,IAAK,IAAImM,EAAI,EAAGA,EAAI0B,KAAKsV,KAAKvL,KAAMzL,IAAK,CACrC,MAAMy6E,EAAQ,CAAE5mF,EAAGA,EAAGmM,EAAGA,GAEnB06E,EAAOh5E,KAAKsV,KAAK2jE,QAAQF,GAC/B,GAAKC,EAAL,CAIA,OAAQA,EAAKE,OACT,IAAK,WACGF,EAAKG,cAAgB,GACrBn5E,KAAKo5E,oBAAoBJ,EAAMD,GAEnC,MACJ,IAAK,SACD/4E,KAAKq5E,kBAAkBL,EAAMD,GAC7B,MACJ,IAAK,UACD/4E,KAAK04E,sBAIbM,EAAKM,qBAIbt5E,KAAKy4E,eAELz4E,KAAK24E,cACT,CAEQS,oBAAoBJ,EAAYD,GACpC,GAAIC,EAAKG,cAAgB,EACrBn5E,KAAKsV,KAAKikE,aAAaR,OACpB,CACH,MAAMS,EAAwBx5E,KAAKsV,KAAKmkE,yBAAyBV,GAC3DhB,EAASH,EAAU8B,qBAAqB,EAAG,KACjD,GAAKF,EAAsBroF,OAAS,GAAO4mF,GAAsC,IAA5B/3E,KAAKi4E,qBAA6B,CACnF,MAAMF,EAASH,EAAU8B,qBAAqB,EAAGF,EAAsBroF,OAAS,GAChF6O,KAAKsV,KAAKwjE,WAAWU,EAAsBzB,KAGvD,CAEQsB,kBAAkBL,EAAYD,GAC9BC,EAAKG,cAAgB,GACrBn5E,KAAKsV,KAAKqkE,YAAYZ,EAE9B,CAEOa,wBAAwB9vE,GAC3B9J,KAAKi4E,qBAAuBL,EAAUiC,OAAO/vE,EAAO,EAAG,EAC3D,CAEOkH,QACHhR,KAAKsV,KAAKwkE,aACV95E,KAAKsV,KAAK0pD,KAAO,EACjBh/D,KAAK+5E,eACL/5E,KAAKy4E,aAAe,CACxB,CAEQsB,eACJ/5E,KAAKk4E,QAAU,GACfl4E,KAAKm4E,UAAY,CACbC,SAAU,GACVC,YAAa,GACbC,aAAc,GACdC,WAAY,GACZC,eAAgB,IAEpBx4E,KAAK24E,aACT,CAEQA,cACJ34E,KAAKk4E,QAAQjzE,KAAKjF,KAAKsV,KAAK0kE,OAChC,CAEOC,kBACH,MAAM7B,EAAqB,GACrBC,EAAwB,GACxBC,EAAyB,GACzBC,EAAuB,GACvBC,EAA2B,GACjC,IAAI0B,EAAoB,EAgCxB,OA/BAl6E,KAAKk4E,QAAQ/0E,SAASmS,IAClB,IAAI6kE,EAAe,EACfC,EAAgB,EAChBC,EAAc,EAClB/kE,EAAKglE,MAAMn3E,SAASc,IAChBA,EAAMd,SAAS61E,IACX,OAAQA,EAAKE,OACT,IAAK,UACDiB,IACA,MACJ,IAAK,WACDC,IACA,MACJ,IAAK,SACDC,OAMX,IAEL,MAAME,EAAaH,EAAgBF,EACnC9B,EAASnzE,KAAKqQ,EAAK0pD,MACnBqZ,EAAYpzE,KAAKk1E,GACjB7B,EAAarzE,KAAKm1E,GAClB7B,EAAWtzE,KAAKo1E,GAChB7B,EAAevzE,KAAKs1E,GAAc,EAAIA,EAAa,GACnDL,EAAoBE,CAAa,IAG9B,CACHhC,SAAUA,EACVC,YAAaA,EACbC,aAAcA,EACdC,WAAYA,EACZC,eAAgBA,EAExB,EC1KG,MAAMgC,EAIT36E,YAAaq5E,EAAuB,UAAWC,EAAwB,GAH/D,KAAAsB,OAAwB,UACxB,KAAAC,eAAyB,EAG7B16E,KAAKy6E,OAASvB,EACdl5E,KAAK06E,eAAiBvB,CAC1B,CAEWD,YACP,OAAOl5E,KAAKy6E,MAChB,CAEWtB,oBACP,OAAOn5E,KAAK06E,cAChB,CAEOC,SACH,MAAoB,YAAhB36E,KAAKy6E,SAITz6E,KAAKy6E,OAAS,WACdz6E,KAAK06E,eAAiB,GACf,EACX,CAEOE,WACH,MAAoB,aAAhB56E,KAAKy6E,SAITz6E,KAAKy6E,OAAS,SACdz6E,KAAK06E,eAAiB,GACf,EACX,CAEOG,UACH,MAAoB,WAAhB76E,KAAKy6E,SAITz6E,KAAKy6E,OAAS,UACdz6E,KAAK06E,eAAiB,GACf,EACX,CAEO1pE,QACHhR,KAAKy6E,OAAS,UACdz6E,KAAK06E,eAAiB,CAC1B,CAEOpB,oBACHt5E,KAAK06E,gBACT,CAEOV,OACH,OAAO,IAAIQ,EAAKx6E,KAAKy6E,OAAQz6E,KAAK06E,eACtC,ECvDG,MAAMI,EAWTj7E,YAAYk7E,EAAwBhxE,EAAci1D,EAAcsb,GAHxD,KAAA1oB,MAAQ,EACR,KAAAopB,OAAS,IAAIzoF,MAGjByN,KAAK+6E,SAAWA,EAChB/6E,KAAK+J,KAAOA,EACZ/J,KAAKi7E,MAAQjc,EACbh/D,KAAKk7E,UAAUZ,EACnB,CAEQY,UAAUZ,GACdt6E,KAAKg7E,OAAS,IAAIzoF,MAClB,IAAK,IAAIJ,EAAI,EAAGA,EAAI6N,KAAK4xD,MAAOz/D,IAAK,CACjC6N,KAAKg7E,OAAO/1E,KAAK,IAAI1S,OACrB,IAAK,IAAI+L,EAAI,EAAGA,EAAI0B,KAAK4xD,MAAOtzD,IAAK,CACjC,MAAM06E,EAAOsB,GAASA,EAAMnoF,GAAGmM,GAAKg8E,EAAMnoF,GAAGmM,GAAG07E,OAAS,IAAIQ,EAC7Dx6E,KAAKg7E,OAAO7oF,GAAG8S,KAAK+zE,IAGhC,CAEWjvE,WACP,OAAO/J,KAAK4xD,KAChB,CAEW7nD,SAAKD,GACR9J,KAAK4xD,QAAU9nD,IAInBA,EAAQ8tE,EAAUiC,OAAO/vE,EAAOgxE,EAAKK,SAAUL,EAAKM,UACpDp7E,KAAK4xD,MAAiB,EAAR9nD,EAAaA,EAAQA,EAAQ,EAC3C9J,KAAKk7E,YACT,CAEWlc,WACP,OAAOh/D,KAAKi7E,KAChB,CAEWjc,SAAKl1D,GACZ9J,KAAKi7E,MAAQnxE,CACjB,CAEWwwE,YACP,OAAOt6E,KAAKg7E,MAChB,CAEOlB,aACH95E,KAAKg7E,OAAO73E,SAAQ2lD,IAChBA,EAAI3lD,SAAQ61E,GAAQA,EAAKhoE,SAAQ,IAErChR,KAAK2xC,QACT,CAEOmnC,WAAWC,SACd,MAAMC,EAAOh5E,KAAKi5E,QAAQF,GACpBsC,EAAwB,QAAd,EAAArC,aAAI,EAAJA,EAAM2B,gBAAQ,SAE9B,OADA36E,KAAK+6E,SAASO,WAAWtC,EAAMD,GACxBsC,CACX,CAEO9B,aAAaR,SAChB,MAAMC,EAAOh5E,KAAKi5E,QAAQF,GACpBsC,EAA0B,QAAhB,EAAArC,aAAI,EAAJA,EAAM4B,kBAAU,SAEhC,OADA56E,KAAK+6E,SAASO,WAAWtC,EAAMD,GACxBsC,CACX,CAEO1B,YAAYZ,SACf,MAAMC,EAAOh5E,KAAKi5E,QAAQF,GACpBsC,EAAyB,QAAf,EAAArC,aAAI,EAAJA,EAAM6B,iBAAS,SAE/B,OADA76E,KAAK+6E,SAASO,WAAWtC,EAAMD,GACxBsC,CACX,CAEO1pC,SACH3xC,KAAK+6E,SAASppC,OAAO3xC,KACzB,CAEOi5E,QAAQF,GACX,MAAM5mF,EAAIylF,EAAUiC,OAAOd,EAAM5mF,EAAG,EAAG6N,KAAKg7E,OAAO7pF,QAC7CmN,EAAIs5E,EAAUiC,OAAOd,EAAMz6E,EAAG,EAAG0B,KAAKg7E,OAAO,GAAG7pF,QAEtD,IACI,OAAO6O,KAAKg7E,OAAO7oF,GAAGmM,GACxB,SACE,OAAO,KAEf,CAEOm7E,yBAAyBV,GAC5B,MAAM5hD,EAAS,IAAI5kC,MAqBnB,MAnBA,CACI,CAAEJ,EAAG4mF,EAAM5mF,EAAGmM,EAAGy6E,EAAMz6E,EAAI,GAC3B,CAAEnM,EAAG4mF,EAAM5mF,EAAI,EAAGmM,EAAGy6E,EAAMz6E,EAAI,GAC/B,CAAEnM,EAAG4mF,EAAM5mF,EAAI,EAAGmM,EAAGy6E,EAAMz6E,GAC3B,CAAEnM,EAAG4mF,EAAM5mF,EAAI,EAAGmM,EAAGy6E,EAAMz6E,EAAI,GAC/B,CAAEnM,EAAG4mF,EAAM5mF,EAAGmM,EAAGy6E,EAAMz6E,EAAI,GAC3B,CAAEnM,EAAG4mF,EAAM5mF,EAAI,EAAGmM,EAAGy6E,EAAMz6E,EAAI,GAC/B,CAAEnM,EAAG4mF,EAAM5mF,EAAI,EAAGmM,EAAGy6E,EAAMz6E,GAC3B,CAAEnM,EAAG4mF,EAAM5mF,EAAI,EAAGmM,EAAGy6E,EAAMz6E,EAAI,IACjC6E,SAAS41E,IACP,IACQ/4E,KAAKg7E,OAAOjC,EAAM5mF,GAAG4mF,EAAMz6E,IAA8C,YAAxC0B,KAAKg7E,OAAOjC,EAAM5mF,GAAG4mF,EAAMz6E,GAAG46E,OAC/D/hD,EAAOlyB,KAAK8zE,GAElB,cAKC5hD,CACX,CAEO6iD,OACH,OAAO,IAAIc,EAAK96E,KAAK+6E,SAAU/6E,KAAK4xD,MAAO5xD,KAAKi7E,MAAOj7E,KAAKg7E,OAChE,EA5HwB,EAAAG,SAAW,EACX,EAAAC,SAAW,ICHhC,MAAMG,EAQT17E,cAII,GAXa,KAAA27E,YAAc,EAKvB,KAAAC,SAAmB,IAGvBz7E,KAAK07E,SAAWnoD,SAASkc,eAAe,UACxCzvC,KAAK8N,IAAM9N,KAAK07E,SAASxpE,WAAW,OAE/BlS,KAAK07E,WAAa17E,KAAK8N,IACxB,MAAM,IAAI+a,MAAM,gCAExB,CAEO8oB,OAAOr8B,GACVtV,KAAKy7E,UAAYz7E,KAAK07E,SAASp+D,MAAQtd,KAAKw7E,aAAelmE,EAAKvL,KAEhE/J,KAAK8N,IAAIoT,UAAY,OACrBlhB,KAAK8N,IAAI82B,SAAS,EAAG,EAAG5kC,KAAK07E,SAASp+D,MAAOtd,KAAK07E,SAASr+D,QAE3D,IAAK,IAAIlrB,EAAI,EAAGA,EAAImjB,EAAKvL,KAAM5X,IAC3B,IAAK,IAAImM,EAAI,EAAGA,EAAIgX,EAAKvL,KAAMzL,IAAK,CAChC,MAAMy6E,EAAQ,CAAE5mF,EAAGA,EAAGmM,EAAGA,GACzB0B,KAAKs7E,WAAWhmE,EAAK2jE,QAAQF,GAAQA,GAGjD,CAEOuC,WAAWtC,EAAmBD,GAC5BC,IAILh5E,KAAK8N,IAAIoT,UAAYlhB,KAAK27E,aAAa3C,GACvCh5E,KAAK8N,IAAI82B,SACLm0C,EAAMz6E,EAAI0B,KAAKy7E,SAAWz7E,KAAKw7E,YAC/BzC,EAAM5mF,EAAI6N,KAAKy7E,SAAWz7E,KAAKw7E,YAC/Bx7E,KAAKy7E,SAAWz7E,KAAKw7E,YACrBx7E,KAAKy7E,SAAWz7E,KAAKw7E,aAE7B,CAEQG,aAAa3C,GACjB,IAAKA,EACD,MAAO,UAGX,OAAQA,EAAKE,OACT,IAAK,WACD,MAAO,UACX,IAAK,SACD,MAAO,UACX,IAAK,UACD,MAAO,UACX,QACI,MAAO,UAEnB,EChEJ,MAAM,MAAEj3E,GAAU,EAAQ,KAQnB,MAAM25E,EAAb,cACqB,KAAAC,aAAe,IAAIN,EACnB,KAAAjmE,KAAO,IAAIwlE,EAAK96E,KAAK67E,aAAc,EAAG,GACtC,KAAAC,iBAAmB,IAAI9D,EAAiBh4E,KAAKsV,MAEvD,KAAAymE,aAAe,GACf,KAAAC,gBAAkB,EAEjB,KAAAh4E,SAAU,EACV,KAAAi4E,UAAY,EACZ,KAAAC,mBAAqB,EAsBrB,KAAAC,SAAYr4E,MACX9D,KAAKi8E,WAAan4E,EAAM9D,KAAKi8E,WAAiC,IAApBj8E,KAAK+7E,gBAChD/7E,KAAKi8E,UAAYn4E,EACjB9D,KAAK87E,iBAAiB58D,OAClBlf,KAAK87E,iBAAiBlD,qBACtB54E,KAAKwF,OACLxF,KAAKgR,SAGThR,KAAKg8E,mBAGLh8E,KAAKgE,SACLL,OAAOkhE,sBAAsB7kE,KAAKm8E,UA2D9C,CA3FWlzD,OACHjpB,KAAKsV,KAAKq8B,QACd,CAEOpuC,QACCvD,KAAKgE,UAIThE,KAAKsV,KAAKq8B,SACV3xC,KAAKo8E,qBAELp8E,KAAKgE,SAAU,EACnB,CAEQo4E,qBACJp8E,KAAKk8E,mBAAqBv4E,OAAOkhE,sBAAsB7kE,KAAKm8E,SAChE,CAmBO32E,OACHxF,KAAKq8E,oBAELr8E,KAAKgE,SAAU,CACnB,CAEQq4E,oBACJ14E,OAAO24E,qBAAqBt8E,KAAKk8E,oBACjCl8E,KAAKk8E,mBAAqB,CAC9B,CAEOlrE,QACHhR,KAAK87E,iBAAiB9qE,QACtBhR,KAAKg8E,gBAAkB,EACvBh8E,KAAKwF,MACT,CAEO+2E,QAAQxyE,GACX/J,KAAKsV,KAAKvL,KAAOA,EACjB/J,KAAKsV,KAAKq8B,QACd,CAEOioC,wBAAwB9vE,GAC3B9J,KAAK87E,iBAAiBlC,wBAAwB9vE,EAClD,CAEO0yE,UACH,OAAOx8E,KAAKsV,KAAKvL,IACrB,CAEO0yE,aACH,MAAMC,EAAQnpD,SAASkc,eAAe,cACtCzvC,KAAK28E,UAAU,WACN,MAATD,IAAgBA,EAAM17D,MAAMiG,QAAU,QAC1C,CAEO01D,UAAU78E,GACb,MACMgO,EADeylB,SAASkc,eAAe,SACrBv9B,WAAW,MAE7BvB,EC9FP,SACL7Q,EACA6Q,GAEA,MAAMkC,EAASlC,EAAKynE,SACpB,OAAQt4E,GACN,IAAK,UACH,MAAO,CACL+S,OAAQA,EACRjC,SAAU,CACR,CACE8D,MAAO,WACP/D,KAAMA,EAAK0nE,YACXnpE,MAAM,EACNmS,YAAa,UACbm6B,QAAS,GACTr6B,gBAAiB,aAIzB,IAAK,WACH,MAAO,CACLtO,OAAQA,EACRjC,SAAU,CACR,CACE8D,MAAO,iBACP/D,KAAMA,EAAK2nE,aACXppE,MAAM,EACNmS,YAAa,UACbm6B,QAAS,GACTr6B,gBAAiB,aAIzB,IAAK,SACH,MAAO,CACLtO,OAAQA,EACRjC,SAAU,CACR,CACE8D,MAAO,UACP/D,KAAMA,EAAK4nE,WACXrpE,MAAM,EACNmS,YAAa,UACbm6B,QAAS,GACTr6B,gBAAiB,aAIzB,IAAK,aACH,MAAO,CACLtO,OAAQA,EACRjC,SAAU,CACR,CACE8D,MAAO,oCACP/D,KAAMA,EAAK6nE,eACXtpE,MAAM,EACNmS,YAAa,UACbm6B,QAAS,GACTr6B,gBAAiB,aAK7B,CD+BqBy7D,CAAa98E,EADRE,KAAK87E,iBAAiB7B,mBAElC4C,EAAa,CACf/8E,KAAM,OACN6Q,KAAMA,GAEN3Q,KAAKoI,QACLpI,KAAKoI,OAAO+sC,UAEhBn1C,KAAKoI,OAAS,IAAInG,EAAM6L,EAAK+uE,EACjC,CAEOC,cACH,MAAMJ,EAAQnpD,SAASkc,eAAe,cAC7B,MAATitC,IAAgBA,EAAM17D,MAAMiG,QAAU,OAC1C,EE7GJ,CAACh1B,IACG,MAAM8qF,EAAO,IAAInB,EACjB3pF,EAAQ,KAAI8qF,EACZA,EAAK9zD,OAEL,MAAM+zD,EAAezpD,SAASkc,eAAe,WAC7CutC,EAAa7rD,iBAAiB,SAAS,KACnCxtB,OAAa,KAAEo4E,aAAejoE,OAAOwwC,WAAW04B,EAAalzE,MAAM,IAGvE,MAAMmzE,EAAgB1pD,SAASkc,eAAe,aAC9CwtC,EAAc9rD,iBAAiB,SAAS,KACpCxtB,OAAa,KAAE44E,QAAQzoE,OAAOpV,SAASu+E,EAAcnzE,OAAO,IAGhE,MAAMmuE,EAAuB1kD,SAASkc,eAAe,yBACrDwoC,EAAqB9mD,iBAAiB,SAAS,KAC3CxtB,OAAa,KAAEi2E,wBAAwB9lE,OAAOwwC,WAAW2zB,EAAqBnuE,OAAO,IAGzFizE,EAAKhB,aAAejoE,OAAOwwC,WAAW04B,EAAalzE,OACnDizE,EAAKR,QAAQzoE,OAAOpV,SAASu+E,EAAcnzE,QAC3CizE,EAAKnD,wBAAwB9lE,OAAOwwC,WAAW2zB,EAAqBnuE,OACvE,EAvBD,CAuBGnG","sources":["webpack://virusochka/./node_modules/@kurkle/color/dist/color.cjs","webpack://virusochka/./node_modules/chart.js/auto/auto.cjs","webpack://virusochka/./node_modules/chart.js/dist/chart.cjs","webpack://virusochka/./node_modules/chart.js/dist/chunks/helpers.segment.cjs","webpack://virusochka/webpack/bootstrap","webpack://virusochka/./src/utils/math-utils.ts","webpack://virusochka/./src/area-state-manager.ts","webpack://virusochka/./src/models/cell.ts","webpack://virusochka/./src/models/area.ts","webpack://virusochka/./src/area-renderer.ts","webpack://virusochka/./src/game.ts","webpack://virusochka/./src/utils/chart-utils.ts","webpack://virusochka/./src/main.ts"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global[\"@kurkle/color\"] = factory());\n})(this, (function () { 'use strict';\n\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nvar color = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColor: Color,\ndefault: index_esm,\nround: round,\nlim: lim,\np2b: p2b,\nb2p: b2p,\nn2b: n2b,\nb2n: b2n,\nn2p: n2p,\nhexParse: hexParse,\nhexString: hexString,\nrgb2hsl: rgb2hsl,\nhsl2rgb: hsl2rgb,\nhwb2rgb: hwb2rgb,\nhsv2rgb: hsv2rgb,\nhueParse: hueParse,\nrotate: rotate,\nhslString: hslString,\nnameParse: nameParse,\nrgbParse: rgbParse,\nrgbString: rgbString\n});\n\nvar index = Object.assign(index_esm, color);\n\nreturn index;\n\n}));\n","const chartjs = require('../dist/chart.cjs');\nconst {Chart, registerables} = chartjs;\n\nChart.register(...registerables);\n\nmodule.exports = Object.assign(Chart, chartjs);\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\n'use strict';\n\nvar helpers_segment = require('./chunks/helpers.segment.cjs');\nrequire('@kurkle/color');\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = helpers_segment.requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = helpers_segment.color(from || transparent);\n        const c1 = c0.valid && helpers_segment.color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = helpers_segment.resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = helpers_segment.resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = helpers_segment.effects[cfg.easing] || helpers_segment.effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = helpers_segment.resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = helpers_segment.resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!helpers_segment.isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(helpers_segment.defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!helpers_segment.isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (helpers_segment.isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (helpers_segment.isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (helpers_segment.isNumberFinite(otherValue) && (singleMode || value === 0 || helpers_segment.sign(value) === helpers_segment.sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return helpers_segment.createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return helpers_segment.createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = helpers_segment.valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = helpers_segment.valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = helpers_segment.valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            helpers_segment.unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (helpers_segment.isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                helpers_segment.unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                helpers_segment.listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (helpers_segment.isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (helpers_segment.isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(helpers_segment.resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(helpers_segment.resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !helpers_segment.isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (helpers_segment.isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(helpers_segment.valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && helpers_segment.defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(helpers_segment.defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = helpers_segment._arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (helpers_segment.defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (helpers_segment.isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (helpers_segment.isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return helpers_segment.sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(helpers_segment.resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(helpers_segment.resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || helpers_segment.isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (helpers_segment.isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && helpers_segment.sign(value) !== helpers_segment.sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !helpers_segment.isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = helpers_segment.sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = helpers_segment.valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = helpers_segment.valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = helpers_segment.valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += helpers_segment.valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < helpers_segment.TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>helpers_segment._angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>helpers_segment._angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(helpers_segment.HALF_PI, startY, endY);\n        const minX = calcMin(helpers_segment.PI, startX, endX);\n        const minY = calcMin(helpers_segment.PI + helpers_segment.HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (helpers_segment.isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+helpers_segment.resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return helpers_segment.toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return helpers_segment.toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = helpers_segment.TAU;\n        let max = -helpers_segment.TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(helpers_segment.toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = helpers_segment.toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / helpers_segment.TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return helpers_segment.TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = helpers_segment.formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(helpers_segment.valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = helpers_segment._getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (helpers_segment._scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = helpers_segment.isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = helpers_segment.isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = helpers_segment.formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return helpers_segment._parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * helpers_segment.PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? helpers_segment.toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return helpers_segment._parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = helpers_segment._getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (helpers_segment._scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = helpers_segment.isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = helpers_segment.isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? helpers_segment._rlookupByKey : helpers_segment._lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !helpers_segment._isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = helpers_segment.getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (helpers_segment._angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!helpers_segment.isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (helpers_segment.defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (helpers_segment.defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = helpers_segment.toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        helpers_segment.each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, helpers_segment.toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        helpers_segment.each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = helpers_segment.readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = helpers_segment.readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = helpers_segment.supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = helpers_segment.getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && helpers_segment._getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = helpers_segment.throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = helpers_segment.throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (helpers_segment.isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return helpers_segment.getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = helpers_segment._getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!helpers_segment._isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return helpers_segment.isNumber(this.x) && helpers_segment.isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, helpers_segment.isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, helpers_segment.isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = helpers_segment._factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = helpers_segment.valueOrDefault(majorStart, 0);\n    const end = Math.min(helpers_segment.valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    helpers_segment.each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = helpers_segment.toFont(options.font, fallback);\n    const padding = helpers_segment.toPadding(options.padding);\n    const lines = helpers_segment.isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return helpers_segment.createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return helpers_segment.createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = helpers_segment._toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = helpers_segment._alignStartEnd(align, left, right);\n        if (helpers_segment.isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (helpers_segment.isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = helpers_segment._alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -helpers_segment.HALF_PI : helpers_segment.HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = helpers_segment.finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = helpers_segment.finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = helpers_segment.finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = helpers_segment.finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: helpers_segment.finiteOrDefault(_userMin, _suggestedMin),\n            max: helpers_segment.finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: helpers_segment.isNumberFinite(_userMin),\n            maxDefined: helpers_segment.isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: helpers_segment.finiteOrDefault(min, helpers_segment.finiteOrDefault(max, min)),\n            max: helpers_segment.finiteOrDefault(max, helpers_segment.finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        helpers_segment.callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = helpers_segment._addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        helpers_segment.callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        helpers_segment.callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        helpers_segment.callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        helpers_segment.callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        helpers_segment.callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = helpers_segment.callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        helpers_segment.callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        helpers_segment.callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = helpers_segment._limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = helpers_segment.toDegrees(Math.min(Math.asin(helpers_segment._limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(helpers_segment._limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(helpers_segment._limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        helpers_segment.callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        helpers_segment.callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = helpers_segment.toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        helpers_segment.callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (helpers_segment.isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!helpers_segment.isNullOrUndef(label) && !helpers_segment.isArray(label)) {\n                width = helpers_segment._measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (helpers_segment.isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!helpers_segment.isNullOrUndef(nestedLabel) && !helpers_segment.isArray(nestedLabel)) {\n                        width = helpers_segment._measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return helpers_segment._int16Range(this._alignToPixels ? helpers_segment._alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = helpers_segment.toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return helpers_segment._alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (helpers_segment.isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (helpers_segment.isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = helpers_segment.valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = helpers_segment._alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -helpers_segment.toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (helpers_segment.isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (helpers_segment.isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = helpers_segment.isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = helpers_segment.toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -helpers_segment.toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = helpers_segment._alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = helpers_segment._alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = helpers_segment._alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = helpers_segment._alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            helpers_segment.clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            helpers_segment.renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            helpers_segment.unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = helpers_segment.toFont(title.font);\n        const padding = helpers_segment.toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || helpers_segment.isObject(position)) {\n            offset += padding.bottom;\n            if (helpers_segment.isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        helpers_segment.renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = helpers_segment.valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = helpers_segment.valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return helpers_segment.toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            helpers_segment.defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in helpers_segment.defaults[scope]) {\n            delete helpers_segment.defaults[scope][id];\n            if (this.override) {\n                delete helpers_segment.overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = helpers_segment.merge(Object.create(null), [\n        parentScope ? helpers_segment.defaults.get(parentScope) : {},\n        helpers_segment.defaults.get(scope),\n        item.defaults\n    ]);\n    helpers_segment.defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        helpers_segment.defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        helpers_segment.defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                helpers_segment.each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = helpers_segment._capitalize(method);\n        helpers_segment.callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        helpers_segment.callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (helpers_segment.callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!helpers_segment.isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = helpers_segment.valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = helpers_segment.defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = helpers_segment.overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!helpers_segment.isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), helpers_segment.defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = helpers_segment.mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = helpers_segment.overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            helpers_segment.mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        helpers_segment.mergeIf(scale, [\n            helpers_segment.defaults.scales[scale.type],\n            helpers_segment.defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = helpers_segment.valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = helpers_segment.resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, helpers_segment.overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, helpers_segment.defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, helpers_segment.descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            helpers_segment.overrides[type] || {},\n            helpers_segment.defaults.datasets[type] || {},\n            {\n                type\n            },\n            helpers_segment.defaults,\n            helpers_segment.descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = helpers_segment.isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = helpers_segment._attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return helpers_segment.isObject(context) ? helpers_segment._attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = helpers_segment._createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>helpers_segment.isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || helpers_segment.isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = helpers_segment._descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (helpers_segment.isFunction(value) || hasFunction(value)) || indexable && helpers_segment.isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.3.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    helpers_segment.callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    helpers_segment.callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (helpers_segment._isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = helpers_segment.defaults;\n    static instances = instances;\n    static overrides = helpers_segment.overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = helpers_segment.uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = helpers_segment.debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!helpers_segment.isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            helpers_segment.retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        helpers_segment.clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!helpers_segment.retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        helpers_segment.callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        helpers_segment.each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        helpers_segment.each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = helpers_segment.valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        helpers_segment.each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        helpers_segment.each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = helpers_segment.defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        helpers_segment.each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            helpers_segment.each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        helpers_segment.each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!helpers_segment.setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!helpers_segment.setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        helpers_segment.each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, helpers_segment.isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            helpers_segment.clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            helpers_segment.unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return helpers_segment._isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = helpers_segment.createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (helpers_segment.defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            helpers_segment.clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        helpers_segment.each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        helpers_segment.each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        helpers_segment.each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !helpers_segment._elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = helpers_segment._isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            helpers_segment.callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                helpers_segment.callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !helpers_segment._elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return helpers_segment.each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + helpers_segment.HALF_PI, startAngle - helpers_segment.HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return helpers_segment._readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return helpers_segment._limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: helpers_segment._limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: helpers_segment._limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / helpers_segment.PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + helpers_segment.HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + helpers_segment.HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - helpers_segment.HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - helpers_segment.HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % helpers_segment.TAU || helpers_segment.TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % helpers_segment.TAU || helpers_segment.TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = helpers_segment.getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = helpers_segment.valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= helpers_segment.TAU || helpers_segment._angleBetween(angle, startAngle, endAngle);\n        const withinRadius = helpers_segment._isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > helpers_segment.TAU ? Math.floor(circumference / helpers_segment.TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(helpers_segment.PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = helpers_segment.valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(helpers_segment.valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = helpers_segment.valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = helpers_segment.valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = helpers_segment.valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = helpers_segment.valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return helpers_segment._steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return helpers_segment._bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return helpers_segment._steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return helpers_segment._bezierInterpolation;\n    }\n    return helpers_segment._pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            helpers_segment._updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = helpers_segment._computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = helpers_segment._boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !helpers_segment._isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        helpers_segment.drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : helpers_segment._limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = helpers_segment.toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = helpers_segment.toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || helpers_segment.isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || helpers_segment._isBetween(x, bounds.left, bounds.right)) && (skipY || helpers_segment._isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? helpers_segment.addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!helpers_segment.isNullOrUndef(minIndex) && !helpers_segment.isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = helpers_segment._limitValue(helpers_segment._lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = helpers_segment._limitValue(helpers_segment._lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (helpers_segment.resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (helpers_segment.isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = helpers_segment._boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = helpers_segment._boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = helpers_segment._normalizeAngle(start);\n        end = helpers_segment._normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (helpers_segment.isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!helpers_segment.isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (helpers_segment.isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (helpers_segment.isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (helpers_segment.isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (helpers_segment.isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = helpers_segment.valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (helpers_segment._isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: helpers_segment.TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (helpers_segment.isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (helpers_segment.isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        helpers_segment.clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        helpers_segment.unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = helpers_segment.callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = helpers_segment.toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = helpers_segment.getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = helpers_segment._alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = helpers_segment._alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = helpers_segment._alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = helpers_segment._alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            helpers_segment.clipArea(ctx, this);\n            this._draw();\n            helpers_segment.unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = helpers_segment.defaults.color;\n        const rtlHelper = helpers_segment.getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = helpers_segment.toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = helpers_segment.valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = helpers_segment.valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = helpers_segment.valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = helpers_segment.valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = helpers_segment.valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = helpers_segment.valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(helpers_segment.valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                helpers_segment.drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = helpers_segment.toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    helpers_segment.addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            helpers_segment.renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: helpers_segment._alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: helpers_segment._alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        helpers_segment.overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = helpers_segment._alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = helpers_segment._alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = helpers_segment._textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        helpers_segment.restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = helpers_segment.toFont(titleOpts.font);\n        const titlePadding = helpers_segment.toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = helpers_segment.getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = helpers_segment._alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + helpers_segment._alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = helpers_segment._alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(helpers_segment._toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        helpers_segment.renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = helpers_segment.toFont(titleOpts.font);\n        const titlePadding = helpers_segment.toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (helpers_segment._isBetween(x, this.left, this.right) && helpers_segment._isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (helpers_segment._isBetween(x, hitBox.left, hitBox.left + hitBox.width) && helpers_segment._isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                helpers_segment.callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                helpers_segment.callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            helpers_segment.callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = helpers_segment.toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = helpers_segment.isArray(opts.text) ? opts.text.length : 1;\n        this._padding = helpers_segment.toPadding(opts.padding);\n        const textSize = lineCount * helpers_segment.toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = helpers_segment._alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = helpers_segment._alignStartEnd(align, bottom, top);\n                rotation = helpers_segment.PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = helpers_segment._alignStartEnd(align, top, bottom);\n                rotation = helpers_segment.PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = helpers_segment.toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        helpers_segment.renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: helpers_segment._toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = helpers_segment.distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (helpers_segment.isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = helpers_segment.toFont(options.bodyFont);\n    const titleFont = helpers_segment.toFont(options.titleFont);\n    const footerFont = helpers_segment.toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = helpers_segment.toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    helpers_segment.each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    helpers_segment.each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    helpers_segment.each(body, (bodyItem)=>{\n        helpers_segment.each(bodyItem.before, maxLineWidth);\n        helpers_segment.each(bodyItem.lines, maxLineWidth);\n        helpers_segment.each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    helpers_segment.each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = helpers_segment.toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: helpers_segment._limitValue(x, 0, chart.width - size.width),\n        y: helpers_segment._limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = helpers_segment.toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return helpers_segment.createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: helpers_segment.noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: helpers_segment.noop,\n    beforeBody: helpers_segment.noop,\n    beforeLabel: helpers_segment.noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!helpers_segment.isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: helpers_segment.noop,\n    afterBody: helpers_segment.noop,\n    beforeFooter: helpers_segment.noop,\n    footer: helpers_segment.noop,\n    afterFooter: helpers_segment.noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        helpers_segment.each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        helpers_segment.each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = helpers_segment.toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = helpers_segment.getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = helpers_segment.toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = helpers_segment.toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            helpers_segment.drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            helpers_segment.drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = helpers_segment.isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = helpers_segment.toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                helpers_segment.addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                helpers_segment.addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = helpers_segment.toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = helpers_segment.getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        helpers_segment.each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            helpers_segment.each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            helpers_segment.each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        helpers_segment.each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = helpers_segment.getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = helpers_segment.toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = helpers_segment.toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = helpers_segment.toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            helpers_segment.overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            helpers_segment.restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !helpers_segment._elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !helpers_segment._elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : helpers_segment._limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (helpers_segment.isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, helpers_segment.valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !helpers_segment.isNullOrUndef(min);\n    const maxDefined = !helpers_segment.isNullOrUndef(max);\n    const countDefined = !helpers_segment.isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = helpers_segment.niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = helpers_segment.niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!helpers_segment.isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && helpers_segment.almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (helpers_segment.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(helpers_segment._decimalPlaces(spacing), helpers_segment._decimalPlaces(niceMin));\n    factor = Math.pow(10, helpers_segment.isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (helpers_segment.almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && helpers_segment.almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = helpers_segment.toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (helpers_segment.isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = helpers_segment.sign(min);\n            const maxSign = helpers_segment.sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            helpers_segment._setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return helpers_segment.formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: helpers_segment.Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = helpers_segment.isNumberFinite(min) ? min : 0;\n        this.max = helpers_segment.isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = helpers_segment.toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(helpers_segment.log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = helpers_segment.finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = helpers_segment.finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = helpers_segment.finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: helpers_segment.Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return helpers_segment.isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = helpers_segment.isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = helpers_segment.isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !helpers_segment.isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            helpers_segment._setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : helpers_segment.formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = helpers_segment.log10(start);\n        this._valueRange = helpers_segment.log10(this.max) - helpers_segment.log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (helpers_segment.log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = helpers_segment.toPadding(tickOpts.backdropPadding);\n        return helpers_segment.valueOrDefault(tickOpts.font && tickOpts.font.size, helpers_segment.defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = helpers_segment.isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: helpers_segment._longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? helpers_segment.PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = helpers_segment.toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = helpers_segment._normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(helpers_segment.toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(helpers_segment.toDegrees(helpers_segment._normalizeAngle(pointLabelPosition.angle + helpers_segment.HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = helpers_segment._isPointInArea({\n        x: left,\n        y: top\n    }, area) || helpers_segment._isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || helpers_segment._isPointInArea({\n        x: right,\n        y: top\n    }, area) || helpers_segment._isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? helpers_segment.PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!helpers_segment.isNullOrUndef(backdropColor)) {\n        const borderRadius = helpers_segment.toTRBLCorners(opts.borderRadius);\n        const padding = helpers_segment.toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            helpers_segment.addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = helpers_segment.toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        helpers_segment.renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, helpers_segment.TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return helpers_segment.createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: helpers_segment.Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = helpers_segment.toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = helpers_segment.isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = helpers_segment.isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = helpers_segment.callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = helpers_segment.TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return helpers_segment._normalizeAngle(index * angleMultiplier + helpers_segment.toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (helpers_segment.isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (helpers_segment.isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - helpers_segment.HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = helpers_segment.toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = helpers_segment.toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            helpers_segment.renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (helpers_segment.isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!helpers_segment.isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (helpers_segment.isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = helpers_segment._lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        helpers_segment.mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = helpers_segment.isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = helpers_segment.isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = helpers_segment._filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = helpers_segment._limitValue(start, 0, limit);\n        end = helpers_segment._limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = helpers_segment.valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = helpers_segment.isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return helpers_segment.callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = helpers_segment.toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return helpers_segment._arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = helpers_segment._lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = helpers_segment._lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexports.Ticks = helpers_segment.Ticks;\nexports.defaults = helpers_segment.defaults;\nexports.Animation = Animation;\nexports.Animations = Animations;\nexports.ArcElement = ArcElement;\nexports.BarController = BarController;\nexports.BarElement = BarElement;\nexports.BasePlatform = BasePlatform;\nexports.BasicPlatform = BasicPlatform;\nexports.BubbleController = BubbleController;\nexports.CategoryScale = CategoryScale;\nexports.Chart = Chart;\nexports.Colors = plugin_colors;\nexports.DatasetController = DatasetController;\nexports.Decimation = plugin_decimation;\nexports.DomPlatform = DomPlatform;\nexports.DoughnutController = DoughnutController;\nexports.Element = Element;\nexports.Filler = index;\nexports.Interaction = Interaction;\nexports.Legend = plugin_legend;\nexports.LineController = LineController;\nexports.LineElement = LineElement;\nexports.LinearScale = LinearScale;\nexports.LogarithmicScale = LogarithmicScale;\nexports.PieController = PieController;\nexports.PointElement = PointElement;\nexports.PolarAreaController = PolarAreaController;\nexports.RadarController = RadarController;\nexports.RadialLinearScale = RadialLinearScale;\nexports.Scale = Scale;\nexports.ScatterController = ScatterController;\nexports.SubTitle = plugin_subtitle;\nexports.TimeScale = TimeScale;\nexports.TimeSeriesScale = TimeSeriesScale;\nexports.Title = plugin_title;\nexports.Tooltip = plugin_tooltip;\nexports._adapters = adapters;\nexports._detectPlatform = _detectPlatform;\nexports.animator = animator;\nexports.controllers = controllers;\nexports.elements = elements;\nexports.layouts = layouts;\nexports.plugins = plugins;\nexports.registerables = registerables;\nexports.registry = registry;\nexports.scales = scales;\n//# sourceMappingURL=chart.cjs.map\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\n'use strict';\n\nvar color$1 = require('@kurkle/color');\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new color$1.Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new color$1.Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexports.HALF_PI = HALF_PI;\nexports.INFINITY = INFINITY;\nexports.PI = PI;\nexports.PITAU = PITAU;\nexports.QUARTER_PI = QUARTER_PI;\nexports.RAD_PER_DEG = RAD_PER_DEG;\nexports.TAU = TAU;\nexports.TWO_THIRDS_PI = TWO_THIRDS_PI;\nexports.Ticks = Ticks;\nexports._addGrace = _addGrace;\nexports._alignPixel = _alignPixel;\nexports._alignStartEnd = _alignStartEnd;\nexports._angleBetween = _angleBetween;\nexports._angleDiff = _angleDiff;\nexports._arrayUnique = _arrayUnique;\nexports._attachContext = _attachContext;\nexports._bezierCurveTo = _bezierCurveTo;\nexports._bezierInterpolation = _bezierInterpolation;\nexports._boundSegment = _boundSegment;\nexports._boundSegments = _boundSegments;\nexports._capitalize = _capitalize;\nexports._computeSegments = _computeSegments;\nexports._createResolver = _createResolver;\nexports._decimalPlaces = _decimalPlaces;\nexports._deprecated = _deprecated;\nexports._descriptors = _descriptors;\nexports._elementsEqual = _elementsEqual;\nexports._factorize = _factorize;\nexports._filterBetween = _filterBetween;\nexports._getParentNode = _getParentNode;\nexports._getStartAndCountOfVisiblePoints = _getStartAndCountOfVisiblePoints;\nexports._int16Range = _int16Range;\nexports._isBetween = _isBetween;\nexports._isClickEvent = _isClickEvent;\nexports._isDomSupported = _isDomSupported;\nexports._isPointInArea = _isPointInArea;\nexports._limitValue = _limitValue;\nexports._longestText = _longestText;\nexports._lookup = _lookup;\nexports._lookupByKey = _lookupByKey;\nexports._measureText = _measureText;\nexports._merger = _merger;\nexports._mergerIf = _mergerIf;\nexports._normalizeAngle = _normalizeAngle;\nexports._parseObjectDataRadialScale = _parseObjectDataRadialScale;\nexports._pointInLine = _pointInLine;\nexports._readValueToProps = _readValueToProps;\nexports._rlookupByKey = _rlookupByKey;\nexports._scaleRangesChanged = _scaleRangesChanged;\nexports._setMinAndMaxByKey = _setMinAndMaxByKey;\nexports._splitKey = _splitKey;\nexports._steppedInterpolation = _steppedInterpolation;\nexports._steppedLineTo = _steppedLineTo;\nexports._textX = _textX;\nexports._toLeftRightCenter = _toLeftRightCenter;\nexports._updateBezierControlPoints = _updateBezierControlPoints;\nexports.addRoundedRectPath = addRoundedRectPath;\nexports.almostEquals = almostEquals;\nexports.almostWhole = almostWhole;\nexports.callback = callback;\nexports.clearCanvas = clearCanvas;\nexports.clipArea = clipArea;\nexports.clone = clone;\nexports.color = color;\nexports.createContext = createContext;\nexports.debounce = debounce;\nexports.defaults = defaults;\nexports.defined = defined;\nexports.descriptors = descriptors;\nexports.distanceBetweenPoints = distanceBetweenPoints;\nexports.drawPoint = drawPoint;\nexports.drawPointLegend = drawPointLegend;\nexports.each = each;\nexports.effects = effects;\nexports.finiteOrDefault = finiteOrDefault;\nexports.fontString = fontString;\nexports.formatNumber = formatNumber;\nexports.getAngleFromPoint = getAngleFromPoint;\nexports.getHoverColor = getHoverColor;\nexports.getMaximumSize = getMaximumSize;\nexports.getRelativePosition = getRelativePosition;\nexports.getRtlAdapter = getRtlAdapter;\nexports.getStyle = getStyle;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isNullOrUndef = isNullOrUndef;\nexports.isNumber = isNumber;\nexports.isNumberFinite = isNumberFinite;\nexports.isObject = isObject;\nexports.isPatternOrGradient = isPatternOrGradient;\nexports.listenArrayEvents = listenArrayEvents;\nexports.log10 = log10;\nexports.merge = merge;\nexports.mergeIf = mergeIf;\nexports.niceNum = niceNum;\nexports.noop = noop;\nexports.overrideTextDirection = overrideTextDirection;\nexports.overrides = overrides;\nexports.readUsedSize = readUsedSize;\nexports.renderText = renderText;\nexports.requestAnimFrame = requestAnimFrame;\nexports.resolve = resolve;\nexports.resolveObjectKey = resolveObjectKey;\nexports.restoreTextDirection = restoreTextDirection;\nexports.retinaScale = retinaScale;\nexports.setsEqual = setsEqual;\nexports.sign = sign;\nexports.splineCurve = splineCurve;\nexports.splineCurveMonotone = splineCurveMonotone;\nexports.supportsEventListenerOptions = supportsEventListenerOptions;\nexports.throttled = throttled;\nexports.toDegrees = toDegrees;\nexports.toDimension = toDimension;\nexports.toFont = toFont;\nexports.toFontString = toFontString;\nexports.toLineHeight = toLineHeight;\nexports.toPadding = toPadding;\nexports.toPercentage = toPercentage;\nexports.toRadians = toRadians;\nexports.toTRBL = toTRBL;\nexports.toTRBLCorners = toTRBLCorners;\nexports.uid = uid;\nexports.unclipArea = unclipArea;\nexports.unlistenArrayEvents = unlistenArrayEvents;\nexports.valueOrDefault = valueOrDefault;\n//# sourceMappingURL=helpers.segment.cjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export class MathUtils {\n    public static minMax(value: number, min: number, max: number): number {\n        return Math.min(Math.max(value, min), max);\n    }\n\n    public static generateRandomNumber(min: number, max: number) {\n        const ceilMin = Math.ceil(min);\n        const floorMax = Math.floor(max);\n        return Math.floor(Math.random() * (floorMax - ceilMin + 1)) + ceilMin;\n    }\n}","import { Area } from \"./models/area\";\nimport { Cell } from \"./models/cell\";\nimport { IChart } from \"./models/chart\";\nimport { ICoord } from \"./models/coord\";\nimport { MathUtils } from \"./utils/math-utils\";\n\nexport class AreaStateManager {\n    public history = new Array<Area>();\n    public chartData: IChart = {\n        dataTime: [],\n        dataHealthy: [],\n        dataInfected: [],\n        dataImmune: [],\n        dataSpreadRate: [],\n    };\n\n    private readonly area: Area;\n\n    private stateCounter = 0;\n    private countOfHealthyCells = 0;\n    private infectionProbability: number;\n\n    constructor(area: Area, infectionProbability: number = 0.5) {\n        this.area = area;\n        this.infectionProbability = infectionProbability;\n\n        this.saveHistory();\n    }\n\n    public get isAreaUnchangeable(): boolean {\n        return this.area.size * this.area.size === this.countOfHealthyCells;\n    }\n\n    public next(): void {\n        this.area.time += 1;\n        if (this.stateCounter !== 0 && this.isAreaUnchangeable) {\n            return;\n        }\n\n        this.countOfHealthyCells = 0;\n\n        if (this.stateCounter === 0) {\n            const centerCoord = { i: Math.floor(this.area.size / 2), j: Math.floor(this.area.size / 2) };\n            const infectResult = this.area.infectCell(centerCoord);\n            if (!infectResult) {\n                throw new Error(\"Unable to infect first cell\");\n            }\n        }\n\n        for (let i = 0; i < this.area.size; i++) {\n            for (let j = 0; j < this.area.size; j++) {\n                const coord = { i: i, j: j };\n\n                const cell = this.area.getCell(coord);\n                if (!cell) {\n                    continue;\n                }\n\n                switch (cell.state) {\n                    case \"infected\":\n                        if (cell.stateLifetime > 0) {\n                            this.processInfectedCell(cell, coord);\n                        }\n                        break;\n                    case \"immune\":\n                        this.processImmuneCell(cell, coord);\n                        break;\n                    case \"healthy\":\n                        this.countOfHealthyCells++;\n                        break;\n                }\n\n                cell.incrementLifeTime();\n            }\n        }\n\n        this.stateCounter++;\n\n        this.saveHistory();\n    }\n\n    private processInfectedCell(cell: Cell, coord: ICoord): void {\n        if (cell.stateLifetime > 5) {\n            this.area.immunizeCell(coord);\n        } else {\n            const healthyNeighborCoords = this.area.getHealthyNeighborCoords(coord);\n            const random = MathUtils.generateRandomNumber(1, 100);\n            if ((healthyNeighborCoords.length > 0) && (random <= this.infectionProbability * 100)) {\n                const random = MathUtils.generateRandomNumber(0, healthyNeighborCoords.length - 1);\n                this.area.infectCell(healthyNeighborCoords[random]);\n            }\n        }\n    }\n\n    private processImmuneCell(cell: Cell, coord: ICoord): void {\n        if (cell.stateLifetime > 3) {\n            this.area.recoverCell(coord);\n        }\n    }\n\n    public setInfectionProbability(value: number): void {\n        this.infectionProbability = MathUtils.minMax(value, 0, 1);\n    }\n\n    public reset(): void {\n        this.area.resetCells();\n        this.area.time = 0;\n        this.resetHistory();\n        this.stateCounter = 0;\n    }\n\n    private resetHistory(): void {\n        this.history = [];\n        this.chartData = {\n            dataTime: [],\n            dataHealthy: [],\n            dataInfected: [],\n            dataImmune: [],\n            dataSpreadRate: [],\n        };\n        this.saveHistory();\n    }\n\n    private saveHistory(): void {\n        this.history.push(this.area.copy());\n    }\n\n    public updateChartData(): IChart {\n        const dataTime: number[] = [];\n        const dataHealthy: number[] = [];\n        const dataInfected: number[] = [];\n        const dataImmune: number[] = [];\n        const dataSpreadRate: number[] = [];\n        let prevInfectedCount = 0;\n        this.history.forEach((area) => {\n            let countHealthy = 0;\n            let countInfected = 0;\n            let countImmune = 0;\n            area.cells.forEach((items) => {\n                items.forEach((cell) => {\n                    switch (cell.state) {\n                        case \"healthy\":\n                            countHealthy++;\n                            break;\n                        case \"infected\":\n                            countInfected++;\n                            break;\n                        case \"immune\":\n                            countImmune++;\n                            break;\n                        default:\n                            break;\n                        }\n                    },\n                );\n            });\n            const spreadRate = countInfected - prevInfectedCount;\n            dataTime.push(area.time);\n            dataHealthy.push(countHealthy);\n            dataInfected.push(countInfected);\n            dataImmune.push(countImmune);\n            dataSpreadRate.push(spreadRate >= 0 ? spreadRate : 0);\n            prevInfectedCount = countInfected;\n        });\n\n        return {\n            dataTime: dataTime,\n            dataHealthy: dataHealthy,\n            dataInfected: dataInfected,\n            dataImmune: dataImmune,\n            dataSpreadRate: dataSpreadRate,\n        }\n    }\n}","import { CellStateType } from \"src/typings/cell\";\n\nexport class Cell {\n    private _state: CellStateType = \"healthy\";\n    private _stateLifetime: number = 0;\n\n    constructor (state: CellStateType = \"healthy\", stateLifetime: number = 0) {\n        this._state = state;\n        this._stateLifetime = stateLifetime;\n    }\n\n    public get state(): CellStateType {\n        return this._state;\n    }\n\n    public get stateLifetime(): number {\n        return this._stateLifetime;\n    }\n\n    public infect(): boolean {\n        if (this._state !== \"healthy\") {\n            return false;\n        }\n\n        this._state = \"infected\";\n        this._stateLifetime = 0;\n        return true;\n    }\n\n    public immunize(): boolean {\n        if (this._state !== \"infected\") {\n            return false;\n        }\n\n        this._state = \"immune\";\n        this._stateLifetime = 0;\n        return true;\n    }\n\n    public recover(): boolean {\n        if (this._state !== \"immune\") {\n            return false;\n        }\n\n        this._state = \"healthy\";\n        this._stateLifetime = 0;\n        return true;\n    }\n\n    public reset(): void {\n        this._state = \"healthy\";\n        this._stateLifetime = 0;\n    }\n\n    public incrementLifeTime(): void {\n        this._stateLifetime++;\n    }\n\n    public copy(): Cell {\n        return new Cell(this._state, this._stateLifetime);\n    }\n}","import { AreaRenderer } from \"./../area-renderer\";\nimport { MathUtils } from \"../utils/math-utils\";\nimport { Cell } from \"./cell\";\nimport { ICoord } from \"./coord\";\n\nexport class Area {\n    private static readonly MIN_SIZE = 3;\n    private static readonly MAX_SIZE = 111;\n\n    private readonly renderer: AreaRenderer;\n\n    private _time: number;\n\n    private _size = 3;\n    private _cells = new Array<Array<Cell>>();\n\n    constructor(renderer: AreaRenderer, size: number, time: number, cells?: Array<Array<Cell>>) {\n        this.renderer = renderer;\n        this.size = size;\n        this._time = time;\n        this.initCells(cells);\n    }\n\n    private initCells(cells?: Array<Array<Cell>>): void {\n        this._cells = new Array<Array<Cell>>();\n        for (let i = 0; i < this._size; i++) {\n            this._cells.push(new Array<Cell>());\n            for (let j = 0; j < this._size; j++) {\n                const cell = cells && cells[i][j] ? cells[i][j].copy() : new Cell();\n                this._cells[i].push(cell);\n            }\n        }\n    }\n\n    public get size(): number {\n        return this._size;\n    }\n\n    public set size(value: number) {\n        if (this._size === value) {\n            return;\n        }\n\n        value = MathUtils.minMax(value, Area.MIN_SIZE, Area.MAX_SIZE);\n        this._size = (value & 1) ? value : value - 1;\n        this.initCells();\n    }\n\n    public get time(): number {\n        return this._time;\n    }\n\n    public set time(value: number) {\n        this._time = value;\n    }\n\n    public get cells(): Cell[][] {\n        return this._cells;\n    }\n\n    public resetCells(): void {\n        this._cells.forEach(row => {\n            row.forEach(cell => cell.reset());\n        });\n        this.render();\n    }\n\n    public infectCell(coord: ICoord): boolean {\n        const cell = this.getCell(coord);\n        const succeed = cell?.infect() ?? false;\n        this.renderer.renderCell(cell, coord);\n        return succeed;\n    }\n\n    public immunizeCell(coord: ICoord): boolean {\n        const cell = this.getCell(coord);\n        const succeed = cell?.immunize() ?? false;\n        this.renderer.renderCell(cell, coord);\n        return succeed;\n    }\n\n    public recoverCell(coord: ICoord): boolean {\n        const cell = this.getCell(coord);\n        const succeed = cell?.recover() ?? false;\n        this.renderer.renderCell(cell, coord);\n        return succeed;\n    }\n\n    public render(): void {\n        this.renderer.render(this);\n    }\n\n    public getCell(coord: ICoord): Cell | null {\n        const i = MathUtils.minMax(coord.i, 0, this._cells.length);\n        const j = MathUtils.minMax(coord.j, 0, this._cells[0].length);\n\n        try {\n            return this._cells[i][j];\n        } catch {\n            return null;\n        }\n    }\n\n    public getHealthyNeighborCoords(coord: ICoord): Array<ICoord> {\n        const result = new Array<ICoord>();\n\n        [\n            { i: coord.i, j: coord.j - 1 },\n            { i: coord.i - 1, j: coord.j - 1 },\n            { i: coord.i - 1, j: coord.j },\n            { i: coord.i - 1, j: coord.j + 1 },\n            { i: coord.i, j: coord.j + 1 },\n            { i: coord.i + 1, j: coord.j + 1 },\n            { i: coord.i + 1, j: coord.j },\n            { i: coord.i + 1, j: coord.j - 1 }\n        ].forEach((coord: ICoord) => {\n            try {\n                if (this._cells[coord.i][coord.j] && this._cells[coord.i][coord.j].state === \"healthy\") {\n                    result.push(coord);\n                }\n            } catch {\n                // do nothing\n            }\n        });\n\n        return result;\n    }\n\n    public copy(): Area {\n        return new Area(this.renderer, this._size, this._time, this._cells);\n    }\n}","import { Area } from \"./models/area\";\nimport { Cell } from \"./models/cell\";\nimport { ICoord } from \"./models/coord\";\n\nexport class AreaRenderer {\n    private readonly BORDER_SIZE = 2;\n\n    private readonly canvasEl: HTMLCanvasElement;\n    private readonly ctx: CanvasRenderingContext2D;\n\n    private cellSize: number = 100;\n\n    constructor() {\n        this.canvasEl = document.getElementById(\"canvas\") as HTMLCanvasElement;\n        this.ctx = this.canvasEl.getContext(\"2d\") as CanvasRenderingContext2D;\n\n        if (!this.canvasEl || !this.ctx) {\n            throw new Error(\"Unable to create AreaRenderer\");\n        }\n    }\n\n    public render(area: Area): void {\n        this.cellSize = (this.canvasEl.width - this.BORDER_SIZE) / area.size;\n\n        this.ctx.fillStyle = \"#000\";\n        this.ctx.fillRect(0, 0, this.canvasEl.width, this.canvasEl.height);\n\n        for (let i = 0; i < area.size; i++) {\n            for (let j = 0; j < area.size; j++) {\n                const coord = { i: i, j: j };\n                this.renderCell(area.getCell(coord), coord);\n            }\n        }\n    }\n\n    public renderCell(cell: Cell | null, coord: ICoord): void {\n        if (!cell) {\n            return;\n        }\n\n        this.ctx.fillStyle = this.getCellColor(cell);\n        this.ctx.fillRect(\n            coord.j * this.cellSize + this.BORDER_SIZE,\n            coord.i * this.cellSize + this.BORDER_SIZE,\n            this.cellSize - this.BORDER_SIZE,\n            this.cellSize - this.BORDER_SIZE\n        );\n    }\n\n    private getCellColor(cell: Cell | null): string {\n        if (!cell) {\n            return \"#ffffff\";\n        }\n\n        switch (cell.state) {\n            case \"infected\":\n                return \"#c71010\";\n            case \"immune\":\n                return \"#c7c110\";\n            case \"healthy\":\n                return \"#00992b\";\n            default:\n                return \"#ffffff\";\n        }\n    }\n}","const { Chart } = require(\"chart.js/auto\");\nimport { AreaStateManager } from \"./area-state-manager\";\nimport { Area } from \"./models/area\";\nimport { IChart } from \"./models/chart\";\nimport { AreaRenderer } from \"./area-renderer\";\nimport { CellStateType } from \"./typings/cell\";\nimport { getChartInfo } from \"./utils/chart-utils\";\n\nexport class Game {\n    private readonly areaRenderer = new AreaRenderer();\n    private readonly area = new Area(this.areaRenderer, 5, 0);\n    private readonly areaStateManager = new AreaStateManager(this.area);\n\n    public timeoutInSec = 0.3;\n    public gameTickCounter = 0;\n\n    private running = false;\n    private dateStart = 0;\n    private animationRequestId = 0;\n    private _chart;\n\n    public init(): void {\n        this.area.render();\n    }\n\n    public start(): void {\n        if (this.running) {\n            return;\n        }\n\n        this.area.render();\n        this.startGameAnimation();\n\n        this.running = true;\n    }\n\n    private startGameAnimation(): void {\n        this.animationRequestId = window.requestAnimationFrame(this.gameTick);\n    }\n\n    private gameTick = (now: number) => {\n        if (!this.dateStart || now - this.dateStart >= this.timeoutInSec * 1000) {\n            this.dateStart = now;\n            this.areaStateManager.next();\n            if (this.areaStateManager.isAreaUnchangeable) {\n                this.stop();\n                this.reset();\n            }\n\n            this.gameTickCounter++;\n        }\n\n        if (this.running) {\n            window.requestAnimationFrame(this.gameTick);\n        }\n    };\n\n    public stop(): void {\n        this.stopGameAnimation();\n\n        this.running = false;\n    }\n\n    private stopGameAnimation(): void {\n        window.cancelAnimationFrame(this.animationRequestId);\n        this.animationRequestId = 0;\n    }\n\n    public reset(): void {\n        this.areaStateManager.reset();\n        this.gameTickCounter = 0;\n        this.stop();\n    }\n\n    public setSize(size: number): void {\n        this.area.size = size;\n        this.area.render();\n    }\n\n    public setInfectionProbability(value: number): void {\n        this.areaStateManager.setInfectionProbability(value);\n    }\n\n    public getSize(): number {\n        return this.area.size;\n    }\n\n    public showCharts(): void {\n        const modal = document.getElementById(\"chartModal\");\n        this.showChart('healthy');\n        modal != null ? modal.style.display = \"block\" : {};\n    }\n\n    public showChart(type: CellStateType | 'spreadRate'): void {\n        const chartCanvas =  document.getElementById('chart') as HTMLCanvasElement;\n        const ctx = chartCanvas.getContext('2d');\n        const chartData = this.areaStateManager.updateChartData();\n        const data = getChartInfo(type, chartData);\n        const configData = {\n            type: 'line',\n            data: data,\n        }\n        if (this._chart) {\n            this._chart.destroy();\n        }\n        this._chart = new Chart(ctx, configData);\n    }\n\n    public closeCharts(): void {\n        const modal = document.getElementById(\"chartModal\");\n        modal != null ? modal.style.display = \"none\" : {};\n    }\n}","import { IChart, IChartConfig } from \"src/models/chart\";\nimport { CellStateType } from \"src/typings/cell\";\n\nexport function getChartInfo(\n  type: CellStateType | \"spreadRate\",\n  data: IChart\n): IChartConfig {\n  const labels = data.dataTime;\n  switch (type) {\n    case \"healthy\":\n      return {\n        labels: labels,\n        datasets: [\n          {\n            label: \"Здоровые\",\n            data: data.dataHealthy,\n            fill: false,\n            borderColor: \"#00992b\",\n            tension: 0.1,\n            backgroundColor: \"#00992b\",\n          },\n        ],\n      };\n    case \"infected\":\n      return {\n        labels: labels,\n        datasets: [\n          {\n            label: \"Инфицированные\",\n            data: data.dataInfected,\n            fill: false,\n            borderColor: \"#c71010\",\n            tension: 0.1,\n            backgroundColor: \"#c71010\",\n          },\n        ],\n      };\n    case \"immune\":\n      return {\n        labels: labels,\n        datasets: [\n          {\n            label: \"Имунные\",\n            data: data.dataImmune,\n            fill: false,\n            borderColor: \"#c7c110\",\n            tension: 0.1,\n            backgroundColor: \"#c7c110\",\n          },\n        ],\n      };\n    case \"spreadRate\":\n      return {\n        labels: labels,\n        datasets: [\n          {\n            label: \"Скорость распространения инфекции\",\n            data: data.dataSpreadRate,\n            fill: false,\n            borderColor: \"#c71010\",\n            tension: 0.1,\n            backgroundColor: \"#c71010\",\n          },\n        ],\n      };\n  }\n}\n","import { Game } from \"./game\";\n\n(w => {\n    const game = new Game();\n    w[\"game\"] = game;\n    game.init();\n\n    const timeoutInput = document.getElementById(\"timeout\") as HTMLInputElement;\n    timeoutInput.addEventListener(\"input\", () => {\n        window[\"game\"].timeoutInSec = Number.parseFloat(timeoutInput.value);\n    });\n\n    const areaSizeInput = document.getElementById(\"area-size\") as HTMLInputElement;\n    areaSizeInput.addEventListener(\"input\", () => {\n        window[\"game\"].setSize(Number.parseInt(areaSizeInput.value));\n    });\n\n    const infectionProbability = document.getElementById(\"infection-probability\") as HTMLInputElement;\n    infectionProbability.addEventListener(\"input\", () => {\n        window[\"game\"].setInfectionProbability(Number.parseFloat(infectionProbability.value));\n    });\n\n    game.timeoutInSec = Number.parseFloat(timeoutInput.value);\n    game.setSize(Number.parseInt(areaSizeInput.value));\n    game.setInfectionProbability(Number.parseFloat(infectionProbability.value));\n})(window);\n"],"names":["module","exports","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexParse","str","ret","len","length","r","g","hexString","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","Color","constructor","type","charAt","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","freeze","__proto__","default","b2p","factory","chartjs","Chart","registerables","register","helpers_segment","Animator","_request","_charts","Map","_running","_lastDate","_notify","chart","anims","date","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","item","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","_duration","stop","cancel","remove","delete","animator","interpolators","boolean","factor","c0","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","defaults","animation","animatedProps","getOwnPropertyNames","key","option","properties","_animateOptions","values","newOptions","options","$shared","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isNumberFinite","sign","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","y","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","adata","convertObjectDataToArray","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","createContext","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","numbers","_index_","offset","grid","_value_","beginAtZero","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","isNullOrUndef","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","isNaN","indexOf","_getStackCount","_getStackIndex","name","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","DoughnutController","animateRotate","animateScale","cutout","rotation","circumference","spacing","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","legendItem","toggleDataVisibility","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","TAU","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","controllers","abstract","Error","DateAdapterBase","members","prototype","init","formats","format","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","_isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestCartesianItems","getProps","getAngleFromPoint","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","positions","margin","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","fullSize","setBoxDims","placeBoxes","userPadding","padding","placed","stackWeight","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","includes","_stack","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","supportsEventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","ceil","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","result","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","tickLength","getTitleHeight","fallback","font","toFont","lineHeight","titleAlign","align","_toLeftRightCenter","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","callback","margins","grace","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","autoSkip","source","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","_measureText","gcLen","garbageCollect","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","titleX","titleY","_alignStartEnd","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","merge","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","isFunction","hasFunction","needContext","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","onHover","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","o","borderRadius","_readValueToProps","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","ArcElement","borderJoinStyle","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","radiusOffset","drawArc","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","capBezierPoints","_path","_points","_segments","_pointsUpdated","_updateBezierControlPoints","segments","_computeSegments","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_pointInLine","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","skipX","skipY","bounds","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","outer","maxW","maxH","toTRBL","parseBorderWidth","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","boundingRects","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_normalizeAngle","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_getTarget","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","overrideTextDirection","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","drawLegendBox","_textX","strikethrough","fillText","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","noop","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","Colors","Decimation","Filler","SubTitle","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","addedLabels","addIfString","lastIndexOf","findOrAddLabel","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","niceNum","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","tickValue","generateTicks$1","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","logarithmic","_zero","minExp","exp","startExp","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","createPointLabelItem","itemOpts","outerDistance","drawingArea","extra","additionalAngle","pointLabelPosition","getPointPosition","yForAngle","getTextAlignForAngle","isNotOverlapped","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","centerPointLabels","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","getPointLabelContext","plFont","_longestText","setCenterPoint","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","_lookup","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","_adapters","color$1","toString","defaultValue","dimension","endsWith","klen","isValidKey","_merger","tval","sval","merger","current","_mergerIf","hasOwnProperty","keyResolvers","_splitKey","part","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","_angleDiff","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","requestAnimationFrame","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","colors","intlCache","num","JSON","stringify","Intl","NumberFormat","getNumberFormat","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","getScope$1","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","toFontString","longest","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","drawBackdrop","oldColor","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","objProps","read","parentContext","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","capControlPoint","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPropertyValue","getPositionedStyle","styles","suffix","round1","passiveSupported","propertyFn","between","compare","normalizeSegment","startBound","endBound","getSegment","prevValue","inside","subStart","readStyle","styleChanged","prevStyle","replacer","minmax","keepZero","halfWidth","subProxy","_context","_subProxy","receiver","getValue","_resolveScriptable","_resolveArray","_resolveWithContext","flip","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","cp1","cp2","sub","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_deprecated","a0","a1","arrayOfThings","thing","nestedThing","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","midpoint","controlPoints","inArea","inAreaPrev","inAreaNext","rounded","thisArg","resetTransform","clearRect","timeout","clearTimeout","setTimeout","loopable","pixelSize","fontStyle","fontFamily","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","bbWidth","bbHeight","containerSize","getBoundingClientRect","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","borders","paddings","borderBox","touches","shadowRoot","useOffsetPos","clientX","clientY","getCanvasPosition","rectX","getRightToLeftAdapter","_itemWidth","_chartjs","object","roundedRange","niceRange","fraction","direction","original","getPropertyPriority","setProperty","prevTextDirection","setRenderOpts","strokeText","inputs","info","cacheable","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","argsToUse","ticking","radians","degrees","stub","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","MathUtils","ceilMin","floorMax","random","AreaStateManager","infectionProbability","history","chartData","dataTime","dataHealthy","dataInfected","dataImmune","dataSpreadRate","stateCounter","countOfHealthyCells","saveHistory","isAreaUnchangeable","centerCoord","infectCell","coord","cell","getCell","state","stateLifetime","processInfectedCell","processImmuneCell","incrementLifeTime","immunizeCell","healthyNeighborCoords","getHealthyNeighborCoords","generateRandomNumber","recoverCell","setInfectionProbability","minMax","resetCells","resetHistory","copy","updateChartData","prevInfectedCount","countHealthy","countInfected","countImmune","cells","spreadRate","Cell","_state","_stateLifetime","infect","immunize","recover","Area","renderer","_cells","_time","initCells","MIN_SIZE","MAX_SIZE","succeed","renderCell","AreaRenderer","BORDER_SIZE","cellSize","canvasEl","getCellColor","Game","areaRenderer","areaStateManager","timeoutInSec","gameTickCounter","dateStart","animationRequestId","gameTick","startGameAnimation","stopGameAnimation","cancelAnimationFrame","setSize","getSize","showCharts","modal","showChart","getChartInfo","configData","closeCharts","game","timeoutInput","areaSizeInput"],"sourceRoot":""}